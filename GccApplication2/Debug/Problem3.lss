
Problem3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000078  00800200  00000c8a  00000d1e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c8a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000001a4  00800278  00800278  00000d96  2**0
                  ALLOC
  3 .comment      00000060  00000000  00000000  00000d96  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000df8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001e8  00000000  00000000  00000e38  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002403  00000000  00000000  00001020  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000011da  00000000  00000000  00003423  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001233  00000000  00000000  000045fd  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000074c  00000000  00000000  00005830  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000a98  00000000  00000000  00005f7c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001bc9  00000000  00000000  00006a14  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001b0  00000000  00000000  000085dd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	16 c3       	rjmp	.+1580   	; 0x692 <__vector_25>
  66:	00 00       	nop
  68:	8b c1       	rjmp	.+790    	; 0x380 <__vector_26>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	2b c3       	rjmp	.+1622   	; 0x6e8 <__vector_36>
  92:	00 00       	nop
  94:	c1 c1       	rjmp	.+898    	; 0x418 <__vector_37>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	38 c3       	rjmp	.+1648   	; 0x73e <__vector_51>
  ce:	00 00       	nop
  d0:	ef c1       	rjmp	.+990    	; 0x4b0 <__vector_52>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	5d c3       	rjmp	.+1722   	; 0x794 <__vector_54>
  da:	00 00       	nop
  dc:	35 c2       	rjmp	.+1130   	; 0x548 <__vector_55>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	ea e8       	ldi	r30, 0x8A	; 138
  fc:	fc e0       	ldi	r31, 0x0C	; 12
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a8 37       	cpi	r26, 0x78	; 120
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	24 e0       	ldi	r18, 0x04	; 4
 110:	a8 e7       	ldi	r26, 0x78	; 120
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	ac 31       	cpi	r26, 0x1C	; 28
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	5d d0       	rcall	.+186    	; 0x1da <main>
 120:	b2 c5       	rjmp	.+2916   	; 0xc86 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <delay_usec>:
	...
delay_usec:
		nop
		nop
		nop
		nop
		nop
 12c:	00 00       	nop

		dec		r24		// 1 cycle
 12e:	8a 95       	dec	r24
		brlt	L3		//if false 1 cycle else 2
 130:	8c f0       	brlt	.+34     	; 0x154 <L3>
		brge	L4		
 132:	44 f4       	brge	.+16     	; 0x144 <L4>

00000134 <L1>:
	...

00000144 <L4>:
		nop
		nop
		nop
		nop
		nop
L4:		dec		r24		
 144:	8a 95       	dec	r24
	...
		nop			
		nop			
		nop
		nop
		nop
 14e:	00 00       	nop
		brge	L1	
 150:	8c f7       	brge	.-30     	; 0x134 <L1>

00000152 <L2>:
L2:  	ret				// 5 cycles
 152:	08 95       	ret

00000154 <L3>:
L3:		adiw	r24, 33 // 1 cycle
 154:	81 96       	adiw	r24, 0x21	; 33
		lsl		r24
 156:	88 0f       	add	r24, r24
		lsl		r24
 158:	88 0f       	add	r24, r24
		lsl		r24
 15a:	88 0f       	add	r24, r24
		mul		r24, r24 // 2 cycles
 15c:	88 9f       	mul	r24, r24
		dec		r24
 15e:	8a 95       	dec	r24
 160:	4c f7       	brge	.-46     	; 0x134 <L1>

00000162 <change_case>:
		change_case(&c);
		sw_serial_putc(c);
		test_sw_serial_getc();   // library test function
	}
}
void change_case(char *c) {
 162:	fc 01       	movw	r30, r24
	if (*c >= 0x41 && *c <= 0x5A) {
 164:	90 81       	ld	r25, Z
 166:	8f eb       	ldi	r24, 0xBF	; 191
 168:	89 0f       	add	r24, r25
 16a:	8a 31       	cpi	r24, 0x1A	; 26
 16c:	18 f4       	brcc	.+6      	; 0x174 <change_case+0x12>
		*c += 0x20;
 16e:	90 5e       	subi	r25, 0xE0	; 224
 170:	90 83       	st	Z, r25
 172:	08 95       	ret
	}
	else {
		*c -= 0x20;
 174:	90 52       	subi	r25, 0x20	; 32
 176:	90 83       	st	Z, r25
 178:	08 95       	ret

0000017a <sw_serial_getc>:
	}
}
char sw_serial_getc(void) {
 17a:	ff 92       	push	r15
 17c:	0f 93       	push	r16
 17e:	1f 93       	push	r17
 180:	cf 93       	push	r28
 182:	df 93       	push	r29
 184:	01 e0       	ldi	r16, 0x01	; 1
 186:	10 e0       	ldi	r17, 0x00	; 0
 188:	c0 e0       	ldi	r28, 0x00	; 0
 18a:	d0 e0       	ldi	r29, 0x00	; 0
	char c = ' ';
 18c:	68 94       	set
 18e:	ff 24       	eor	r15, r15
 190:	f5 f8       	bld	r15, 5
 192:	03 c0       	rjmp	.+6      	; 0x19a <sw_serial_getc+0x20>
 194:	21 96       	adiw	r28, 0x01	; 1
 196:	0f 5f       	subi	r16, 0xFF	; 255
 198:	1f 4f       	sbci	r17, 0xFF	; 255
	int i;
	for(i = 0; i < 8; i++) {
		if (i == 0)
 19a:	20 97       	sbiw	r28, 0x00	; 0
 19c:	29 f4       	brne	.+10     	; 0x1a8 <sw_serial_getc+0x2e>
		c = PINB;
 19e:	f3 b0       	in	r15, 0x03	; 3
		else
		c |= (PINB << i);
		delay_usec(104);
 1a0:	88 e6       	ldi	r24, 0x68	; 104
 1a2:	90 e0       	ldi	r25, 0x00	; 0
 1a4:	bf df       	rcall	.-130    	; 0x124 <delay_usec>
 1a6:	f6 cf       	rjmp	.-20     	; 0x194 <sw_serial_getc+0x1a>
	int i;
	for(i = 0; i < 8; i++) {
		if (i == 0)
		c = PINB;
		else
		c |= (PINB << i);
 1a8:	83 b1       	in	r24, 0x03	; 3
 1aa:	90 e0       	ldi	r25, 0x00	; 0
 1ac:	0c 2e       	mov	r0, r28
 1ae:	02 c0       	rjmp	.+4      	; 0x1b4 <sw_serial_getc+0x3a>
 1b0:	88 0f       	add	r24, r24
 1b2:	99 1f       	adc	r25, r25
 1b4:	0a 94       	dec	r0
 1b6:	e2 f7       	brpl	.-8      	; 0x1b0 <sw_serial_getc+0x36>
 1b8:	f8 2a       	or	r15, r24
		delay_usec(104);
 1ba:	88 e6       	ldi	r24, 0x68	; 104
 1bc:	90 e0       	ldi	r25, 0x00	; 0
 1be:	b2 df       	rcall	.-156    	; 0x124 <delay_usec>
	}
}
char sw_serial_getc(void) {
	char c = ' ';
	int i;
	for(i = 0; i < 8; i++) {
 1c0:	08 30       	cpi	r16, 0x08	; 8
 1c2:	11 05       	cpc	r17, r1
 1c4:	3c f3       	brlt	.-50     	; 0x194 <sw_serial_getc+0x1a>
		c = PINB;
		else
		c |= (PINB << i);
		delay_usec(104);
	}
	BITBANG(0);
 1c6:	80 e0       	ldi	r24, 0x00	; 0
 1c8:	90 e0       	ldi	r25, 0x00	; 0
 1ca:	2a d0       	rcall	.+84     	; 0x220 <BITBANG>
	return c;
 1cc:	8f 2d       	mov	r24, r15
 1ce:	df 91       	pop	r29
 1d0:	cf 91       	pop	r28
 1d2:	1f 91       	pop	r17
 1d4:	0f 91       	pop	r16
 1d6:	ff 90       	pop	r15
 1d8:	08 95       	ret

000001da <main>:
//What does it do in the middle

void delay_usec(unsigned int);
void change_case(char *c);

int main(void) {
 1da:	cf 93       	push	r28
 1dc:	df 93       	push	r29
 1de:	1f 92       	push	r1
 1e0:	cd b7       	in	r28, 0x3d	; 61
 1e2:	de b7       	in	r29, 0x3e	; 62
	//DDRB |= (1 << PB6);
	DDRB = 0;
 1e4:	14 b8       	out	0x04, r1	; 4
	//long baudrate = 9600L;  // initially--can change after this works
	int tx_pin = 12;
	int rx_pin = 11;
	int framing = SERIAL_8N1;
	
	init_sw_serial(rx_pin, tx_pin, 9600, framing);  // this is your function
 1e6:	06 e0       	ldi	r16, 0x06	; 6
 1e8:	10 e0       	ldi	r17, 0x00	; 0
 1ea:	20 e8       	ldi	r18, 0x80	; 128
 1ec:	35 e2       	ldi	r19, 0x25	; 37
 1ee:	40 e0       	ldi	r20, 0x00	; 0
 1f0:	50 e0       	ldi	r21, 0x00	; 0
 1f2:	6c e0       	ldi	r22, 0x0C	; 12
 1f4:	70 e0       	ldi	r23, 0x00	; 0
 1f6:	8b e0       	ldi	r24, 0x0B	; 11
 1f8:	90 e0       	ldi	r25, 0x00	; 0
 1fa:	55 d0       	rcall	.+170    	; 0x2a6 <init_sw_serial>
	init_sw_serial_getc_test(9600, framing);   // library function: note we need the baudrate and framing here
 1fc:	46 e0       	ldi	r20, 0x06	; 6
 1fe:	50 e0       	ldi	r21, 0x00	; 0
 200:	60 e8       	ldi	r22, 0x80	; 128
 202:	75 e2       	ldi	r23, 0x25	; 37
 204:	80 e0       	ldi	r24, 0x00	; 0
 206:	90 e0       	ldi	r25, 0x00	; 0

	debug_init();
 208:	02 d5       	rcall	.+2564   	; 0xc0e <init_sw_serial_getc_test>
	sw_serial_getc();  // throw away first char
 20a:	39 d5       	rcall	.+2674   	; 0xc7e <debug_init>
 20c:	b6 df       	rcall	.-148    	; 0x17a <sw_serial_getc>
	while(1) {
		char c = sw_serial_getc();
 20e:	b5 df       	rcall	.-150    	; 0x17a <sw_serial_getc>
 210:	89 83       	std	Y+1, r24	; 0x01
		// convert any alpha char c to opposite case
		// you'll need a little code here to do this...
		change_case(&c);
 212:	ce 01       	movw	r24, r28
 214:	01 96       	adiw	r24, 0x01	; 1
 216:	a5 df       	rcall	.-182    	; 0x162 <change_case>
		sw_serial_putc(c);
 218:	89 81       	ldd	r24, Y+1	; 0x01
 21a:	14 d0       	rcall	.+40     	; 0x244 <sw_serial_putc>
 21c:	0d d5       	rcall	.+2586   	; 0xc38 <test_sw_serial_getc>
		test_sw_serial_getc();   // library test function
 21e:	f7 cf       	rjmp	.-18     	; 0x20e <main+0x34>

00000220 <BITBANG>:
 220:	89 2b       	or	r24, r25
 222:	31 f0       	breq	.+12     	; 0x230 <BITBANG+0x10>
}

void BITBANG(int b) {
	if (b) {
		// ON
		PORTB |= txPin;
 224:	95 b1       	in	r25, 0x05	; 5
 226:	80 91 78 02 	lds	r24, 0x0278	; 0x800278 <__data_end>
 22a:	89 2b       	or	r24, r25
 22c:	85 b9       	out	0x05, r24	; 5
 22e:	06 c0       	rjmp	.+12     	; 0x23c <BITBANG+0x1c>
	}
	else {
		// OFF
		PORTB &= ~txPin;
 230:	95 b1       	in	r25, 0x05	; 5
 232:	80 91 78 02 	lds	r24, 0x0278	; 0x800278 <__data_end>
 236:	80 95       	com	r24
 238:	89 23       	and	r24, r25
 23a:	85 b9       	out	0x05, r24	; 5
	}
	delay_usec(104);
 23c:	88 e6       	ldi	r24, 0x68	; 104
 23e:	90 e0       	ldi	r25, 0x00	; 0
 240:	71 cf       	rjmp	.-286    	; 0x124 <delay_usec>
 242:	08 95       	ret

00000244 <sw_serial_putc>:
	frameParam = framing;
}



void sw_serial_putc(char c){
 244:	1f 93       	push	r17
 246:	cf 93       	push	r28
 248:	df 93       	push	r29
 24a:	18 2f       	mov	r17, r24
	BITBANG(0);
 24c:	80 e0       	ldi	r24, 0x00	; 0
 24e:	90 e0       	ldi	r25, 0x00	; 0
 250:	e7 df       	rcall	.-50     	; 0x220 <BITBANG>
 252:	c8 e0       	ldi	r28, 0x08	; 8
 254:	d0 e0       	ldi	r29, 0x00	; 0
	for(int i = 0; i < 8; i++) {
		BITBANG(c & 1);
 256:	81 2f       	mov	r24, r17
 258:	81 70       	andi	r24, 0x01	; 1
 25a:	90 e0       	ldi	r25, 0x00	; 0
 25c:	e1 df       	rcall	.-62     	; 0x220 <BITBANG>
		c >>= 1;
 25e:	16 95       	lsr	r17
 260:	21 97       	sbiw	r28, 0x01	; 1



void sw_serial_putc(char c){
	BITBANG(0);
	for(int i = 0; i < 8; i++) {
 262:	c9 f7       	brne	.-14     	; 0x256 <sw_serial_putc+0x12>
		BITBANG(c & 1);
		c >>= 1;
	}
	BITBANG(1);
 264:	81 e0       	ldi	r24, 0x01	; 1
 266:	90 e0       	ldi	r25, 0x00	; 0
 268:	db df       	rcall	.-74     	; 0x220 <BITBANG>
	
}
 26a:	df 91       	pop	r29
 26c:	cf 91       	pop	r28
 26e:	1f 91       	pop	r17
 270:	08 95       	ret

00000272 <find>:
	delay_usec(104);
}

int find(int tPin) {
	for(int i = 0; i < 8; i++) {
		if(tPin == pin[i])
 272:	85 33       	cpi	r24, 0x35	; 53
 274:	91 05       	cpc	r25, r1
 276:	89 f0       	breq	.+34     	; 0x29a <find+0x28>
 278:	e2 e3       	ldi	r30, 0x32	; 50
 27a:	f2 e0       	ldi	r31, 0x02	; 2
	}
	delay_usec(104);
}

int find(int tPin) {
	for(int i = 0; i < 8; i++) {
 27c:	21 e0       	ldi	r18, 0x01	; 1
 27e:	30 e0       	ldi	r19, 0x00	; 0
		if(tPin == pin[i])
 280:	41 91       	ld	r20, Z+
 282:	51 91       	ld	r21, Z+
 284:	48 17       	cp	r20, r24
 286:	59 07       	cpc	r21, r25
 288:	59 f0       	breq	.+22     	; 0x2a0 <find+0x2e>
	}
	delay_usec(104);
}

int find(int tPin) {
	for(int i = 0; i < 8; i++) {
 28a:	2f 5f       	subi	r18, 0xFF	; 255
 28c:	3f 4f       	sbci	r19, 0xFF	; 255
 28e:	28 30       	cpi	r18, 0x08	; 8
 290:	31 05       	cpc	r19, r1
 292:	b1 f7       	brne	.-20     	; 0x280 <find+0xe>
		if(tPin == pin[i])
		return i;
	}
	return -1;
 294:	8f ef       	ldi	r24, 0xFF	; 255
 296:	9f ef       	ldi	r25, 0xFF	; 255
 298:	08 95       	ret
	}
	delay_usec(104);
}

int find(int tPin) {
	for(int i = 0; i < 8; i++) {
 29a:	80 e0       	ldi	r24, 0x00	; 0
 29c:	90 e0       	ldi	r25, 0x00	; 0
 29e:	08 95       	ret
 2a0:	82 2f       	mov	r24, r18
 2a2:	93 2f       	mov	r25, r19
		if(tPin == pin[i])
		return i;
	}
	return -1;
}
 2a4:	08 95       	ret

000002a6 <init_sw_serial>:

void delay_usec(unsigned int);

static int pin[] = {53, 52, 51, 50, 10, 11, 12, 13};

void init_sw_serial(int rx_pin, int tx_pin, long baudrate, int framing) {
 2a6:	0f 93       	push	r16
 2a8:	1f 93       	push	r17
 2aa:	cb 01       	movw	r24, r22
	rxPin = find(rx_pin);
	txPin = find(tx_pin);
 2ac:	e2 df       	rcall	.-60     	; 0x272 <find>
 2ae:	90 93 79 02 	sts	0x0279, r25	; 0x800279 <__data_end+0x1>
 2b2:	80 93 78 02 	sts	0x0278, r24	; 0x800278 <__data_end>
	switchBaud(baudrate);
	frameParam = framing;
 2b6:	10 93 1b 04 	sts	0x041B, r17	; 0x80041b <frameParam+0x1>
 2ba:	00 93 1a 04 	sts	0x041A, r16	; 0x80041a <frameParam>
}
 2be:	1f 91       	pop	r17
 2c0:	0f 91       	pop	r16
 2c2:	08 95       	ret

000002c4 <Q_getc>:
 2c4:	cf 93       	push	r28
 2c6:	df 93       	push	r29
 2c8:	e8 2f       	mov	r30, r24
 2ca:	f0 e0       	ldi	r31, 0x00	; 0
 2cc:	df 01       	movw	r26, r30
 2ce:	aa 0f       	add	r26, r26
 2d0:	bb 1f       	adc	r27, r27
 2d2:	aa 0f       	add	r26, r26
 2d4:	bb 1f       	adc	r27, r27
 2d6:	aa 0f       	add	r26, r26
 2d8:	bb 1f       	adc	r27, r27
 2da:	a6 58       	subi	r26, 0x86	; 134
 2dc:	bd 4f       	sbci	r27, 0xFD	; 253
 2de:	13 96       	adiw	r26, 0x03	; 3
 2e0:	8c 91       	ld	r24, X
 2e2:	81 fd       	sbrc	r24, 1
 2e4:	49 c0       	rjmp	.+146    	; 0x378 <Q_getc+0xb4>
 2e6:	9f b7       	in	r25, 0x3f	; 63
 2e8:	f8 94       	cli
 2ea:	df 01       	movw	r26, r30
 2ec:	aa 0f       	add	r26, r26
 2ee:	bb 1f       	adc	r27, r27
 2f0:	aa 0f       	add	r26, r26
 2f2:	bb 1f       	adc	r27, r27
 2f4:	aa 0f       	add	r26, r26
 2f6:	bb 1f       	adc	r27, r27
 2f8:	a6 58       	subi	r26, 0x86	; 134
 2fa:	bd 4f       	sbci	r27, 0xFD	; 253
 2fc:	11 96       	adiw	r26, 0x01	; 1
 2fe:	8c 91       	ld	r24, X
 300:	11 97       	sbiw	r26, 0x01	; 1
 302:	16 96       	adiw	r26, 0x06	; 6
 304:	cd 91       	ld	r28, X+
 306:	dc 91       	ld	r29, X
 308:	17 97       	sbiw	r26, 0x07	; 7
 30a:	c8 0f       	add	r28, r24
 30c:	d1 1d       	adc	r29, r1
 30e:	28 81       	ld	r18, Y
 310:	eb 01       	movw	r28, r22
 312:	28 83       	st	Y, r18
 314:	8f 5f       	subi	r24, 0xFF	; 255
 316:	12 96       	adiw	r26, 0x02	; 2
 318:	2c 91       	ld	r18, X
 31a:	12 97       	sbiw	r26, 0x02	; 2
 31c:	82 23       	and	r24, r18
 31e:	11 96       	adiw	r26, 0x01	; 1
 320:	8c 93       	st	X, r24
 322:	11 97       	sbiw	r26, 0x01	; 1
 324:	14 96       	adiw	r26, 0x04	; 4
 326:	2d 91       	ld	r18, X+
 328:	3c 91       	ld	r19, X
 32a:	15 97       	sbiw	r26, 0x05	; 5
 32c:	21 50       	subi	r18, 0x01	; 1
 32e:	31 09       	sbc	r19, r1
 330:	15 96       	adiw	r26, 0x05	; 5
 332:	3c 93       	st	X, r19
 334:	2e 93       	st	-X, r18
 336:	14 97       	sbiw	r26, 0x04	; 4
 338:	2c 91       	ld	r18, X
 33a:	82 13       	cpse	r24, r18
 33c:	0f c0       	rjmp	.+30     	; 0x35c <Q_getc+0x98>
 33e:	df 01       	movw	r26, r30
 340:	aa 0f       	add	r26, r26
 342:	bb 1f       	adc	r27, r27
 344:	aa 0f       	add	r26, r26
 346:	bb 1f       	adc	r27, r27
 348:	aa 0f       	add	r26, r26
 34a:	bb 1f       	adc	r27, r27
 34c:	a6 58       	subi	r26, 0x86	; 134
 34e:	bd 4f       	sbci	r27, 0xFD	; 253
 350:	13 96       	adiw	r26, 0x03	; 3
 352:	8c 91       	ld	r24, X
 354:	13 97       	sbiw	r26, 0x03	; 3
 356:	82 60       	ori	r24, 0x02	; 2
 358:	13 96       	adiw	r26, 0x03	; 3
 35a:	8c 93       	st	X, r24
 35c:	ee 0f       	add	r30, r30
 35e:	ff 1f       	adc	r31, r31
 360:	ee 0f       	add	r30, r30
 362:	ff 1f       	adc	r31, r31
 364:	ee 0f       	add	r30, r30
 366:	ff 1f       	adc	r31, r31
 368:	e6 58       	subi	r30, 0x86	; 134
 36a:	fd 4f       	sbci	r31, 0xFD	; 253
 36c:	83 81       	ldd	r24, Z+3	; 0x03
 36e:	8e 7f       	andi	r24, 0xFE	; 254
 370:	83 83       	std	Z+3, r24	; 0x03
 372:	9f bf       	out	0x3f, r25	; 63
 374:	81 e0       	ldi	r24, 0x01	; 1
 376:	01 c0       	rjmp	.+2      	; 0x37a <Q_getc+0xb6>
 378:	80 e0       	ldi	r24, 0x00	; 0
 37a:	df 91       	pop	r29
 37c:	cf 91       	pop	r28
 37e:	08 95       	ret

00000380 <__vector_26>:
 380:	1f 92       	push	r1
 382:	0f 92       	push	r0
 384:	0f b6       	in	r0, 0x3f	; 63
 386:	0f 92       	push	r0
 388:	11 24       	eor	r1, r1
 38a:	0b b6       	in	r0, 0x3b	; 59
 38c:	0f 92       	push	r0
 38e:	2f 93       	push	r18
 390:	3f 93       	push	r19
 392:	4f 93       	push	r20
 394:	5f 93       	push	r21
 396:	6f 93       	push	r22
 398:	7f 93       	push	r23
 39a:	8f 93       	push	r24
 39c:	9f 93       	push	r25
 39e:	af 93       	push	r26
 3a0:	bf 93       	push	r27
 3a2:	ef 93       	push	r30
 3a4:	ff 93       	push	r31
 3a6:	cf 93       	push	r28
 3a8:	df 93       	push	r29
 3aa:	1f 92       	push	r1
 3ac:	cd b7       	in	r28, 0x3d	; 61
 3ae:	de b7       	in	r29, 0x3e	; 62
 3b0:	80 91 01 02 	lds	r24, 0x0201	; 0x800201 <__data_start+0x1>
 3b4:	e8 2f       	mov	r30, r24
 3b6:	f0 e0       	ldi	r31, 0x00	; 0
 3b8:	ee 0f       	add	r30, r30
 3ba:	ff 1f       	adc	r31, r31
 3bc:	ee 0f       	add	r30, r30
 3be:	ff 1f       	adc	r31, r31
 3c0:	ee 0f       	add	r30, r30
 3c2:	ff 1f       	adc	r31, r31
 3c4:	e6 58       	subi	r30, 0x86	; 134
 3c6:	fd 4f       	sbci	r31, 0xFD	; 253
 3c8:	93 81       	ldd	r25, Z+3	; 0x03
 3ca:	91 ff       	sbrs	r25, 1
 3cc:	08 c0       	rjmp	.+16     	; 0x3de <__vector_26+0x5e>
 3ce:	e0 91 28 02 	lds	r30, 0x0228	; 0x800228 <serialregs>
 3d2:	f0 91 29 02 	lds	r31, 0x0229	; 0x800229 <serialregs+0x1>
 3d6:	81 81       	ldd	r24, Z+1	; 0x01
 3d8:	8f 7d       	andi	r24, 0xDF	; 223
 3da:	81 83       	std	Z+1, r24	; 0x01
 3dc:	07 c0       	rjmp	.+14     	; 0x3ec <__vector_26+0x6c>
 3de:	be 01       	movw	r22, r28
 3e0:	6f 5f       	subi	r22, 0xFF	; 255
 3e2:	7f 4f       	sbci	r23, 0xFF	; 255
 3e4:	6f df       	rcall	.-290    	; 0x2c4 <Q_getc>
 3e6:	89 81       	ldd	r24, Y+1	; 0x01
 3e8:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
 3ec:	0f 90       	pop	r0
 3ee:	df 91       	pop	r29
 3f0:	cf 91       	pop	r28
 3f2:	ff 91       	pop	r31
 3f4:	ef 91       	pop	r30
 3f6:	bf 91       	pop	r27
 3f8:	af 91       	pop	r26
 3fa:	9f 91       	pop	r25
 3fc:	8f 91       	pop	r24
 3fe:	7f 91       	pop	r23
 400:	6f 91       	pop	r22
 402:	5f 91       	pop	r21
 404:	4f 91       	pop	r20
 406:	3f 91       	pop	r19
 408:	2f 91       	pop	r18
 40a:	0f 90       	pop	r0
 40c:	0b be       	out	0x3b, r0	; 59
 40e:	0f 90       	pop	r0
 410:	0f be       	out	0x3f, r0	; 63
 412:	0f 90       	pop	r0
 414:	1f 90       	pop	r1
 416:	18 95       	reti

00000418 <__vector_37>:
 418:	1f 92       	push	r1
 41a:	0f 92       	push	r0
 41c:	0f b6       	in	r0, 0x3f	; 63
 41e:	0f 92       	push	r0
 420:	11 24       	eor	r1, r1
 422:	0b b6       	in	r0, 0x3b	; 59
 424:	0f 92       	push	r0
 426:	2f 93       	push	r18
 428:	3f 93       	push	r19
 42a:	4f 93       	push	r20
 42c:	5f 93       	push	r21
 42e:	6f 93       	push	r22
 430:	7f 93       	push	r23
 432:	8f 93       	push	r24
 434:	9f 93       	push	r25
 436:	af 93       	push	r26
 438:	bf 93       	push	r27
 43a:	ef 93       	push	r30
 43c:	ff 93       	push	r31
 43e:	cf 93       	push	r28
 440:	df 93       	push	r29
 442:	1f 92       	push	r1
 444:	cd b7       	in	r28, 0x3d	; 61
 446:	de b7       	in	r29, 0x3e	; 62
 448:	80 91 0b 02 	lds	r24, 0x020B	; 0x80020b <__data_start+0xb>
 44c:	e8 2f       	mov	r30, r24
 44e:	f0 e0       	ldi	r31, 0x00	; 0
 450:	ee 0f       	add	r30, r30
 452:	ff 1f       	adc	r31, r31
 454:	ee 0f       	add	r30, r30
 456:	ff 1f       	adc	r31, r31
 458:	ee 0f       	add	r30, r30
 45a:	ff 1f       	adc	r31, r31
 45c:	e6 58       	subi	r30, 0x86	; 134
 45e:	fd 4f       	sbci	r31, 0xFD	; 253
 460:	93 81       	ldd	r25, Z+3	; 0x03
 462:	91 ff       	sbrs	r25, 1
 464:	08 c0       	rjmp	.+16     	; 0x476 <__vector_37+0x5e>
 466:	e0 91 2a 02 	lds	r30, 0x022A	; 0x80022a <serialregs+0x2>
 46a:	f0 91 2b 02 	lds	r31, 0x022B	; 0x80022b <serialregs+0x3>
 46e:	81 81       	ldd	r24, Z+1	; 0x01
 470:	8f 7d       	andi	r24, 0xDF	; 223
 472:	81 83       	std	Z+1, r24	; 0x01
 474:	07 c0       	rjmp	.+14     	; 0x484 <__vector_37+0x6c>
 476:	be 01       	movw	r22, r28
 478:	6f 5f       	subi	r22, 0xFF	; 255
 47a:	7f 4f       	sbci	r23, 0xFF	; 255
 47c:	23 df       	rcall	.-442    	; 0x2c4 <Q_getc>
 47e:	89 81       	ldd	r24, Y+1	; 0x01
 480:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>
 484:	0f 90       	pop	r0
 486:	df 91       	pop	r29
 488:	cf 91       	pop	r28
 48a:	ff 91       	pop	r31
 48c:	ef 91       	pop	r30
 48e:	bf 91       	pop	r27
 490:	af 91       	pop	r26
 492:	9f 91       	pop	r25
 494:	8f 91       	pop	r24
 496:	7f 91       	pop	r23
 498:	6f 91       	pop	r22
 49a:	5f 91       	pop	r21
 49c:	4f 91       	pop	r20
 49e:	3f 91       	pop	r19
 4a0:	2f 91       	pop	r18
 4a2:	0f 90       	pop	r0
 4a4:	0b be       	out	0x3b, r0	; 59
 4a6:	0f 90       	pop	r0
 4a8:	0f be       	out	0x3f, r0	; 63
 4aa:	0f 90       	pop	r0
 4ac:	1f 90       	pop	r1
 4ae:	18 95       	reti

000004b0 <__vector_52>:
 4b0:	1f 92       	push	r1
 4b2:	0f 92       	push	r0
 4b4:	0f b6       	in	r0, 0x3f	; 63
 4b6:	0f 92       	push	r0
 4b8:	11 24       	eor	r1, r1
 4ba:	0b b6       	in	r0, 0x3b	; 59
 4bc:	0f 92       	push	r0
 4be:	2f 93       	push	r18
 4c0:	3f 93       	push	r19
 4c2:	4f 93       	push	r20
 4c4:	5f 93       	push	r21
 4c6:	6f 93       	push	r22
 4c8:	7f 93       	push	r23
 4ca:	8f 93       	push	r24
 4cc:	9f 93       	push	r25
 4ce:	af 93       	push	r26
 4d0:	bf 93       	push	r27
 4d2:	ef 93       	push	r30
 4d4:	ff 93       	push	r31
 4d6:	cf 93       	push	r28
 4d8:	df 93       	push	r29
 4da:	1f 92       	push	r1
 4dc:	cd b7       	in	r28, 0x3d	; 61
 4de:	de b7       	in	r29, 0x3e	; 62
 4e0:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <__data_start+0x15>
 4e4:	e8 2f       	mov	r30, r24
 4e6:	f0 e0       	ldi	r31, 0x00	; 0
 4e8:	ee 0f       	add	r30, r30
 4ea:	ff 1f       	adc	r31, r31
 4ec:	ee 0f       	add	r30, r30
 4ee:	ff 1f       	adc	r31, r31
 4f0:	ee 0f       	add	r30, r30
 4f2:	ff 1f       	adc	r31, r31
 4f4:	e6 58       	subi	r30, 0x86	; 134
 4f6:	fd 4f       	sbci	r31, 0xFD	; 253
 4f8:	93 81       	ldd	r25, Z+3	; 0x03
 4fa:	91 ff       	sbrs	r25, 1
 4fc:	08 c0       	rjmp	.+16     	; 0x50e <__vector_52+0x5e>
 4fe:	e0 91 2c 02 	lds	r30, 0x022C	; 0x80022c <serialregs+0x4>
 502:	f0 91 2d 02 	lds	r31, 0x022D	; 0x80022d <serialregs+0x5>
 506:	81 81       	ldd	r24, Z+1	; 0x01
 508:	8f 7d       	andi	r24, 0xDF	; 223
 50a:	81 83       	std	Z+1, r24	; 0x01
 50c:	07 c0       	rjmp	.+14     	; 0x51c <__vector_52+0x6c>
 50e:	be 01       	movw	r22, r28
 510:	6f 5f       	subi	r22, 0xFF	; 255
 512:	7f 4f       	sbci	r23, 0xFF	; 255
 514:	d7 de       	rcall	.-594    	; 0x2c4 <Q_getc>
 516:	89 81       	ldd	r24, Y+1	; 0x01
 518:	80 93 d6 00 	sts	0x00D6, r24	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7000d6>
 51c:	0f 90       	pop	r0
 51e:	df 91       	pop	r29
 520:	cf 91       	pop	r28
 522:	ff 91       	pop	r31
 524:	ef 91       	pop	r30
 526:	bf 91       	pop	r27
 528:	af 91       	pop	r26
 52a:	9f 91       	pop	r25
 52c:	8f 91       	pop	r24
 52e:	7f 91       	pop	r23
 530:	6f 91       	pop	r22
 532:	5f 91       	pop	r21
 534:	4f 91       	pop	r20
 536:	3f 91       	pop	r19
 538:	2f 91       	pop	r18
 53a:	0f 90       	pop	r0
 53c:	0b be       	out	0x3b, r0	; 59
 53e:	0f 90       	pop	r0
 540:	0f be       	out	0x3f, r0	; 63
 542:	0f 90       	pop	r0
 544:	1f 90       	pop	r1
 546:	18 95       	reti

00000548 <__vector_55>:
 548:	1f 92       	push	r1
 54a:	0f 92       	push	r0
 54c:	0f b6       	in	r0, 0x3f	; 63
 54e:	0f 92       	push	r0
 550:	11 24       	eor	r1, r1
 552:	0b b6       	in	r0, 0x3b	; 59
 554:	0f 92       	push	r0
 556:	2f 93       	push	r18
 558:	3f 93       	push	r19
 55a:	4f 93       	push	r20
 55c:	5f 93       	push	r21
 55e:	6f 93       	push	r22
 560:	7f 93       	push	r23
 562:	8f 93       	push	r24
 564:	9f 93       	push	r25
 566:	af 93       	push	r26
 568:	bf 93       	push	r27
 56a:	ef 93       	push	r30
 56c:	ff 93       	push	r31
 56e:	cf 93       	push	r28
 570:	df 93       	push	r29
 572:	1f 92       	push	r1
 574:	cd b7       	in	r28, 0x3d	; 61
 576:	de b7       	in	r29, 0x3e	; 62
 578:	80 91 1f 02 	lds	r24, 0x021F	; 0x80021f <__data_start+0x1f>
 57c:	e8 2f       	mov	r30, r24
 57e:	f0 e0       	ldi	r31, 0x00	; 0
 580:	ee 0f       	add	r30, r30
 582:	ff 1f       	adc	r31, r31
 584:	ee 0f       	add	r30, r30
 586:	ff 1f       	adc	r31, r31
 588:	ee 0f       	add	r30, r30
 58a:	ff 1f       	adc	r31, r31
 58c:	e6 58       	subi	r30, 0x86	; 134
 58e:	fd 4f       	sbci	r31, 0xFD	; 253
 590:	93 81       	ldd	r25, Z+3	; 0x03
 592:	91 ff       	sbrs	r25, 1
 594:	08 c0       	rjmp	.+16     	; 0x5a6 <__vector_55+0x5e>
 596:	e0 91 2e 02 	lds	r30, 0x022E	; 0x80022e <serialregs+0x6>
 59a:	f0 91 2f 02 	lds	r31, 0x022F	; 0x80022f <serialregs+0x7>
 59e:	81 81       	ldd	r24, Z+1	; 0x01
 5a0:	8f 7d       	andi	r24, 0xDF	; 223
 5a2:	81 83       	std	Z+1, r24	; 0x01
 5a4:	07 c0       	rjmp	.+14     	; 0x5b4 <__vector_55+0x6c>
 5a6:	be 01       	movw	r22, r28
 5a8:	6f 5f       	subi	r22, 0xFF	; 255
 5aa:	7f 4f       	sbci	r23, 0xFF	; 255
 5ac:	8b de       	rcall	.-746    	; 0x2c4 <Q_getc>
 5ae:	89 81       	ldd	r24, Y+1	; 0x01
 5b0:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <__TEXT_REGION_LENGTH__+0x700136>
 5b4:	0f 90       	pop	r0
 5b6:	df 91       	pop	r29
 5b8:	cf 91       	pop	r28
 5ba:	ff 91       	pop	r31
 5bc:	ef 91       	pop	r30
 5be:	bf 91       	pop	r27
 5c0:	af 91       	pop	r26
 5c2:	9f 91       	pop	r25
 5c4:	8f 91       	pop	r24
 5c6:	7f 91       	pop	r23
 5c8:	6f 91       	pop	r22
 5ca:	5f 91       	pop	r21
 5cc:	4f 91       	pop	r20
 5ce:	3f 91       	pop	r19
 5d0:	2f 91       	pop	r18
 5d2:	0f 90       	pop	r0
 5d4:	0b be       	out	0x3b, r0	; 59
 5d6:	0f 90       	pop	r0
 5d8:	0f be       	out	0x3f, r0	; 63
 5da:	0f 90       	pop	r0
 5dc:	1f 90       	pop	r1
 5de:	18 95       	reti

000005e0 <Q_putc>:
 5e0:	cf 93       	push	r28
 5e2:	df 93       	push	r29
 5e4:	e8 2f       	mov	r30, r24
 5e6:	f0 e0       	ldi	r31, 0x00	; 0
 5e8:	df 01       	movw	r26, r30
 5ea:	aa 0f       	add	r26, r26
 5ec:	bb 1f       	adc	r27, r27
 5ee:	aa 0f       	add	r26, r26
 5f0:	bb 1f       	adc	r27, r27
 5f2:	aa 0f       	add	r26, r26
 5f4:	bb 1f       	adc	r27, r27
 5f6:	a6 58       	subi	r26, 0x86	; 134
 5f8:	bd 4f       	sbci	r27, 0xFD	; 253
 5fa:	13 96       	adiw	r26, 0x03	; 3
 5fc:	8c 91       	ld	r24, X
 5fe:	80 fd       	sbrc	r24, 0
 600:	44 c0       	rjmp	.+136    	; 0x68a <Q_putc+0xaa>
 602:	9f b7       	in	r25, 0x3f	; 63
 604:	f8 94       	cli
 606:	df 01       	movw	r26, r30
 608:	aa 0f       	add	r26, r26
 60a:	bb 1f       	adc	r27, r27
 60c:	aa 0f       	add	r26, r26
 60e:	bb 1f       	adc	r27, r27
 610:	aa 0f       	add	r26, r26
 612:	bb 1f       	adc	r27, r27
 614:	a6 58       	subi	r26, 0x86	; 134
 616:	bd 4f       	sbci	r27, 0xFD	; 253
 618:	8c 91       	ld	r24, X
 61a:	16 96       	adiw	r26, 0x06	; 6
 61c:	cd 91       	ld	r28, X+
 61e:	dc 91       	ld	r29, X
 620:	17 97       	sbiw	r26, 0x07	; 7
 622:	c8 0f       	add	r28, r24
 624:	d1 1d       	adc	r29, r1
 626:	68 83       	st	Y, r22
 628:	8f 5f       	subi	r24, 0xFF	; 255
 62a:	12 96       	adiw	r26, 0x02	; 2
 62c:	2c 91       	ld	r18, X
 62e:	12 97       	sbiw	r26, 0x02	; 2
 630:	82 23       	and	r24, r18
 632:	8c 93       	st	X, r24
 634:	14 96       	adiw	r26, 0x04	; 4
 636:	2d 91       	ld	r18, X+
 638:	3c 91       	ld	r19, X
 63a:	15 97       	sbiw	r26, 0x05	; 5
 63c:	2f 5f       	subi	r18, 0xFF	; 255
 63e:	3f 4f       	sbci	r19, 0xFF	; 255
 640:	15 96       	adiw	r26, 0x05	; 5
 642:	3c 93       	st	X, r19
 644:	2e 93       	st	-X, r18
 646:	14 97       	sbiw	r26, 0x04	; 4
 648:	11 96       	adiw	r26, 0x01	; 1
 64a:	2c 91       	ld	r18, X
 64c:	82 13       	cpse	r24, r18
 64e:	0f c0       	rjmp	.+30     	; 0x66e <Q_putc+0x8e>
 650:	df 01       	movw	r26, r30
 652:	aa 0f       	add	r26, r26
 654:	bb 1f       	adc	r27, r27
 656:	aa 0f       	add	r26, r26
 658:	bb 1f       	adc	r27, r27
 65a:	aa 0f       	add	r26, r26
 65c:	bb 1f       	adc	r27, r27
 65e:	a6 58       	subi	r26, 0x86	; 134
 660:	bd 4f       	sbci	r27, 0xFD	; 253
 662:	13 96       	adiw	r26, 0x03	; 3
 664:	8c 91       	ld	r24, X
 666:	13 97       	sbiw	r26, 0x03	; 3
 668:	81 60       	ori	r24, 0x01	; 1
 66a:	13 96       	adiw	r26, 0x03	; 3
 66c:	8c 93       	st	X, r24
 66e:	ee 0f       	add	r30, r30
 670:	ff 1f       	adc	r31, r31
 672:	ee 0f       	add	r30, r30
 674:	ff 1f       	adc	r31, r31
 676:	ee 0f       	add	r30, r30
 678:	ff 1f       	adc	r31, r31
 67a:	e6 58       	subi	r30, 0x86	; 134
 67c:	fd 4f       	sbci	r31, 0xFD	; 253
 67e:	83 81       	ldd	r24, Z+3	; 0x03
 680:	8d 7f       	andi	r24, 0xFD	; 253
 682:	83 83       	std	Z+3, r24	; 0x03
 684:	9f bf       	out	0x3f, r25	; 63
 686:	81 e0       	ldi	r24, 0x01	; 1
 688:	01 c0       	rjmp	.+2      	; 0x68c <Q_putc+0xac>
 68a:	80 e0       	ldi	r24, 0x00	; 0
 68c:	df 91       	pop	r29
 68e:	cf 91       	pop	r28
 690:	08 95       	ret

00000692 <__vector_25>:
 692:	1f 92       	push	r1
 694:	0f 92       	push	r0
 696:	0f b6       	in	r0, 0x3f	; 63
 698:	0f 92       	push	r0
 69a:	11 24       	eor	r1, r1
 69c:	0b b6       	in	r0, 0x3b	; 59
 69e:	0f 92       	push	r0
 6a0:	2f 93       	push	r18
 6a2:	3f 93       	push	r19
 6a4:	4f 93       	push	r20
 6a6:	5f 93       	push	r21
 6a8:	6f 93       	push	r22
 6aa:	7f 93       	push	r23
 6ac:	8f 93       	push	r24
 6ae:	9f 93       	push	r25
 6b0:	af 93       	push	r26
 6b2:	bf 93       	push	r27
 6b4:	ef 93       	push	r30
 6b6:	ff 93       	push	r31
 6b8:	60 91 c6 00 	lds	r22, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
 6bc:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__data_start>
 6c0:	8f df       	rcall	.-226    	; 0x5e0 <Q_putc>
 6c2:	ff 91       	pop	r31
 6c4:	ef 91       	pop	r30
 6c6:	bf 91       	pop	r27
 6c8:	af 91       	pop	r26
 6ca:	9f 91       	pop	r25
 6cc:	8f 91       	pop	r24
 6ce:	7f 91       	pop	r23
 6d0:	6f 91       	pop	r22
 6d2:	5f 91       	pop	r21
 6d4:	4f 91       	pop	r20
 6d6:	3f 91       	pop	r19
 6d8:	2f 91       	pop	r18
 6da:	0f 90       	pop	r0
 6dc:	0b be       	out	0x3b, r0	; 59
 6de:	0f 90       	pop	r0
 6e0:	0f be       	out	0x3f, r0	; 63
 6e2:	0f 90       	pop	r0
 6e4:	1f 90       	pop	r1
 6e6:	18 95       	reti

000006e8 <__vector_36>:
 6e8:	1f 92       	push	r1
 6ea:	0f 92       	push	r0
 6ec:	0f b6       	in	r0, 0x3f	; 63
 6ee:	0f 92       	push	r0
 6f0:	11 24       	eor	r1, r1
 6f2:	0b b6       	in	r0, 0x3b	; 59
 6f4:	0f 92       	push	r0
 6f6:	2f 93       	push	r18
 6f8:	3f 93       	push	r19
 6fa:	4f 93       	push	r20
 6fc:	5f 93       	push	r21
 6fe:	6f 93       	push	r22
 700:	7f 93       	push	r23
 702:	8f 93       	push	r24
 704:	9f 93       	push	r25
 706:	af 93       	push	r26
 708:	bf 93       	push	r27
 70a:	ef 93       	push	r30
 70c:	ff 93       	push	r31
 70e:	60 91 ce 00 	lds	r22, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>
 712:	80 91 0a 02 	lds	r24, 0x020A	; 0x80020a <__data_start+0xa>
 716:	64 df       	rcall	.-312    	; 0x5e0 <Q_putc>
 718:	ff 91       	pop	r31
 71a:	ef 91       	pop	r30
 71c:	bf 91       	pop	r27
 71e:	af 91       	pop	r26
 720:	9f 91       	pop	r25
 722:	8f 91       	pop	r24
 724:	7f 91       	pop	r23
 726:	6f 91       	pop	r22
 728:	5f 91       	pop	r21
 72a:	4f 91       	pop	r20
 72c:	3f 91       	pop	r19
 72e:	2f 91       	pop	r18
 730:	0f 90       	pop	r0
 732:	0b be       	out	0x3b, r0	; 59
 734:	0f 90       	pop	r0
 736:	0f be       	out	0x3f, r0	; 63
 738:	0f 90       	pop	r0
 73a:	1f 90       	pop	r1
 73c:	18 95       	reti

0000073e <__vector_51>:
 73e:	1f 92       	push	r1
 740:	0f 92       	push	r0
 742:	0f b6       	in	r0, 0x3f	; 63
 744:	0f 92       	push	r0
 746:	11 24       	eor	r1, r1
 748:	0b b6       	in	r0, 0x3b	; 59
 74a:	0f 92       	push	r0
 74c:	2f 93       	push	r18
 74e:	3f 93       	push	r19
 750:	4f 93       	push	r20
 752:	5f 93       	push	r21
 754:	6f 93       	push	r22
 756:	7f 93       	push	r23
 758:	8f 93       	push	r24
 75a:	9f 93       	push	r25
 75c:	af 93       	push	r26
 75e:	bf 93       	push	r27
 760:	ef 93       	push	r30
 762:	ff 93       	push	r31
 764:	60 91 d6 00 	lds	r22, 0x00D6	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7000d6>
 768:	80 91 14 02 	lds	r24, 0x0214	; 0x800214 <__data_start+0x14>
 76c:	39 df       	rcall	.-398    	; 0x5e0 <Q_putc>
 76e:	ff 91       	pop	r31
 770:	ef 91       	pop	r30
 772:	bf 91       	pop	r27
 774:	af 91       	pop	r26
 776:	9f 91       	pop	r25
 778:	8f 91       	pop	r24
 77a:	7f 91       	pop	r23
 77c:	6f 91       	pop	r22
 77e:	5f 91       	pop	r21
 780:	4f 91       	pop	r20
 782:	3f 91       	pop	r19
 784:	2f 91       	pop	r18
 786:	0f 90       	pop	r0
 788:	0b be       	out	0x3b, r0	; 59
 78a:	0f 90       	pop	r0
 78c:	0f be       	out	0x3f, r0	; 63
 78e:	0f 90       	pop	r0
 790:	1f 90       	pop	r1
 792:	18 95       	reti

00000794 <__vector_54>:
 794:	1f 92       	push	r1
 796:	0f 92       	push	r0
 798:	0f b6       	in	r0, 0x3f	; 63
 79a:	0f 92       	push	r0
 79c:	11 24       	eor	r1, r1
 79e:	0b b6       	in	r0, 0x3b	; 59
 7a0:	0f 92       	push	r0
 7a2:	2f 93       	push	r18
 7a4:	3f 93       	push	r19
 7a6:	4f 93       	push	r20
 7a8:	5f 93       	push	r21
 7aa:	6f 93       	push	r22
 7ac:	7f 93       	push	r23
 7ae:	8f 93       	push	r24
 7b0:	9f 93       	push	r25
 7b2:	af 93       	push	r26
 7b4:	bf 93       	push	r27
 7b6:	ef 93       	push	r30
 7b8:	ff 93       	push	r31
 7ba:	60 91 36 01 	lds	r22, 0x0136	; 0x800136 <__TEXT_REGION_LENGTH__+0x700136>
 7be:	80 91 1e 02 	lds	r24, 0x021E	; 0x80021e <__data_start+0x1e>
 7c2:	0e df       	rcall	.-484    	; 0x5e0 <Q_putc>
 7c4:	ff 91       	pop	r31
 7c6:	ef 91       	pop	r30
 7c8:	bf 91       	pop	r27
 7ca:	af 91       	pop	r26
 7cc:	9f 91       	pop	r25
 7ce:	8f 91       	pop	r24
 7d0:	7f 91       	pop	r23
 7d2:	6f 91       	pop	r22
 7d4:	5f 91       	pop	r21
 7d6:	4f 91       	pop	r20
 7d8:	3f 91       	pop	r19
 7da:	2f 91       	pop	r18
 7dc:	0f 90       	pop	r0
 7de:	0b be       	out	0x3b, r0	; 59
 7e0:	0f 90       	pop	r0
 7e2:	0f be       	out	0x3f, r0	; 63
 7e4:	0f 90       	pop	r0
 7e6:	1f 90       	pop	r1
 7e8:	18 95       	reti

000007ea <Serial0_poll_write>:
 7ea:	e0 ec       	ldi	r30, 0xC0	; 192
 7ec:	f0 e0       	ldi	r31, 0x00	; 0
 7ee:	90 81       	ld	r25, Z
 7f0:	95 ff       	sbrs	r25, 5
 7f2:	fd cf       	rjmp	.-6      	; 0x7ee <Serial0_poll_write+0x4>
 7f4:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
 7f8:	08 95       	ret

000007fa <Serial0_poll_print>:
 7fa:	cf 93       	push	r28
 7fc:	df 93       	push	r29
 7fe:	ec 01       	movw	r28, r24
 800:	88 81       	ld	r24, Y
 802:	88 23       	and	r24, r24
 804:	29 f0       	breq	.+10     	; 0x810 <Serial0_poll_print+0x16>
 806:	21 96       	adiw	r28, 0x01	; 1
 808:	f0 df       	rcall	.-32     	; 0x7ea <Serial0_poll_write>
 80a:	89 91       	ld	r24, Y+
 80c:	81 11       	cpse	r24, r1
 80e:	fc cf       	rjmp	.-8      	; 0x808 <Serial0_poll_print+0xe>
 810:	df 91       	pop	r29
 812:	cf 91       	pop	r28
 814:	08 95       	ret

00000816 <Serial0_config>:
 816:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
 81a:	2f ef       	ldi	r18, 0xFF	; 255
 81c:	39 ef       	ldi	r19, 0xF9	; 249
 81e:	50 e0       	ldi	r21, 0x00	; 0
 820:	21 50       	subi	r18, 0x01	; 1
 822:	30 40       	sbci	r19, 0x00	; 0
 824:	50 40       	sbci	r21, 0x00	; 0
 826:	e1 f7       	brne	.-8      	; 0x820 <Serial0_config+0xa>
 828:	00 c0       	rjmp	.+0      	; 0x82a <Serial0_config+0x14>
 82a:	00 00       	nop
 82c:	20 91 c6 00 	lds	r18, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
 830:	60 38       	cpi	r22, 0x80	; 128
 832:	20 e7       	ldi	r18, 0x70	; 112
 834:	72 07       	cpc	r23, r18
 836:	81 05       	cpc	r24, r1
 838:	91 05       	cpc	r25, r1
 83a:	09 f4       	brne	.+2      	; 0x83e <Serial0_config+0x28>
 83c:	8f c0       	rjmp	.+286    	; 0x95c <Serial0_config+0x146>
 83e:	24 f5       	brge	.+72     	; 0x888 <Serial0_config+0x72>
 840:	60 38       	cpi	r22, 0x80	; 128
 842:	55 e2       	ldi	r21, 0x25	; 37
 844:	75 07       	cpc	r23, r21
 846:	81 05       	cpc	r24, r1
 848:	91 05       	cpc	r25, r1
 84a:	09 f4       	brne	.+2      	; 0x84e <Serial0_config+0x38>
 84c:	63 c0       	rjmp	.+198    	; 0x914 <Serial0_config+0xfe>
 84e:	74 f4       	brge	.+28     	; 0x86c <Serial0_config+0x56>
 850:	60 36       	cpi	r22, 0x60	; 96
 852:	39 e0       	ldi	r19, 0x09	; 9
 854:	73 07       	cpc	r23, r19
 856:	81 05       	cpc	r24, r1
 858:	91 05       	cpc	r25, r1
 85a:	09 f4       	brne	.+2      	; 0x85e <Serial0_config+0x48>
 85c:	43 c0       	rjmp	.+134    	; 0x8e4 <Serial0_config+0xce>
 85e:	60 3c       	cpi	r22, 0xC0	; 192
 860:	72 41       	sbci	r23, 0x12	; 18
 862:	81 05       	cpc	r24, r1
 864:	91 05       	cpc	r25, r1
 866:	09 f4       	brne	.+2      	; 0x86a <Serial0_config+0x54>
 868:	49 c0       	rjmp	.+146    	; 0x8fc <Serial0_config+0xe6>
 86a:	cb c0       	rjmp	.+406    	; 0xa02 <Serial0_config+0x1ec>
 86c:	60 34       	cpi	r22, 0x40	; 64
 86e:	28 e3       	ldi	r18, 0x38	; 56
 870:	72 07       	cpc	r23, r18
 872:	81 05       	cpc	r24, r1
 874:	91 05       	cpc	r25, r1
 876:	09 f4       	brne	.+2      	; 0x87a <Serial0_config+0x64>
 878:	59 c0       	rjmp	.+178    	; 0x92c <Serial0_config+0x116>
 87a:	61 15       	cp	r22, r1
 87c:	7b 44       	sbci	r23, 0x4B	; 75
 87e:	81 05       	cpc	r24, r1
 880:	91 05       	cpc	r25, r1
 882:	09 f4       	brne	.+2      	; 0x886 <Serial0_config+0x70>
 884:	5f c0       	rjmp	.+190    	; 0x944 <Serial0_config+0x12e>
 886:	bd c0       	rjmp	.+378    	; 0xa02 <Serial0_config+0x1ec>
 888:	61 15       	cp	r22, r1
 88a:	52 ec       	ldi	r21, 0xC2	; 194
 88c:	75 07       	cpc	r23, r21
 88e:	51 e0       	ldi	r21, 0x01	; 1
 890:	85 07       	cpc	r24, r21
 892:	91 05       	cpc	r25, r1
 894:	09 f4       	brne	.+2      	; 0x898 <Serial0_config+0x82>
 896:	86 c0       	rjmp	.+268    	; 0x9a4 <Serial0_config+0x18e>
 898:	74 f4       	brge	.+28     	; 0x8b6 <Serial0_config+0xa0>
 89a:	61 15       	cp	r22, r1
 89c:	36 e9       	ldi	r19, 0x96	; 150
 89e:	73 07       	cpc	r23, r19
 8a0:	81 05       	cpc	r24, r1
 8a2:	91 05       	cpc	r25, r1
 8a4:	09 f4       	brne	.+2      	; 0x8a8 <Serial0_config+0x92>
 8a6:	66 c0       	rjmp	.+204    	; 0x974 <Serial0_config+0x15e>
 8a8:	61 15       	cp	r22, r1
 8aa:	71 4e       	sbci	r23, 0xE1	; 225
 8ac:	81 05       	cpc	r24, r1
 8ae:	91 05       	cpc	r25, r1
 8b0:	09 f4       	brne	.+2      	; 0x8b4 <Serial0_config+0x9e>
 8b2:	6c c0       	rjmp	.+216    	; 0x98c <Serial0_config+0x176>
 8b4:	a6 c0       	rjmp	.+332    	; 0xa02 <Serial0_config+0x1ec>
 8b6:	60 32       	cpi	r22, 0x20	; 32
 8b8:	21 ea       	ldi	r18, 0xA1	; 161
 8ba:	72 07       	cpc	r23, r18
 8bc:	27 e0       	ldi	r18, 0x07	; 7
 8be:	82 07       	cpc	r24, r18
 8c0:	91 05       	cpc	r25, r1
 8c2:	09 f4       	brne	.+2      	; 0x8c6 <Serial0_config+0xb0>
 8c4:	87 c0       	rjmp	.+270    	; 0x9d4 <Serial0_config+0x1be>
 8c6:	60 34       	cpi	r22, 0x40	; 64
 8c8:	32 e4       	ldi	r19, 0x42	; 66
 8ca:	73 07       	cpc	r23, r19
 8cc:	3f e0       	ldi	r19, 0x0F	; 15
 8ce:	83 07       	cpc	r24, r19
 8d0:	91 05       	cpc	r25, r1
 8d2:	09 f4       	brne	.+2      	; 0x8d6 <Serial0_config+0xc0>
 8d4:	8b c0       	rjmp	.+278    	; 0x9ec <Serial0_config+0x1d6>
 8d6:	60 39       	cpi	r22, 0x90	; 144
 8d8:	70 4d       	sbci	r23, 0xD0	; 208
 8da:	83 40       	sbci	r24, 0x03	; 3
 8dc:	91 05       	cpc	r25, r1
 8de:	09 f0       	breq	.+2      	; 0x8e2 <Serial0_config+0xcc>
 8e0:	90 c0       	rjmp	.+288    	; 0xa02 <Serial0_config+0x1ec>
 8e2:	6c c0       	rjmp	.+216    	; 0x9bc <Serial0_config+0x1a6>
 8e4:	80 e4       	ldi	r24, 0x40	; 64
 8e6:	93 e0       	ldi	r25, 0x03	; 3
 8e8:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
 8ec:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
 8f0:	e0 ec       	ldi	r30, 0xC0	; 192
 8f2:	f0 e0       	ldi	r31, 0x00	; 0
 8f4:	80 81       	ld	r24, Z
 8f6:	82 60       	ori	r24, 0x02	; 2
 8f8:	80 83       	st	Z, r24
 8fa:	83 c0       	rjmp	.+262    	; 0xa02 <Serial0_config+0x1ec>
 8fc:	80 ea       	ldi	r24, 0xA0	; 160
 8fe:	91 e0       	ldi	r25, 0x01	; 1
 900:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
 904:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
 908:	e0 ec       	ldi	r30, 0xC0	; 192
 90a:	f0 e0       	ldi	r31, 0x00	; 0
 90c:	80 81       	ld	r24, Z
 90e:	82 60       	ori	r24, 0x02	; 2
 910:	80 83       	st	Z, r24
 912:	77 c0       	rjmp	.+238    	; 0xa02 <Serial0_config+0x1ec>
 914:	87 e6       	ldi	r24, 0x67	; 103
 916:	90 e0       	ldi	r25, 0x00	; 0
 918:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
 91c:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
 920:	e0 ec       	ldi	r30, 0xC0	; 192
 922:	f0 e0       	ldi	r31, 0x00	; 0
 924:	80 81       	ld	r24, Z
 926:	8d 7f       	andi	r24, 0xFD	; 253
 928:	80 83       	st	Z, r24
 92a:	6b c0       	rjmp	.+214    	; 0xa02 <Serial0_config+0x1ec>
 92c:	8a e8       	ldi	r24, 0x8A	; 138
 92e:	90 e0       	ldi	r25, 0x00	; 0
 930:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
 934:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
 938:	e0 ec       	ldi	r30, 0xC0	; 192
 93a:	f0 e0       	ldi	r31, 0x00	; 0
 93c:	80 81       	ld	r24, Z
 93e:	82 60       	ori	r24, 0x02	; 2
 940:	80 83       	st	Z, r24
 942:	5f c0       	rjmp	.+190    	; 0xa02 <Serial0_config+0x1ec>
 944:	83 e3       	ldi	r24, 0x33	; 51
 946:	90 e0       	ldi	r25, 0x00	; 0
 948:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
 94c:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
 950:	e0 ec       	ldi	r30, 0xC0	; 192
 952:	f0 e0       	ldi	r31, 0x00	; 0
 954:	80 81       	ld	r24, Z
 956:	8d 7f       	andi	r24, 0xFD	; 253
 958:	80 83       	st	Z, r24
 95a:	53 c0       	rjmp	.+166    	; 0xa02 <Serial0_config+0x1ec>
 95c:	84 e4       	ldi	r24, 0x44	; 68
 95e:	90 e0       	ldi	r25, 0x00	; 0
 960:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
 964:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
 968:	e0 ec       	ldi	r30, 0xC0	; 192
 96a:	f0 e0       	ldi	r31, 0x00	; 0
 96c:	80 81       	ld	r24, Z
 96e:	82 60       	ori	r24, 0x02	; 2
 970:	80 83       	st	Z, r24
 972:	47 c0       	rjmp	.+142    	; 0xa02 <Serial0_config+0x1ec>
 974:	89 e1       	ldi	r24, 0x19	; 25
 976:	90 e0       	ldi	r25, 0x00	; 0
 978:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
 97c:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
 980:	e0 ec       	ldi	r30, 0xC0	; 192
 982:	f0 e0       	ldi	r31, 0x00	; 0
 984:	80 81       	ld	r24, Z
 986:	8d 7f       	andi	r24, 0xFD	; 253
 988:	80 83       	st	Z, r24
 98a:	3b c0       	rjmp	.+118    	; 0xa02 <Serial0_config+0x1ec>
 98c:	82 e2       	ldi	r24, 0x22	; 34
 98e:	90 e0       	ldi	r25, 0x00	; 0
 990:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
 994:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
 998:	e0 ec       	ldi	r30, 0xC0	; 192
 99a:	f0 e0       	ldi	r31, 0x00	; 0
 99c:	80 81       	ld	r24, Z
 99e:	82 60       	ori	r24, 0x02	; 2
 9a0:	80 83       	st	Z, r24
 9a2:	2f c0       	rjmp	.+94     	; 0xa02 <Serial0_config+0x1ec>
 9a4:	80 e1       	ldi	r24, 0x10	; 16
 9a6:	90 e0       	ldi	r25, 0x00	; 0
 9a8:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
 9ac:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
 9b0:	e0 ec       	ldi	r30, 0xC0	; 192
 9b2:	f0 e0       	ldi	r31, 0x00	; 0
 9b4:	80 81       	ld	r24, Z
 9b6:	82 60       	ori	r24, 0x02	; 2
 9b8:	80 83       	st	Z, r24
 9ba:	23 c0       	rjmp	.+70     	; 0xa02 <Serial0_config+0x1ec>
 9bc:	87 e0       	ldi	r24, 0x07	; 7
 9be:	90 e0       	ldi	r25, 0x00	; 0
 9c0:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
 9c4:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
 9c8:	e0 ec       	ldi	r30, 0xC0	; 192
 9ca:	f0 e0       	ldi	r31, 0x00	; 0
 9cc:	80 81       	ld	r24, Z
 9ce:	82 60       	ori	r24, 0x02	; 2
 9d0:	80 83       	st	Z, r24
 9d2:	17 c0       	rjmp	.+46     	; 0xa02 <Serial0_config+0x1ec>
 9d4:	83 e0       	ldi	r24, 0x03	; 3
 9d6:	90 e0       	ldi	r25, 0x00	; 0
 9d8:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
 9dc:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
 9e0:	e0 ec       	ldi	r30, 0xC0	; 192
 9e2:	f0 e0       	ldi	r31, 0x00	; 0
 9e4:	80 81       	ld	r24, Z
 9e6:	82 60       	ori	r24, 0x02	; 2
 9e8:	80 83       	st	Z, r24
 9ea:	0b c0       	rjmp	.+22     	; 0xa02 <Serial0_config+0x1ec>
 9ec:	81 e0       	ldi	r24, 0x01	; 1
 9ee:	90 e0       	ldi	r25, 0x00	; 0
 9f0:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
 9f4:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
 9f8:	e0 ec       	ldi	r30, 0xC0	; 192
 9fa:	f0 e0       	ldi	r31, 0x00	; 0
 9fc:	80 81       	ld	r24, Z
 9fe:	82 60       	ori	r24, 0x02	; 2
 a00:	80 83       	st	Z, r24
 a02:	40 93 c2 00 	sts	0x00C2, r20	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
 a06:	e1 ec       	ldi	r30, 0xC1	; 193
 a08:	f0 e0       	ldi	r31, 0x00	; 0
 a0a:	80 81       	ld	r24, Z
 a0c:	88 61       	ori	r24, 0x18	; 24
 a0e:	80 83       	st	Z, r24
 a10:	08 95       	ret

00000a12 <Serial1_config>:
 a12:	10 92 c9 00 	sts	0x00C9, r1	; 0x8000c9 <__TEXT_REGION_LENGTH__+0x7000c9>
 a16:	2f ef       	ldi	r18, 0xFF	; 255
 a18:	39 ef       	ldi	r19, 0xF9	; 249
 a1a:	50 e0       	ldi	r21, 0x00	; 0
 a1c:	21 50       	subi	r18, 0x01	; 1
 a1e:	30 40       	sbci	r19, 0x00	; 0
 a20:	50 40       	sbci	r21, 0x00	; 0
 a22:	e1 f7       	brne	.-8      	; 0xa1c <Serial1_config+0xa>
 a24:	00 c0       	rjmp	.+0      	; 0xa26 <Serial1_config+0x14>
 a26:	00 00       	nop
 a28:	20 91 ce 00 	lds	r18, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>
 a2c:	60 38       	cpi	r22, 0x80	; 128
 a2e:	20 e7       	ldi	r18, 0x70	; 112
 a30:	72 07       	cpc	r23, r18
 a32:	81 05       	cpc	r24, r1
 a34:	91 05       	cpc	r25, r1
 a36:	09 f4       	brne	.+2      	; 0xa3a <Serial1_config+0x28>
 a38:	8f c0       	rjmp	.+286    	; 0xb58 <Serial1_config+0x146>
 a3a:	24 f5       	brge	.+72     	; 0xa84 <Serial1_config+0x72>
 a3c:	60 38       	cpi	r22, 0x80	; 128
 a3e:	55 e2       	ldi	r21, 0x25	; 37
 a40:	75 07       	cpc	r23, r21
 a42:	81 05       	cpc	r24, r1
 a44:	91 05       	cpc	r25, r1
 a46:	09 f4       	brne	.+2      	; 0xa4a <Serial1_config+0x38>
 a48:	63 c0       	rjmp	.+198    	; 0xb10 <Serial1_config+0xfe>
 a4a:	74 f4       	brge	.+28     	; 0xa68 <Serial1_config+0x56>
 a4c:	60 36       	cpi	r22, 0x60	; 96
 a4e:	39 e0       	ldi	r19, 0x09	; 9
 a50:	73 07       	cpc	r23, r19
 a52:	81 05       	cpc	r24, r1
 a54:	91 05       	cpc	r25, r1
 a56:	09 f4       	brne	.+2      	; 0xa5a <Serial1_config+0x48>
 a58:	43 c0       	rjmp	.+134    	; 0xae0 <Serial1_config+0xce>
 a5a:	60 3c       	cpi	r22, 0xC0	; 192
 a5c:	72 41       	sbci	r23, 0x12	; 18
 a5e:	81 05       	cpc	r24, r1
 a60:	91 05       	cpc	r25, r1
 a62:	09 f4       	brne	.+2      	; 0xa66 <Serial1_config+0x54>
 a64:	49 c0       	rjmp	.+146    	; 0xaf8 <Serial1_config+0xe6>
 a66:	cb c0       	rjmp	.+406    	; 0xbfe <Serial1_config+0x1ec>
 a68:	60 34       	cpi	r22, 0x40	; 64
 a6a:	28 e3       	ldi	r18, 0x38	; 56
 a6c:	72 07       	cpc	r23, r18
 a6e:	81 05       	cpc	r24, r1
 a70:	91 05       	cpc	r25, r1
 a72:	09 f4       	brne	.+2      	; 0xa76 <Serial1_config+0x64>
 a74:	59 c0       	rjmp	.+178    	; 0xb28 <Serial1_config+0x116>
 a76:	61 15       	cp	r22, r1
 a78:	7b 44       	sbci	r23, 0x4B	; 75
 a7a:	81 05       	cpc	r24, r1
 a7c:	91 05       	cpc	r25, r1
 a7e:	09 f4       	brne	.+2      	; 0xa82 <Serial1_config+0x70>
 a80:	5f c0       	rjmp	.+190    	; 0xb40 <Serial1_config+0x12e>
 a82:	bd c0       	rjmp	.+378    	; 0xbfe <Serial1_config+0x1ec>
 a84:	61 15       	cp	r22, r1
 a86:	52 ec       	ldi	r21, 0xC2	; 194
 a88:	75 07       	cpc	r23, r21
 a8a:	51 e0       	ldi	r21, 0x01	; 1
 a8c:	85 07       	cpc	r24, r21
 a8e:	91 05       	cpc	r25, r1
 a90:	09 f4       	brne	.+2      	; 0xa94 <Serial1_config+0x82>
 a92:	86 c0       	rjmp	.+268    	; 0xba0 <Serial1_config+0x18e>
 a94:	74 f4       	brge	.+28     	; 0xab2 <Serial1_config+0xa0>
 a96:	61 15       	cp	r22, r1
 a98:	36 e9       	ldi	r19, 0x96	; 150
 a9a:	73 07       	cpc	r23, r19
 a9c:	81 05       	cpc	r24, r1
 a9e:	91 05       	cpc	r25, r1
 aa0:	09 f4       	brne	.+2      	; 0xaa4 <Serial1_config+0x92>
 aa2:	66 c0       	rjmp	.+204    	; 0xb70 <Serial1_config+0x15e>
 aa4:	61 15       	cp	r22, r1
 aa6:	71 4e       	sbci	r23, 0xE1	; 225
 aa8:	81 05       	cpc	r24, r1
 aaa:	91 05       	cpc	r25, r1
 aac:	09 f4       	brne	.+2      	; 0xab0 <Serial1_config+0x9e>
 aae:	6c c0       	rjmp	.+216    	; 0xb88 <Serial1_config+0x176>
 ab0:	a6 c0       	rjmp	.+332    	; 0xbfe <Serial1_config+0x1ec>
 ab2:	60 32       	cpi	r22, 0x20	; 32
 ab4:	21 ea       	ldi	r18, 0xA1	; 161
 ab6:	72 07       	cpc	r23, r18
 ab8:	27 e0       	ldi	r18, 0x07	; 7
 aba:	82 07       	cpc	r24, r18
 abc:	91 05       	cpc	r25, r1
 abe:	09 f4       	brne	.+2      	; 0xac2 <Serial1_config+0xb0>
 ac0:	87 c0       	rjmp	.+270    	; 0xbd0 <Serial1_config+0x1be>
 ac2:	60 34       	cpi	r22, 0x40	; 64
 ac4:	32 e4       	ldi	r19, 0x42	; 66
 ac6:	73 07       	cpc	r23, r19
 ac8:	3f e0       	ldi	r19, 0x0F	; 15
 aca:	83 07       	cpc	r24, r19
 acc:	91 05       	cpc	r25, r1
 ace:	09 f4       	brne	.+2      	; 0xad2 <Serial1_config+0xc0>
 ad0:	8b c0       	rjmp	.+278    	; 0xbe8 <Serial1_config+0x1d6>
 ad2:	60 39       	cpi	r22, 0x90	; 144
 ad4:	70 4d       	sbci	r23, 0xD0	; 208
 ad6:	83 40       	sbci	r24, 0x03	; 3
 ad8:	91 05       	cpc	r25, r1
 ada:	09 f0       	breq	.+2      	; 0xade <Serial1_config+0xcc>
 adc:	90 c0       	rjmp	.+288    	; 0xbfe <Serial1_config+0x1ec>
 ade:	6c c0       	rjmp	.+216    	; 0xbb8 <Serial1_config+0x1a6>
 ae0:	80 e4       	ldi	r24, 0x40	; 64
 ae2:	93 e0       	ldi	r25, 0x03	; 3
 ae4:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>
 ae8:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7000cc>
 aec:	e8 ec       	ldi	r30, 0xC8	; 200
 aee:	f0 e0       	ldi	r31, 0x00	; 0
 af0:	80 81       	ld	r24, Z
 af2:	82 60       	ori	r24, 0x02	; 2
 af4:	80 83       	st	Z, r24
 af6:	83 c0       	rjmp	.+262    	; 0xbfe <Serial1_config+0x1ec>
 af8:	80 ea       	ldi	r24, 0xA0	; 160
 afa:	91 e0       	ldi	r25, 0x01	; 1
 afc:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>
 b00:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7000cc>
 b04:	e8 ec       	ldi	r30, 0xC8	; 200
 b06:	f0 e0       	ldi	r31, 0x00	; 0
 b08:	80 81       	ld	r24, Z
 b0a:	82 60       	ori	r24, 0x02	; 2
 b0c:	80 83       	st	Z, r24
 b0e:	77 c0       	rjmp	.+238    	; 0xbfe <Serial1_config+0x1ec>
 b10:	87 e6       	ldi	r24, 0x67	; 103
 b12:	90 e0       	ldi	r25, 0x00	; 0
 b14:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>
 b18:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7000cc>
 b1c:	e8 ec       	ldi	r30, 0xC8	; 200
 b1e:	f0 e0       	ldi	r31, 0x00	; 0
 b20:	80 81       	ld	r24, Z
 b22:	8d 7f       	andi	r24, 0xFD	; 253
 b24:	80 83       	st	Z, r24
 b26:	6b c0       	rjmp	.+214    	; 0xbfe <Serial1_config+0x1ec>
 b28:	8a e8       	ldi	r24, 0x8A	; 138
 b2a:	90 e0       	ldi	r25, 0x00	; 0
 b2c:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>
 b30:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7000cc>
 b34:	e8 ec       	ldi	r30, 0xC8	; 200
 b36:	f0 e0       	ldi	r31, 0x00	; 0
 b38:	80 81       	ld	r24, Z
 b3a:	82 60       	ori	r24, 0x02	; 2
 b3c:	80 83       	st	Z, r24
 b3e:	5f c0       	rjmp	.+190    	; 0xbfe <Serial1_config+0x1ec>
 b40:	83 e3       	ldi	r24, 0x33	; 51
 b42:	90 e0       	ldi	r25, 0x00	; 0
 b44:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>
 b48:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7000cc>
 b4c:	e8 ec       	ldi	r30, 0xC8	; 200
 b4e:	f0 e0       	ldi	r31, 0x00	; 0
 b50:	80 81       	ld	r24, Z
 b52:	8d 7f       	andi	r24, 0xFD	; 253
 b54:	80 83       	st	Z, r24
 b56:	53 c0       	rjmp	.+166    	; 0xbfe <Serial1_config+0x1ec>
 b58:	84 e4       	ldi	r24, 0x44	; 68
 b5a:	90 e0       	ldi	r25, 0x00	; 0
 b5c:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>
 b60:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7000cc>
 b64:	e8 ec       	ldi	r30, 0xC8	; 200
 b66:	f0 e0       	ldi	r31, 0x00	; 0
 b68:	80 81       	ld	r24, Z
 b6a:	82 60       	ori	r24, 0x02	; 2
 b6c:	80 83       	st	Z, r24
 b6e:	47 c0       	rjmp	.+142    	; 0xbfe <Serial1_config+0x1ec>
 b70:	89 e1       	ldi	r24, 0x19	; 25
 b72:	90 e0       	ldi	r25, 0x00	; 0
 b74:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>
 b78:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7000cc>
 b7c:	e8 ec       	ldi	r30, 0xC8	; 200
 b7e:	f0 e0       	ldi	r31, 0x00	; 0
 b80:	80 81       	ld	r24, Z
 b82:	8d 7f       	andi	r24, 0xFD	; 253
 b84:	80 83       	st	Z, r24
 b86:	3b c0       	rjmp	.+118    	; 0xbfe <Serial1_config+0x1ec>
 b88:	82 e2       	ldi	r24, 0x22	; 34
 b8a:	90 e0       	ldi	r25, 0x00	; 0
 b8c:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>
 b90:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7000cc>
 b94:	e8 ec       	ldi	r30, 0xC8	; 200
 b96:	f0 e0       	ldi	r31, 0x00	; 0
 b98:	80 81       	ld	r24, Z
 b9a:	82 60       	ori	r24, 0x02	; 2
 b9c:	80 83       	st	Z, r24
 b9e:	2f c0       	rjmp	.+94     	; 0xbfe <Serial1_config+0x1ec>
 ba0:	80 e1       	ldi	r24, 0x10	; 16
 ba2:	90 e0       	ldi	r25, 0x00	; 0
 ba4:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>
 ba8:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7000cc>
 bac:	e8 ec       	ldi	r30, 0xC8	; 200
 bae:	f0 e0       	ldi	r31, 0x00	; 0
 bb0:	80 81       	ld	r24, Z
 bb2:	82 60       	ori	r24, 0x02	; 2
 bb4:	80 83       	st	Z, r24
 bb6:	23 c0       	rjmp	.+70     	; 0xbfe <Serial1_config+0x1ec>
 bb8:	87 e0       	ldi	r24, 0x07	; 7
 bba:	90 e0       	ldi	r25, 0x00	; 0
 bbc:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>
 bc0:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7000cc>
 bc4:	e8 ec       	ldi	r30, 0xC8	; 200
 bc6:	f0 e0       	ldi	r31, 0x00	; 0
 bc8:	80 81       	ld	r24, Z
 bca:	82 60       	ori	r24, 0x02	; 2
 bcc:	80 83       	st	Z, r24
 bce:	17 c0       	rjmp	.+46     	; 0xbfe <Serial1_config+0x1ec>
 bd0:	83 e0       	ldi	r24, 0x03	; 3
 bd2:	90 e0       	ldi	r25, 0x00	; 0
 bd4:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>
 bd8:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7000cc>
 bdc:	e8 ec       	ldi	r30, 0xC8	; 200
 bde:	f0 e0       	ldi	r31, 0x00	; 0
 be0:	80 81       	ld	r24, Z
 be2:	82 60       	ori	r24, 0x02	; 2
 be4:	80 83       	st	Z, r24
 be6:	0b c0       	rjmp	.+22     	; 0xbfe <Serial1_config+0x1ec>
 be8:	81 e0       	ldi	r24, 0x01	; 1
 bea:	90 e0       	ldi	r25, 0x00	; 0
 bec:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>
 bf0:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7000cc>
 bf4:	e8 ec       	ldi	r30, 0xC8	; 200
 bf6:	f0 e0       	ldi	r31, 0x00	; 0
 bf8:	80 81       	ld	r24, Z
 bfa:	82 60       	ori	r24, 0x02	; 2
 bfc:	80 83       	st	Z, r24
 bfe:	40 93 ca 00 	sts	0x00CA, r20	; 0x8000ca <__TEXT_REGION_LENGTH__+0x7000ca>
 c02:	e9 ec       	ldi	r30, 0xC9	; 201
 c04:	f0 e0       	ldi	r31, 0x00	; 0
 c06:	80 81       	ld	r24, Z
 c08:	88 61       	ori	r24, 0x18	; 24
 c0a:	80 83       	st	Z, r24
 c0c:	08 95       	ret

00000c0e <init_sw_serial_getc_test>:
 c0e:	cf 92       	push	r12
 c10:	df 92       	push	r13
 c12:	ef 92       	push	r14
 c14:	ff 92       	push	r15
 c16:	cf 93       	push	r28
 c18:	df 93       	push	r29
 c1a:	6b 01       	movw	r12, r22
 c1c:	7c 01       	movw	r14, r24
 c1e:	ea 01       	movw	r28, r20
 c20:	fa dd       	rcall	.-1036   	; 0x816 <Serial0_config>
 c22:	ae 01       	movw	r20, r28
 c24:	c7 01       	movw	r24, r14
 c26:	b6 01       	movw	r22, r12
 c28:	f4 de       	rcall	.-536    	; 0xa12 <Serial1_config>
 c2a:	df 91       	pop	r29
 c2c:	cf 91       	pop	r28
 c2e:	ff 90       	pop	r15
 c30:	ef 90       	pop	r14
 c32:	df 90       	pop	r13
 c34:	cf 90       	pop	r12
 c36:	08 95       	ret

00000c38 <test_sw_serial_getc>:
 c38:	cf 93       	push	r28
 c3a:	e8 ec       	ldi	r30, 0xC8	; 200
 c3c:	f0 e0       	ldi	r31, 0x00	; 0
 c3e:	80 81       	ld	r24, Z
 c40:	88 23       	and	r24, r24
 c42:	ec f7       	brge	.-6      	; 0xc3e <test_sw_serial_getc+0x6>
 c44:	c0 91 c8 00 	lds	r28, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7000c8>
 c48:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>
 c4c:	90 91 c6 00 	lds	r25, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
 c50:	cc dd       	rcall	.-1128   	; 0x7ea <Serial0_poll_write>
 c52:	8c 2f       	mov	r24, r28
 c54:	8c 71       	andi	r24, 0x1C	; 28
 c56:	89 f0       	breq	.+34     	; 0xc7a <test_sw_serial_getc+0x42>
 c58:	c4 ff       	sbrs	r28, 4
 c5a:	03 c0       	rjmp	.+6      	; 0xc62 <test_sw_serial_getc+0x2a>
 c5c:	88 e4       	ldi	r24, 0x48	; 72
 c5e:	92 e0       	ldi	r25, 0x02	; 2
 c60:	cc dd       	rcall	.-1128   	; 0x7fa <Serial0_poll_print>
 c62:	c3 ff       	sbrs	r28, 3
 c64:	03 c0       	rjmp	.+6      	; 0xc6c <test_sw_serial_getc+0x34>
 c66:	88 e5       	ldi	r24, 0x58	; 88
 c68:	92 e0       	ldi	r25, 0x02	; 2
 c6a:	c7 dd       	rcall	.-1138   	; 0x7fa <Serial0_poll_print>
 c6c:	c2 ff       	sbrs	r28, 2
 c6e:	03 c0       	rjmp	.+6      	; 0xc76 <test_sw_serial_getc+0x3e>
 c70:	88 e6       	ldi	r24, 0x68	; 104
 c72:	92 e0       	ldi	r25, 0x02	; 2
 c74:	c2 dd       	rcall	.-1148   	; 0x7fa <Serial0_poll_print>
 c76:	8a e0       	ldi	r24, 0x0A	; 10
 c78:	b8 dd       	rcall	.-1168   	; 0x7ea <Serial0_poll_write>
 c7a:	cf 91       	pop	r28
 c7c:	08 95       	ret

00000c7e <debug_init>:
 c7e:	27 9a       	sbi	0x04, 7	; 4
 c80:	85 b1       	in	r24, 0x05	; 5
 c82:	85 b9       	out	0x05, r24	; 5
 c84:	08 95       	ret

00000c86 <_exit>:
 c86:	f8 94       	cli

00000c88 <__stop_program>:
 c88:	ff cf       	rjmp	.-2      	; 0xc88 <__stop_program>
