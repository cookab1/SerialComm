
Problem3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000078  00800200  00000d4e  00000de2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000d4e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000001a6  00800278  00800278  00000e5a  2**0
                  ALLOC
  3 .comment      00000060  00000000  00000000  00000e5a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000ebc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001d8  00000000  00000000  00000f00  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000023b0  00000000  00000000  000010d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000011af  00000000  00000000  00003488  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001218  00000000  00000000  00004637  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000744  00000000  00000000  00005850  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000a89  00000000  00000000  00005f94  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001c3a  00000000  00000000  00006a1d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001a0  00000000  00000000  00008657  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	3a c3       	rjmp	.+1652   	; 0x6da <__vector_25>
  66:	00 00       	nop
  68:	af c1       	rjmp	.+862    	; 0x3c8 <__vector_26>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	4f c3       	rjmp	.+1694   	; 0x730 <__vector_36>
  92:	00 00       	nop
  94:	e5 c1       	rjmp	.+970    	; 0x460 <__vector_37>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	5c c3       	rjmp	.+1720   	; 0x786 <__vector_51>
  ce:	00 00       	nop
  d0:	13 c2       	rjmp	.+1062   	; 0x4f8 <__vector_52>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	81 c3       	rjmp	.+1794   	; 0x7dc <__vector_54>
  da:	00 00       	nop
  dc:	59 c2       	rjmp	.+1202   	; 0x590 <__vector_55>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	ee e4       	ldi	r30, 0x4E	; 78
  fc:	fd e0       	ldi	r31, 0x0D	; 13
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a8 37       	cpi	r26, 0x78	; 120
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	24 e0       	ldi	r18, 0x04	; 4
 110:	a8 e7       	ldi	r26, 0x78	; 120
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	ae 31       	cpi	r26, 0x1E	; 30
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	4f d0       	rcall	.+158    	; 0x1be <main>
 120:	14 c6       	rjmp	.+3112   	; 0xd4a <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <delay_usec>:
	...
delay_usec:
		nop
		nop
		nop
		nop
		nop
 12c:	00 00       	nop

		dec		r24		// 1 cycle
 12e:	8a 95       	dec	r24
		brlt	L3		//if false 1 cycle else 2
 130:	8c f0       	brlt	.+34     	; 0x154 <L3>
		brge	L4		
 132:	44 f4       	brge	.+16     	; 0x144 <L4>

00000134 <L1>:
	...

00000144 <L4>:
		nop
		nop
		nop
		nop
		nop
L4:		dec		r24		
 144:	8a 95       	dec	r24
	...
		nop			
		nop			
		nop
		nop
		nop
 14e:	00 00       	nop
		brge	L1	
 150:	8c f7       	brge	.-30     	; 0x134 <L1>

00000152 <L2>:
L2:  	ret				// 5 cycles
 152:	08 95       	ret

00000154 <L3>:
L3:		adiw	r24, 33 // 1 cycle
 154:	81 96       	adiw	r24, 0x21	; 33
		lsl		r24
 156:	88 0f       	add	r24, r24
		lsl		r24
 158:	88 0f       	add	r24, r24
		lsl		r24
 15a:	88 0f       	add	r24, r24
		mul		r24, r24 // 2 cycles
 15c:	88 9f       	mul	r24, r24
		dec		r24
 15e:	8a 95       	dec	r24
 160:	4c f7       	brge	.-46     	; 0x134 <L1>

00000162 <sw_serial_getc>:
		}
		sw_serial_putc(c);
		test_sw_serial_getc();   // library test function
	}
}
char sw_serial_getc(void) {
 162:	ff 92       	push	r15
 164:	0f 93       	push	r16
 166:	1f 93       	push	r17
 168:	cf 93       	push	r28
 16a:	df 93       	push	r29
 16c:	01 e0       	ldi	r16, 0x01	; 1
 16e:	10 e0       	ldi	r17, 0x00	; 0
 170:	c0 e0       	ldi	r28, 0x00	; 0
 172:	d0 e0       	ldi	r29, 0x00	; 0
	char c = 0;
 174:	f1 2c       	mov	r15, r1
 176:	03 c0       	rjmp	.+6      	; 0x17e <sw_serial_getc+0x1c>
 178:	21 96       	adiw	r28, 0x01	; 1
 17a:	0f 5f       	subi	r16, 0xFF	; 255
 17c:	1f 4f       	sbci	r17, 0xFF	; 255
	int i;
	for(i = 0; i < 8; i++) {
		if (i == 0)
 17e:	20 97       	sbiw	r28, 0x00	; 0
 180:	29 f4       	brne	.+10     	; 0x18c <sw_serial_getc+0x2a>
		c = PINB;
 182:	f3 b0       	in	r15, 0x03	; 3
		else
		c |= (PINB << i);
		delay_usec(bitTime);
 184:	80 e0       	ldi	r24, 0x00	; 0
 186:	90 e0       	ldi	r25, 0x00	; 0
 188:	cd df       	rcall	.-102    	; 0x124 <delay_usec>
 18a:	f6 cf       	rjmp	.-20     	; 0x178 <sw_serial_getc+0x16>
	int i;
	for(i = 0; i < 8; i++) {
		if (i == 0)
		c = PINB;
		else
		c |= (PINB << i);
 18c:	83 b1       	in	r24, 0x03	; 3
 18e:	90 e0       	ldi	r25, 0x00	; 0
 190:	0c 2e       	mov	r0, r28
 192:	02 c0       	rjmp	.+4      	; 0x198 <sw_serial_getc+0x36>
 194:	88 0f       	add	r24, r24
 196:	99 1f       	adc	r25, r25
 198:	0a 94       	dec	r0
 19a:	e2 f7       	brpl	.-8      	; 0x194 <sw_serial_getc+0x32>
 19c:	f8 2a       	or	r15, r24
		delay_usec(bitTime);
 19e:	80 e0       	ldi	r24, 0x00	; 0
 1a0:	90 e0       	ldi	r25, 0x00	; 0
 1a2:	c0 df       	rcall	.-128    	; 0x124 <delay_usec>
	}
}
char sw_serial_getc(void) {
	char c = 0;
	int i;
	for(i = 0; i < 8; i++) {
 1a4:	08 30       	cpi	r16, 0x08	; 8
 1a6:	11 05       	cpc	r17, r1
 1a8:	3c f3       	brlt	.-50     	; 0x178 <sw_serial_getc+0x16>
		c = PINB;
		else
		c |= (PINB << i);
		delay_usec(bitTime);
	}
	BITBANG(0);
 1aa:	80 e0       	ldi	r24, 0x00	; 0
 1ac:	90 e0       	ldi	r25, 0x00	; 0
 1ae:	27 d0       	rcall	.+78     	; 0x1fe <BITBANG>
	return c;
 1b0:	8f 2d       	mov	r24, r15
 1b2:	df 91       	pop	r29
 1b4:	cf 91       	pop	r28
 1b6:	1f 91       	pop	r17
 1b8:	0f 91       	pop	r16
 1ba:	ff 90       	pop	r15
 1bc:	08 95       	ret

000001be <main>:

void delay_usec(unsigned int);

int main(void) {
	//DDRB |= (1 << PB6);
	DDRB = 0;
 1be:	14 b8       	out	0x04, r1	; 4
	long baudrate = 9600L;  // initially--can change after this works
	int tx_pin = 12;
	int rx_pin = 11;
	int framing = SERIAL_8N1;
	
	init_sw_serial(rx_pin, tx_pin, baudrate, framing);  // this is your function
 1c0:	06 e0       	ldi	r16, 0x06	; 6
 1c2:	10 e0       	ldi	r17, 0x00	; 0
 1c4:	20 e8       	ldi	r18, 0x80	; 128
 1c6:	35 e2       	ldi	r19, 0x25	; 37
 1c8:	40 e0       	ldi	r20, 0x00	; 0
 1ca:	50 e0       	ldi	r21, 0x00	; 0
 1cc:	6c e0       	ldi	r22, 0x0C	; 12
 1ce:	70 e0       	ldi	r23, 0x00	; 0
 1d0:	8b e0       	ldi	r24, 0x0B	; 11
 1d2:	90 e0       	ldi	r25, 0x00	; 0
 1d4:	67 d0       	rcall	.+206    	; 0x2a4 <init_sw_serial>
	init_sw_serial_getc_test(baudrate, framing);   // library function: note we need the baudrate and framing here
 1d6:	46 e0       	ldi	r20, 0x06	; 6
 1d8:	50 e0       	ldi	r21, 0x00	; 0
 1da:	60 e8       	ldi	r22, 0x80	; 128
 1dc:	75 e2       	ldi	r23, 0x25	; 37
 1de:	80 e0       	ldi	r24, 0x00	; 0
 1e0:	90 e0       	ldi	r25, 0x00	; 0

	debug_init();
 1e2:	39 d5       	rcall	.+2674   	; 0xc56 <init_sw_serial_getc_test>
	sw_serial_getc();  // throw away first char
 1e4:	70 d5       	rcall	.+2784   	; 0xcc6 <debug_init>
 1e6:	bd df       	rcall	.-134    	; 0x162 <sw_serial_getc>
	while(1) {
		char c = sw_serial_getc();
 1e8:	bc df       	rcall	.-136    	; 0x162 <sw_serial_getc>
 1ea:	9f eb       	ldi	r25, 0xBF	; 191
		// convert any alpha char c to opposite case
		// you'll need a little code here to do this...
		if (c >= 0x41 && c <= 0x5A) {
 1ec:	98 0f       	add	r25, r24
 1ee:	9a 31       	cpi	r25, 0x1A	; 26
 1f0:	10 f4       	brcc	.+4      	; 0x1f6 <main+0x38>
			c += 0x20;
 1f2:	80 5e       	subi	r24, 0xE0	; 224
 1f4:	01 c0       	rjmp	.+2      	; 0x1f8 <main+0x3a>
		}
		else {
			c -= 0x20;
 1f6:	80 52       	subi	r24, 0x20	; 32
		}
		sw_serial_putc(c);
 1f8:	24 d0       	rcall	.+72     	; 0x242 <sw_serial_putc>
 1fa:	42 d5       	rcall	.+2692   	; 0xc80 <test_sw_serial_getc>
		test_sw_serial_getc();   // library test function
 1fc:	f5 cf       	rjmp	.-22     	; 0x1e8 <main+0x2a>

000001fe <BITBANG>:
 1fe:	89 2b       	or	r24, r25
	}
 200:	69 f0       	breq	.+26     	; 0x21c <BITBANG+0x1e>
	int i;
	int length = strlen(str);
	for(i = 0; i < length; i++) {
		sw_serial_putc(str[i]);
	}
}
 202:	25 b1       	in	r18, 0x05	; 5
 204:	81 e0       	ldi	r24, 0x01	; 1
 206:	90 e0       	ldi	r25, 0x00	; 0
 208:	00 90 78 02 	lds	r0, 0x0278	; 0x800278 <__data_end>
 20c:	02 c0       	rjmp	.+4      	; 0x212 <BITBANG+0x14>
 20e:	88 0f       	add	r24, r24
 210:	99 1f       	adc	r25, r25
 212:	0a 94       	dec	r0
 214:	e2 f7       	brpl	.-8      	; 0x20e <BITBANG+0x10>
 216:	82 2b       	or	r24, r18
 218:	85 b9       	out	0x05, r24	; 5
 21a:	0d c0       	rjmp	.+26     	; 0x236 <BITBANG+0x38>
 21c:	25 b1       	in	r18, 0x05	; 5
 21e:	81 e0       	ldi	r24, 0x01	; 1
 220:	90 e0       	ldi	r25, 0x00	; 0
 222:	00 90 78 02 	lds	r0, 0x0278	; 0x800278 <__data_end>
 226:	02 c0       	rjmp	.+4      	; 0x22c <BITBANG+0x2e>
 228:	88 0f       	add	r24, r24
 22a:	99 1f       	adc	r25, r25
 22c:	0a 94       	dec	r0
 22e:	e2 f7       	brpl	.-8      	; 0x228 <BITBANG+0x2a>
 230:	80 95       	com	r24
 232:	82 23       	and	r24, r18
 234:	85 b9       	out	0x05, r24	; 5
 236:	80 91 7a 02 	lds	r24, 0x027A	; 0x80027a <bitTime>
 23a:	90 91 7b 02 	lds	r25, 0x027B	; 0x80027b <bitTime+0x1>
 23e:	72 cf       	rjmp	.-284    	; 0x124 <delay_usec>
 240:	08 95       	ret

00000242 <sw_serial_putc>:
 242:	1f 93       	push	r17
 244:	cf 93       	push	r28
 246:	df 93       	push	r29
 248:	18 2f       	mov	r17, r24
 24a:	80 e0       	ldi	r24, 0x00	; 0
 24c:	90 e0       	ldi	r25, 0x00	; 0
 24e:	d7 df       	rcall	.-82     	; 0x1fe <BITBANG>
 250:	c8 e0       	ldi	r28, 0x08	; 8
 252:	d0 e0       	ldi	r29, 0x00	; 0
 254:	81 2f       	mov	r24, r17
 256:	81 70       	andi	r24, 0x01	; 1
 258:	90 e0       	ldi	r25, 0x00	; 0
 25a:	d1 df       	rcall	.-94     	; 0x1fe <BITBANG>
 25c:	16 95       	lsr	r17
 25e:	21 97       	sbiw	r28, 0x01	; 1
 260:	c9 f7       	brne	.-14     	; 0x254 <sw_serial_putc+0x12>
 262:	81 e0       	ldi	r24, 0x01	; 1
 264:	90 e0       	ldi	r25, 0x00	; 0
 266:	cb df       	rcall	.-106    	; 0x1fe <BITBANG>
 268:	df 91       	pop	r29
 26a:	cf 91       	pop	r28
 26c:	1f 91       	pop	r17
 26e:	08 95       	ret

00000270 <find>:
	delay_usec(bitTime);
}

int find(int tPin) {
	for(int i = 0; i < 8; i++) {
		if(tPin == pin[i])
 270:	85 33       	cpi	r24, 0x35	; 53
 272:	91 05       	cpc	r25, r1
 274:	89 f0       	breq	.+34     	; 0x298 <find+0x28>
 276:	e2 e3       	ldi	r30, 0x32	; 50
 278:	f2 e0       	ldi	r31, 0x02	; 2
	}
	delay_usec(bitTime);
}

int find(int tPin) {
	for(int i = 0; i < 8; i++) {
 27a:	21 e0       	ldi	r18, 0x01	; 1
 27c:	30 e0       	ldi	r19, 0x00	; 0
		if(tPin == pin[i])
 27e:	41 91       	ld	r20, Z+
 280:	51 91       	ld	r21, Z+
 282:	48 17       	cp	r20, r24
 284:	59 07       	cpc	r21, r25
 286:	59 f0       	breq	.+22     	; 0x29e <find+0x2e>
	}
	delay_usec(bitTime);
}

int find(int tPin) {
	for(int i = 0; i < 8; i++) {
 288:	2f 5f       	subi	r18, 0xFF	; 255
 28a:	3f 4f       	sbci	r19, 0xFF	; 255
 28c:	28 30       	cpi	r18, 0x08	; 8
 28e:	31 05       	cpc	r19, r1
 290:	b1 f7       	brne	.-20     	; 0x27e <find+0xe>
		if(tPin == pin[i])
		return i;
	}
	return -1;
 292:	8f ef       	ldi	r24, 0xFF	; 255
 294:	9f ef       	ldi	r25, 0xFF	; 255
 296:	08 95       	ret
	}
	delay_usec(bitTime);
}

int find(int tPin) {
	for(int i = 0; i < 8; i++) {
 298:	80 e0       	ldi	r24, 0x00	; 0
 29a:	90 e0       	ldi	r25, 0x00	; 0
 29c:	08 95       	ret
 29e:	82 2f       	mov	r24, r18
 2a0:	93 2f       	mov	r25, r19
		if(tPin == pin[i])
		return i;
	}
	return -1;
}
 2a2:	08 95       	ret

000002a4 <init_sw_serial>:

void delay_usec(unsigned int);

static int pin[] = {53, 52, 51, 50, 10, 11, 12, 13};

void init_sw_serial(int rx_pin, int tx_pin, long baudrate, int framing) {
 2a4:	cf 92       	push	r12
 2a6:	df 92       	push	r13
 2a8:	ef 92       	push	r14
 2aa:	ff 92       	push	r15
 2ac:	0f 93       	push	r16
 2ae:	1f 93       	push	r17
 2b0:	cb 01       	movw	r24, r22
 2b2:	69 01       	movw	r12, r18
 2b4:	7a 01       	movw	r14, r20
	rMask = 1 << find(rx_pin);
	tMask = 1 << find(tx_pin);
 2b6:	dc df       	rcall	.-72     	; 0x270 <find>
 2b8:	21 e0       	ldi	r18, 0x01	; 1
 2ba:	30 e0       	ldi	r19, 0x00	; 0
 2bc:	02 c0       	rjmp	.+4      	; 0x2c2 <init_sw_serial+0x1e>
 2be:	22 0f       	add	r18, r18
 2c0:	33 1f       	adc	r19, r19
 2c2:	8a 95       	dec	r24
 2c4:	e2 f7       	brpl	.-8      	; 0x2be <init_sw_serial+0x1a>
 2c6:	30 93 79 02 	sts	0x0279, r19	; 0x800279 <__data_end+0x1>
 2ca:	20 93 78 02 	sts	0x0278, r18	; 0x800278 <__data_end>
	bitTime = (1 / baudrate) * 1000000;
 2ce:	61 e0       	ldi	r22, 0x01	; 1
 2d0:	70 e0       	ldi	r23, 0x00	; 0
 2d2:	80 e0       	ldi	r24, 0x00	; 0
 2d4:	90 e0       	ldi	r25, 0x00	; 0
 2d6:	a7 01       	movw	r20, r14
 2d8:	96 01       	movw	r18, r12
 2da:	f9 d4       	rcall	.+2546   	; 0xcce <__divmodsi4>
 2dc:	60 e4       	ldi	r22, 0x40	; 64
 2de:	72 e4       	ldi	r23, 0x42	; 66
 2e0:	26 9f       	mul	r18, r22
 2e2:	c0 01       	movw	r24, r0
 2e4:	27 9f       	mul	r18, r23
 2e6:	90 0d       	add	r25, r0
 2e8:	36 9f       	mul	r19, r22
 2ea:	90 0d       	add	r25, r0
 2ec:	11 24       	eor	r1, r1
 2ee:	90 93 7b 02 	sts	0x027B, r25	; 0x80027b <bitTime+0x1>
 2f2:	80 93 7a 02 	sts	0x027A, r24	; 0x80027a <bitTime>
	frameParam = framing;
 2f6:	10 93 1d 04 	sts	0x041D, r17	; 0x80041d <frameParam+0x1>
 2fa:	00 93 1c 04 	sts	0x041C, r16	; 0x80041c <frameParam>
}
 2fe:	1f 91       	pop	r17
 300:	0f 91       	pop	r16
 302:	ff 90       	pop	r15
 304:	ef 90       	pop	r14
 306:	df 90       	pop	r13
 308:	cf 90       	pop	r12
 30a:	08 95       	ret

0000030c <Q_getc>:
 30c:	cf 93       	push	r28
 30e:	df 93       	push	r29
 310:	e8 2f       	mov	r30, r24
 312:	f0 e0       	ldi	r31, 0x00	; 0
 314:	df 01       	movw	r26, r30
 316:	aa 0f       	add	r26, r26
 318:	bb 1f       	adc	r27, r27
 31a:	aa 0f       	add	r26, r26
 31c:	bb 1f       	adc	r27, r27
 31e:	aa 0f       	add	r26, r26
 320:	bb 1f       	adc	r27, r27
 322:	a4 58       	subi	r26, 0x84	; 132
 324:	bd 4f       	sbci	r27, 0xFD	; 253
 326:	13 96       	adiw	r26, 0x03	; 3
 328:	8c 91       	ld	r24, X
 32a:	81 fd       	sbrc	r24, 1
 32c:	49 c0       	rjmp	.+146    	; 0x3c0 <Q_getc+0xb4>
 32e:	9f b7       	in	r25, 0x3f	; 63
 330:	f8 94       	cli
 332:	df 01       	movw	r26, r30
 334:	aa 0f       	add	r26, r26
 336:	bb 1f       	adc	r27, r27
 338:	aa 0f       	add	r26, r26
 33a:	bb 1f       	adc	r27, r27
 33c:	aa 0f       	add	r26, r26
 33e:	bb 1f       	adc	r27, r27
 340:	a4 58       	subi	r26, 0x84	; 132
 342:	bd 4f       	sbci	r27, 0xFD	; 253
 344:	11 96       	adiw	r26, 0x01	; 1
 346:	8c 91       	ld	r24, X
 348:	11 97       	sbiw	r26, 0x01	; 1
 34a:	16 96       	adiw	r26, 0x06	; 6
 34c:	cd 91       	ld	r28, X+
 34e:	dc 91       	ld	r29, X
 350:	17 97       	sbiw	r26, 0x07	; 7
 352:	c8 0f       	add	r28, r24
 354:	d1 1d       	adc	r29, r1
 356:	28 81       	ld	r18, Y
 358:	eb 01       	movw	r28, r22
 35a:	28 83       	st	Y, r18
 35c:	8f 5f       	subi	r24, 0xFF	; 255
 35e:	12 96       	adiw	r26, 0x02	; 2
 360:	2c 91       	ld	r18, X
 362:	12 97       	sbiw	r26, 0x02	; 2
 364:	82 23       	and	r24, r18
 366:	11 96       	adiw	r26, 0x01	; 1
 368:	8c 93       	st	X, r24
 36a:	11 97       	sbiw	r26, 0x01	; 1
 36c:	14 96       	adiw	r26, 0x04	; 4
 36e:	2d 91       	ld	r18, X+
 370:	3c 91       	ld	r19, X
 372:	15 97       	sbiw	r26, 0x05	; 5
 374:	21 50       	subi	r18, 0x01	; 1
 376:	31 09       	sbc	r19, r1
 378:	15 96       	adiw	r26, 0x05	; 5
 37a:	3c 93       	st	X, r19
 37c:	2e 93       	st	-X, r18
 37e:	14 97       	sbiw	r26, 0x04	; 4
 380:	2c 91       	ld	r18, X
 382:	82 13       	cpse	r24, r18
 384:	0f c0       	rjmp	.+30     	; 0x3a4 <Q_getc+0x98>
 386:	df 01       	movw	r26, r30
 388:	aa 0f       	add	r26, r26
 38a:	bb 1f       	adc	r27, r27
 38c:	aa 0f       	add	r26, r26
 38e:	bb 1f       	adc	r27, r27
 390:	aa 0f       	add	r26, r26
 392:	bb 1f       	adc	r27, r27
 394:	a4 58       	subi	r26, 0x84	; 132
 396:	bd 4f       	sbci	r27, 0xFD	; 253
 398:	13 96       	adiw	r26, 0x03	; 3
 39a:	8c 91       	ld	r24, X
 39c:	13 97       	sbiw	r26, 0x03	; 3
 39e:	82 60       	ori	r24, 0x02	; 2
 3a0:	13 96       	adiw	r26, 0x03	; 3
 3a2:	8c 93       	st	X, r24
 3a4:	ee 0f       	add	r30, r30
 3a6:	ff 1f       	adc	r31, r31
 3a8:	ee 0f       	add	r30, r30
 3aa:	ff 1f       	adc	r31, r31
 3ac:	ee 0f       	add	r30, r30
 3ae:	ff 1f       	adc	r31, r31
 3b0:	e4 58       	subi	r30, 0x84	; 132
 3b2:	fd 4f       	sbci	r31, 0xFD	; 253
 3b4:	83 81       	ldd	r24, Z+3	; 0x03
 3b6:	8e 7f       	andi	r24, 0xFE	; 254
 3b8:	83 83       	std	Z+3, r24	; 0x03
 3ba:	9f bf       	out	0x3f, r25	; 63
 3bc:	81 e0       	ldi	r24, 0x01	; 1
 3be:	01 c0       	rjmp	.+2      	; 0x3c2 <Q_getc+0xb6>
 3c0:	80 e0       	ldi	r24, 0x00	; 0
 3c2:	df 91       	pop	r29
 3c4:	cf 91       	pop	r28
 3c6:	08 95       	ret

000003c8 <__vector_26>:
 3c8:	1f 92       	push	r1
 3ca:	0f 92       	push	r0
 3cc:	0f b6       	in	r0, 0x3f	; 63
 3ce:	0f 92       	push	r0
 3d0:	11 24       	eor	r1, r1
 3d2:	0b b6       	in	r0, 0x3b	; 59
 3d4:	0f 92       	push	r0
 3d6:	2f 93       	push	r18
 3d8:	3f 93       	push	r19
 3da:	4f 93       	push	r20
 3dc:	5f 93       	push	r21
 3de:	6f 93       	push	r22
 3e0:	7f 93       	push	r23
 3e2:	8f 93       	push	r24
 3e4:	9f 93       	push	r25
 3e6:	af 93       	push	r26
 3e8:	bf 93       	push	r27
 3ea:	ef 93       	push	r30
 3ec:	ff 93       	push	r31
 3ee:	cf 93       	push	r28
 3f0:	df 93       	push	r29
 3f2:	1f 92       	push	r1
 3f4:	cd b7       	in	r28, 0x3d	; 61
 3f6:	de b7       	in	r29, 0x3e	; 62
 3f8:	80 91 01 02 	lds	r24, 0x0201	; 0x800201 <__data_start+0x1>
 3fc:	e8 2f       	mov	r30, r24
 3fe:	f0 e0       	ldi	r31, 0x00	; 0
 400:	ee 0f       	add	r30, r30
 402:	ff 1f       	adc	r31, r31
 404:	ee 0f       	add	r30, r30
 406:	ff 1f       	adc	r31, r31
 408:	ee 0f       	add	r30, r30
 40a:	ff 1f       	adc	r31, r31
 40c:	e4 58       	subi	r30, 0x84	; 132
 40e:	fd 4f       	sbci	r31, 0xFD	; 253
 410:	93 81       	ldd	r25, Z+3	; 0x03
 412:	91 ff       	sbrs	r25, 1
 414:	08 c0       	rjmp	.+16     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 416:	e0 91 28 02 	lds	r30, 0x0228	; 0x800228 <serialregs>
 41a:	f0 91 29 02 	lds	r31, 0x0229	; 0x800229 <serialregs+0x1>
 41e:	81 81       	ldd	r24, Z+1	; 0x01
 420:	8f 7d       	andi	r24, 0xDF	; 223
 422:	81 83       	std	Z+1, r24	; 0x01
 424:	07 c0       	rjmp	.+14     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 426:	be 01       	movw	r22, r28
 428:	6f 5f       	subi	r22, 0xFF	; 255
 42a:	7f 4f       	sbci	r23, 0xFF	; 255
 42c:	6f df       	rcall	.-290    	; 0x30c <Q_getc>
 42e:	89 81       	ldd	r24, Y+1	; 0x01
 430:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
 434:	0f 90       	pop	r0
 436:	df 91       	pop	r29
 438:	cf 91       	pop	r28
 43a:	ff 91       	pop	r31
 43c:	ef 91       	pop	r30
 43e:	bf 91       	pop	r27
 440:	af 91       	pop	r26
 442:	9f 91       	pop	r25
 444:	8f 91       	pop	r24
 446:	7f 91       	pop	r23
 448:	6f 91       	pop	r22
 44a:	5f 91       	pop	r21
 44c:	4f 91       	pop	r20
 44e:	3f 91       	pop	r19
 450:	2f 91       	pop	r18
 452:	0f 90       	pop	r0
 454:	0b be       	out	0x3b, r0	; 59
 456:	0f 90       	pop	r0
 458:	0f be       	out	0x3f, r0	; 63
 45a:	0f 90       	pop	r0
 45c:	1f 90       	pop	r1
 45e:	18 95       	reti

00000460 <__vector_37>:
 460:	1f 92       	push	r1
 462:	0f 92       	push	r0
 464:	0f b6       	in	r0, 0x3f	; 63
 466:	0f 92       	push	r0
 468:	11 24       	eor	r1, r1
 46a:	0b b6       	in	r0, 0x3b	; 59
 46c:	0f 92       	push	r0
 46e:	2f 93       	push	r18
 470:	3f 93       	push	r19
 472:	4f 93       	push	r20
 474:	5f 93       	push	r21
 476:	6f 93       	push	r22
 478:	7f 93       	push	r23
 47a:	8f 93       	push	r24
 47c:	9f 93       	push	r25
 47e:	af 93       	push	r26
 480:	bf 93       	push	r27
 482:	ef 93       	push	r30
 484:	ff 93       	push	r31
 486:	cf 93       	push	r28
 488:	df 93       	push	r29
 48a:	1f 92       	push	r1
 48c:	cd b7       	in	r28, 0x3d	; 61
 48e:	de b7       	in	r29, 0x3e	; 62
 490:	80 91 0b 02 	lds	r24, 0x020B	; 0x80020b <__data_start+0xb>
 494:	e8 2f       	mov	r30, r24
 496:	f0 e0       	ldi	r31, 0x00	; 0
 498:	ee 0f       	add	r30, r30
 49a:	ff 1f       	adc	r31, r31
 49c:	ee 0f       	add	r30, r30
 49e:	ff 1f       	adc	r31, r31
 4a0:	ee 0f       	add	r30, r30
 4a2:	ff 1f       	adc	r31, r31
 4a4:	e4 58       	subi	r30, 0x84	; 132
 4a6:	fd 4f       	sbci	r31, 0xFD	; 253
 4a8:	93 81       	ldd	r25, Z+3	; 0x03
 4aa:	91 ff       	sbrs	r25, 1
 4ac:	08 c0       	rjmp	.+16     	; 0x4be <__vector_37+0x5e>
 4ae:	e0 91 2a 02 	lds	r30, 0x022A	; 0x80022a <serialregs+0x2>
 4b2:	f0 91 2b 02 	lds	r31, 0x022B	; 0x80022b <serialregs+0x3>
 4b6:	81 81       	ldd	r24, Z+1	; 0x01
 4b8:	8f 7d       	andi	r24, 0xDF	; 223
 4ba:	81 83       	std	Z+1, r24	; 0x01
 4bc:	07 c0       	rjmp	.+14     	; 0x4cc <__vector_37+0x6c>
 4be:	be 01       	movw	r22, r28
 4c0:	6f 5f       	subi	r22, 0xFF	; 255
 4c2:	7f 4f       	sbci	r23, 0xFF	; 255
 4c4:	23 df       	rcall	.-442    	; 0x30c <Q_getc>
 4c6:	89 81       	ldd	r24, Y+1	; 0x01
 4c8:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>
 4cc:	0f 90       	pop	r0
 4ce:	df 91       	pop	r29
 4d0:	cf 91       	pop	r28
 4d2:	ff 91       	pop	r31
 4d4:	ef 91       	pop	r30
 4d6:	bf 91       	pop	r27
 4d8:	af 91       	pop	r26
 4da:	9f 91       	pop	r25
 4dc:	8f 91       	pop	r24
 4de:	7f 91       	pop	r23
 4e0:	6f 91       	pop	r22
 4e2:	5f 91       	pop	r21
 4e4:	4f 91       	pop	r20
 4e6:	3f 91       	pop	r19
 4e8:	2f 91       	pop	r18
 4ea:	0f 90       	pop	r0
 4ec:	0b be       	out	0x3b, r0	; 59
 4ee:	0f 90       	pop	r0
 4f0:	0f be       	out	0x3f, r0	; 63
 4f2:	0f 90       	pop	r0
 4f4:	1f 90       	pop	r1
 4f6:	18 95       	reti

000004f8 <__vector_52>:
 4f8:	1f 92       	push	r1
 4fa:	0f 92       	push	r0
 4fc:	0f b6       	in	r0, 0x3f	; 63
 4fe:	0f 92       	push	r0
 500:	11 24       	eor	r1, r1
 502:	0b b6       	in	r0, 0x3b	; 59
 504:	0f 92       	push	r0
 506:	2f 93       	push	r18
 508:	3f 93       	push	r19
 50a:	4f 93       	push	r20
 50c:	5f 93       	push	r21
 50e:	6f 93       	push	r22
 510:	7f 93       	push	r23
 512:	8f 93       	push	r24
 514:	9f 93       	push	r25
 516:	af 93       	push	r26
 518:	bf 93       	push	r27
 51a:	ef 93       	push	r30
 51c:	ff 93       	push	r31
 51e:	cf 93       	push	r28
 520:	df 93       	push	r29
 522:	1f 92       	push	r1
 524:	cd b7       	in	r28, 0x3d	; 61
 526:	de b7       	in	r29, 0x3e	; 62
 528:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <__data_start+0x15>
 52c:	e8 2f       	mov	r30, r24
 52e:	f0 e0       	ldi	r31, 0x00	; 0
 530:	ee 0f       	add	r30, r30
 532:	ff 1f       	adc	r31, r31
 534:	ee 0f       	add	r30, r30
 536:	ff 1f       	adc	r31, r31
 538:	ee 0f       	add	r30, r30
 53a:	ff 1f       	adc	r31, r31
 53c:	e4 58       	subi	r30, 0x84	; 132
 53e:	fd 4f       	sbci	r31, 0xFD	; 253
 540:	93 81       	ldd	r25, Z+3	; 0x03
 542:	91 ff       	sbrs	r25, 1
 544:	08 c0       	rjmp	.+16     	; 0x556 <__vector_52+0x5e>
 546:	e0 91 2c 02 	lds	r30, 0x022C	; 0x80022c <serialregs+0x4>
 54a:	f0 91 2d 02 	lds	r31, 0x022D	; 0x80022d <serialregs+0x5>
 54e:	81 81       	ldd	r24, Z+1	; 0x01
 550:	8f 7d       	andi	r24, 0xDF	; 223
 552:	81 83       	std	Z+1, r24	; 0x01
 554:	07 c0       	rjmp	.+14     	; 0x564 <__vector_52+0x6c>
 556:	be 01       	movw	r22, r28
 558:	6f 5f       	subi	r22, 0xFF	; 255
 55a:	7f 4f       	sbci	r23, 0xFF	; 255
 55c:	d7 de       	rcall	.-594    	; 0x30c <Q_getc>
 55e:	89 81       	ldd	r24, Y+1	; 0x01
 560:	80 93 d6 00 	sts	0x00D6, r24	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7000d6>
 564:	0f 90       	pop	r0
 566:	df 91       	pop	r29
 568:	cf 91       	pop	r28
 56a:	ff 91       	pop	r31
 56c:	ef 91       	pop	r30
 56e:	bf 91       	pop	r27
 570:	af 91       	pop	r26
 572:	9f 91       	pop	r25
 574:	8f 91       	pop	r24
 576:	7f 91       	pop	r23
 578:	6f 91       	pop	r22
 57a:	5f 91       	pop	r21
 57c:	4f 91       	pop	r20
 57e:	3f 91       	pop	r19
 580:	2f 91       	pop	r18
 582:	0f 90       	pop	r0
 584:	0b be       	out	0x3b, r0	; 59
 586:	0f 90       	pop	r0
 588:	0f be       	out	0x3f, r0	; 63
 58a:	0f 90       	pop	r0
 58c:	1f 90       	pop	r1
 58e:	18 95       	reti

00000590 <__vector_55>:
 590:	1f 92       	push	r1
 592:	0f 92       	push	r0
 594:	0f b6       	in	r0, 0x3f	; 63
 596:	0f 92       	push	r0
 598:	11 24       	eor	r1, r1
 59a:	0b b6       	in	r0, 0x3b	; 59
 59c:	0f 92       	push	r0
 59e:	2f 93       	push	r18
 5a0:	3f 93       	push	r19
 5a2:	4f 93       	push	r20
 5a4:	5f 93       	push	r21
 5a6:	6f 93       	push	r22
 5a8:	7f 93       	push	r23
 5aa:	8f 93       	push	r24
 5ac:	9f 93       	push	r25
 5ae:	af 93       	push	r26
 5b0:	bf 93       	push	r27
 5b2:	ef 93       	push	r30
 5b4:	ff 93       	push	r31
 5b6:	cf 93       	push	r28
 5b8:	df 93       	push	r29
 5ba:	1f 92       	push	r1
 5bc:	cd b7       	in	r28, 0x3d	; 61
 5be:	de b7       	in	r29, 0x3e	; 62
 5c0:	80 91 1f 02 	lds	r24, 0x021F	; 0x80021f <__data_start+0x1f>
 5c4:	e8 2f       	mov	r30, r24
 5c6:	f0 e0       	ldi	r31, 0x00	; 0
 5c8:	ee 0f       	add	r30, r30
 5ca:	ff 1f       	adc	r31, r31
 5cc:	ee 0f       	add	r30, r30
 5ce:	ff 1f       	adc	r31, r31
 5d0:	ee 0f       	add	r30, r30
 5d2:	ff 1f       	adc	r31, r31
 5d4:	e4 58       	subi	r30, 0x84	; 132
 5d6:	fd 4f       	sbci	r31, 0xFD	; 253
 5d8:	93 81       	ldd	r25, Z+3	; 0x03
 5da:	91 ff       	sbrs	r25, 1
 5dc:	08 c0       	rjmp	.+16     	; 0x5ee <__vector_55+0x5e>
 5de:	e0 91 2e 02 	lds	r30, 0x022E	; 0x80022e <serialregs+0x6>
 5e2:	f0 91 2f 02 	lds	r31, 0x022F	; 0x80022f <serialregs+0x7>
 5e6:	81 81       	ldd	r24, Z+1	; 0x01
 5e8:	8f 7d       	andi	r24, 0xDF	; 223
 5ea:	81 83       	std	Z+1, r24	; 0x01
 5ec:	07 c0       	rjmp	.+14     	; 0x5fc <__vector_55+0x6c>
 5ee:	be 01       	movw	r22, r28
 5f0:	6f 5f       	subi	r22, 0xFF	; 255
 5f2:	7f 4f       	sbci	r23, 0xFF	; 255
 5f4:	8b de       	rcall	.-746    	; 0x30c <Q_getc>
 5f6:	89 81       	ldd	r24, Y+1	; 0x01
 5f8:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <__TEXT_REGION_LENGTH__+0x700136>
 5fc:	0f 90       	pop	r0
 5fe:	df 91       	pop	r29
 600:	cf 91       	pop	r28
 602:	ff 91       	pop	r31
 604:	ef 91       	pop	r30
 606:	bf 91       	pop	r27
 608:	af 91       	pop	r26
 60a:	9f 91       	pop	r25
 60c:	8f 91       	pop	r24
 60e:	7f 91       	pop	r23
 610:	6f 91       	pop	r22
 612:	5f 91       	pop	r21
 614:	4f 91       	pop	r20
 616:	3f 91       	pop	r19
 618:	2f 91       	pop	r18
 61a:	0f 90       	pop	r0
 61c:	0b be       	out	0x3b, r0	; 59
 61e:	0f 90       	pop	r0
 620:	0f be       	out	0x3f, r0	; 63
 622:	0f 90       	pop	r0
 624:	1f 90       	pop	r1
 626:	18 95       	reti

00000628 <Q_putc>:
 628:	cf 93       	push	r28
 62a:	df 93       	push	r29
 62c:	e8 2f       	mov	r30, r24
 62e:	f0 e0       	ldi	r31, 0x00	; 0
 630:	df 01       	movw	r26, r30
 632:	aa 0f       	add	r26, r26
 634:	bb 1f       	adc	r27, r27
 636:	aa 0f       	add	r26, r26
 638:	bb 1f       	adc	r27, r27
 63a:	aa 0f       	add	r26, r26
 63c:	bb 1f       	adc	r27, r27
 63e:	a4 58       	subi	r26, 0x84	; 132
 640:	bd 4f       	sbci	r27, 0xFD	; 253
 642:	13 96       	adiw	r26, 0x03	; 3
 644:	8c 91       	ld	r24, X
 646:	80 fd       	sbrc	r24, 0
 648:	44 c0       	rjmp	.+136    	; 0x6d2 <Q_putc+0xaa>
 64a:	9f b7       	in	r25, 0x3f	; 63
 64c:	f8 94       	cli
 64e:	df 01       	movw	r26, r30
 650:	aa 0f       	add	r26, r26
 652:	bb 1f       	adc	r27, r27
 654:	aa 0f       	add	r26, r26
 656:	bb 1f       	adc	r27, r27
 658:	aa 0f       	add	r26, r26
 65a:	bb 1f       	adc	r27, r27
 65c:	a4 58       	subi	r26, 0x84	; 132
 65e:	bd 4f       	sbci	r27, 0xFD	; 253
 660:	8c 91       	ld	r24, X
 662:	16 96       	adiw	r26, 0x06	; 6
 664:	cd 91       	ld	r28, X+
 666:	dc 91       	ld	r29, X
 668:	17 97       	sbiw	r26, 0x07	; 7
 66a:	c8 0f       	add	r28, r24
 66c:	d1 1d       	adc	r29, r1
 66e:	68 83       	st	Y, r22
 670:	8f 5f       	subi	r24, 0xFF	; 255
 672:	12 96       	adiw	r26, 0x02	; 2
 674:	2c 91       	ld	r18, X
 676:	12 97       	sbiw	r26, 0x02	; 2
 678:	82 23       	and	r24, r18
 67a:	8c 93       	st	X, r24
 67c:	14 96       	adiw	r26, 0x04	; 4
 67e:	2d 91       	ld	r18, X+
 680:	3c 91       	ld	r19, X
 682:	15 97       	sbiw	r26, 0x05	; 5
 684:	2f 5f       	subi	r18, 0xFF	; 255
 686:	3f 4f       	sbci	r19, 0xFF	; 255
 688:	15 96       	adiw	r26, 0x05	; 5
 68a:	3c 93       	st	X, r19
 68c:	2e 93       	st	-X, r18
 68e:	14 97       	sbiw	r26, 0x04	; 4
 690:	11 96       	adiw	r26, 0x01	; 1
 692:	2c 91       	ld	r18, X
 694:	82 13       	cpse	r24, r18
 696:	0f c0       	rjmp	.+30     	; 0x6b6 <Q_putc+0x8e>
 698:	df 01       	movw	r26, r30
 69a:	aa 0f       	add	r26, r26
 69c:	bb 1f       	adc	r27, r27
 69e:	aa 0f       	add	r26, r26
 6a0:	bb 1f       	adc	r27, r27
 6a2:	aa 0f       	add	r26, r26
 6a4:	bb 1f       	adc	r27, r27
 6a6:	a4 58       	subi	r26, 0x84	; 132
 6a8:	bd 4f       	sbci	r27, 0xFD	; 253
 6aa:	13 96       	adiw	r26, 0x03	; 3
 6ac:	8c 91       	ld	r24, X
 6ae:	13 97       	sbiw	r26, 0x03	; 3
 6b0:	81 60       	ori	r24, 0x01	; 1
 6b2:	13 96       	adiw	r26, 0x03	; 3
 6b4:	8c 93       	st	X, r24
 6b6:	ee 0f       	add	r30, r30
 6b8:	ff 1f       	adc	r31, r31
 6ba:	ee 0f       	add	r30, r30
 6bc:	ff 1f       	adc	r31, r31
 6be:	ee 0f       	add	r30, r30
 6c0:	ff 1f       	adc	r31, r31
 6c2:	e4 58       	subi	r30, 0x84	; 132
 6c4:	fd 4f       	sbci	r31, 0xFD	; 253
 6c6:	83 81       	ldd	r24, Z+3	; 0x03
 6c8:	8d 7f       	andi	r24, 0xFD	; 253
 6ca:	83 83       	std	Z+3, r24	; 0x03
 6cc:	9f bf       	out	0x3f, r25	; 63
 6ce:	81 e0       	ldi	r24, 0x01	; 1
 6d0:	01 c0       	rjmp	.+2      	; 0x6d4 <Q_putc+0xac>
 6d2:	80 e0       	ldi	r24, 0x00	; 0
 6d4:	df 91       	pop	r29
 6d6:	cf 91       	pop	r28
 6d8:	08 95       	ret

000006da <__vector_25>:
 6da:	1f 92       	push	r1
 6dc:	0f 92       	push	r0
 6de:	0f b6       	in	r0, 0x3f	; 63
 6e0:	0f 92       	push	r0
 6e2:	11 24       	eor	r1, r1
 6e4:	0b b6       	in	r0, 0x3b	; 59
 6e6:	0f 92       	push	r0
 6e8:	2f 93       	push	r18
 6ea:	3f 93       	push	r19
 6ec:	4f 93       	push	r20
 6ee:	5f 93       	push	r21
 6f0:	6f 93       	push	r22
 6f2:	7f 93       	push	r23
 6f4:	8f 93       	push	r24
 6f6:	9f 93       	push	r25
 6f8:	af 93       	push	r26
 6fa:	bf 93       	push	r27
 6fc:	ef 93       	push	r30
 6fe:	ff 93       	push	r31
 700:	60 91 c6 00 	lds	r22, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
 704:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__data_start>
 708:	8f df       	rcall	.-226    	; 0x628 <Q_putc>
 70a:	ff 91       	pop	r31
 70c:	ef 91       	pop	r30
 70e:	bf 91       	pop	r27
 710:	af 91       	pop	r26
 712:	9f 91       	pop	r25
 714:	8f 91       	pop	r24
 716:	7f 91       	pop	r23
 718:	6f 91       	pop	r22
 71a:	5f 91       	pop	r21
 71c:	4f 91       	pop	r20
 71e:	3f 91       	pop	r19
 720:	2f 91       	pop	r18
 722:	0f 90       	pop	r0
 724:	0b be       	out	0x3b, r0	; 59
 726:	0f 90       	pop	r0
 728:	0f be       	out	0x3f, r0	; 63
 72a:	0f 90       	pop	r0
 72c:	1f 90       	pop	r1
 72e:	18 95       	reti

00000730 <__vector_36>:
 730:	1f 92       	push	r1
 732:	0f 92       	push	r0
 734:	0f b6       	in	r0, 0x3f	; 63
 736:	0f 92       	push	r0
 738:	11 24       	eor	r1, r1
 73a:	0b b6       	in	r0, 0x3b	; 59
 73c:	0f 92       	push	r0
 73e:	2f 93       	push	r18
 740:	3f 93       	push	r19
 742:	4f 93       	push	r20
 744:	5f 93       	push	r21
 746:	6f 93       	push	r22
 748:	7f 93       	push	r23
 74a:	8f 93       	push	r24
 74c:	9f 93       	push	r25
 74e:	af 93       	push	r26
 750:	bf 93       	push	r27
 752:	ef 93       	push	r30
 754:	ff 93       	push	r31
 756:	60 91 ce 00 	lds	r22, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>
 75a:	80 91 0a 02 	lds	r24, 0x020A	; 0x80020a <__data_start+0xa>
 75e:	64 df       	rcall	.-312    	; 0x628 <Q_putc>
 760:	ff 91       	pop	r31
 762:	ef 91       	pop	r30
 764:	bf 91       	pop	r27
 766:	af 91       	pop	r26
 768:	9f 91       	pop	r25
 76a:	8f 91       	pop	r24
 76c:	7f 91       	pop	r23
 76e:	6f 91       	pop	r22
 770:	5f 91       	pop	r21
 772:	4f 91       	pop	r20
 774:	3f 91       	pop	r19
 776:	2f 91       	pop	r18
 778:	0f 90       	pop	r0
 77a:	0b be       	out	0x3b, r0	; 59
 77c:	0f 90       	pop	r0
 77e:	0f be       	out	0x3f, r0	; 63
 780:	0f 90       	pop	r0
 782:	1f 90       	pop	r1
 784:	18 95       	reti

00000786 <__vector_51>:
 786:	1f 92       	push	r1
 788:	0f 92       	push	r0
 78a:	0f b6       	in	r0, 0x3f	; 63
 78c:	0f 92       	push	r0
 78e:	11 24       	eor	r1, r1
 790:	0b b6       	in	r0, 0x3b	; 59
 792:	0f 92       	push	r0
 794:	2f 93       	push	r18
 796:	3f 93       	push	r19
 798:	4f 93       	push	r20
 79a:	5f 93       	push	r21
 79c:	6f 93       	push	r22
 79e:	7f 93       	push	r23
 7a0:	8f 93       	push	r24
 7a2:	9f 93       	push	r25
 7a4:	af 93       	push	r26
 7a6:	bf 93       	push	r27
 7a8:	ef 93       	push	r30
 7aa:	ff 93       	push	r31
 7ac:	60 91 d6 00 	lds	r22, 0x00D6	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7000d6>
 7b0:	80 91 14 02 	lds	r24, 0x0214	; 0x800214 <__data_start+0x14>
 7b4:	39 df       	rcall	.-398    	; 0x628 <Q_putc>
 7b6:	ff 91       	pop	r31
 7b8:	ef 91       	pop	r30
 7ba:	bf 91       	pop	r27
 7bc:	af 91       	pop	r26
 7be:	9f 91       	pop	r25
 7c0:	8f 91       	pop	r24
 7c2:	7f 91       	pop	r23
 7c4:	6f 91       	pop	r22
 7c6:	5f 91       	pop	r21
 7c8:	4f 91       	pop	r20
 7ca:	3f 91       	pop	r19
 7cc:	2f 91       	pop	r18
 7ce:	0f 90       	pop	r0
 7d0:	0b be       	out	0x3b, r0	; 59
 7d2:	0f 90       	pop	r0
 7d4:	0f be       	out	0x3f, r0	; 63
 7d6:	0f 90       	pop	r0
 7d8:	1f 90       	pop	r1
 7da:	18 95       	reti

000007dc <__vector_54>:
 7dc:	1f 92       	push	r1
 7de:	0f 92       	push	r0
 7e0:	0f b6       	in	r0, 0x3f	; 63
 7e2:	0f 92       	push	r0
 7e4:	11 24       	eor	r1, r1
 7e6:	0b b6       	in	r0, 0x3b	; 59
 7e8:	0f 92       	push	r0
 7ea:	2f 93       	push	r18
 7ec:	3f 93       	push	r19
 7ee:	4f 93       	push	r20
 7f0:	5f 93       	push	r21
 7f2:	6f 93       	push	r22
 7f4:	7f 93       	push	r23
 7f6:	8f 93       	push	r24
 7f8:	9f 93       	push	r25
 7fa:	af 93       	push	r26
 7fc:	bf 93       	push	r27
 7fe:	ef 93       	push	r30
 800:	ff 93       	push	r31
 802:	60 91 36 01 	lds	r22, 0x0136	; 0x800136 <__TEXT_REGION_LENGTH__+0x700136>
 806:	80 91 1e 02 	lds	r24, 0x021E	; 0x80021e <__data_start+0x1e>
 80a:	0e df       	rcall	.-484    	; 0x628 <Q_putc>
 80c:	ff 91       	pop	r31
 80e:	ef 91       	pop	r30
 810:	bf 91       	pop	r27
 812:	af 91       	pop	r26
 814:	9f 91       	pop	r25
 816:	8f 91       	pop	r24
 818:	7f 91       	pop	r23
 81a:	6f 91       	pop	r22
 81c:	5f 91       	pop	r21
 81e:	4f 91       	pop	r20
 820:	3f 91       	pop	r19
 822:	2f 91       	pop	r18
 824:	0f 90       	pop	r0
 826:	0b be       	out	0x3b, r0	; 59
 828:	0f 90       	pop	r0
 82a:	0f be       	out	0x3f, r0	; 63
 82c:	0f 90       	pop	r0
 82e:	1f 90       	pop	r1
 830:	18 95       	reti

00000832 <Serial0_poll_write>:
 832:	e0 ec       	ldi	r30, 0xC0	; 192
 834:	f0 e0       	ldi	r31, 0x00	; 0
 836:	90 81       	ld	r25, Z
 838:	95 ff       	sbrs	r25, 5
 83a:	fd cf       	rjmp	.-6      	; 0x836 <Serial0_poll_write+0x4>
 83c:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
 840:	08 95       	ret

00000842 <Serial0_poll_print>:
 842:	cf 93       	push	r28
 844:	df 93       	push	r29
 846:	ec 01       	movw	r28, r24
 848:	88 81       	ld	r24, Y
 84a:	88 23       	and	r24, r24
 84c:	29 f0       	breq	.+10     	; 0x858 <Serial0_poll_print+0x16>
 84e:	21 96       	adiw	r28, 0x01	; 1
 850:	f0 df       	rcall	.-32     	; 0x832 <Serial0_poll_write>
 852:	89 91       	ld	r24, Y+
 854:	81 11       	cpse	r24, r1
 856:	fc cf       	rjmp	.-8      	; 0x850 <Serial0_poll_print+0xe>
 858:	df 91       	pop	r29
 85a:	cf 91       	pop	r28
 85c:	08 95       	ret

0000085e <Serial0_config>:
 85e:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
 862:	2f ef       	ldi	r18, 0xFF	; 255
 864:	39 ef       	ldi	r19, 0xF9	; 249
 866:	50 e0       	ldi	r21, 0x00	; 0
 868:	21 50       	subi	r18, 0x01	; 1
 86a:	30 40       	sbci	r19, 0x00	; 0
 86c:	50 40       	sbci	r21, 0x00	; 0
 86e:	e1 f7       	brne	.-8      	; 0x868 <Serial0_config+0xa>
 870:	00 c0       	rjmp	.+0      	; 0x872 <Serial0_config+0x14>
 872:	00 00       	nop
 874:	20 91 c6 00 	lds	r18, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
 878:	60 38       	cpi	r22, 0x80	; 128
 87a:	20 e7       	ldi	r18, 0x70	; 112
 87c:	72 07       	cpc	r23, r18
 87e:	81 05       	cpc	r24, r1
 880:	91 05       	cpc	r25, r1
 882:	09 f4       	brne	.+2      	; 0x886 <Serial0_config+0x28>
 884:	8f c0       	rjmp	.+286    	; 0x9a4 <Serial0_config+0x146>
 886:	24 f5       	brge	.+72     	; 0x8d0 <Serial0_config+0x72>
 888:	60 38       	cpi	r22, 0x80	; 128
 88a:	55 e2       	ldi	r21, 0x25	; 37
 88c:	75 07       	cpc	r23, r21
 88e:	81 05       	cpc	r24, r1
 890:	91 05       	cpc	r25, r1
 892:	09 f4       	brne	.+2      	; 0x896 <Serial0_config+0x38>
 894:	63 c0       	rjmp	.+198    	; 0x95c <Serial0_config+0xfe>
 896:	74 f4       	brge	.+28     	; 0x8b4 <Serial0_config+0x56>
 898:	60 36       	cpi	r22, 0x60	; 96
 89a:	39 e0       	ldi	r19, 0x09	; 9
 89c:	73 07       	cpc	r23, r19
 89e:	81 05       	cpc	r24, r1
 8a0:	91 05       	cpc	r25, r1
 8a2:	09 f4       	brne	.+2      	; 0x8a6 <Serial0_config+0x48>
 8a4:	43 c0       	rjmp	.+134    	; 0x92c <Serial0_config+0xce>
 8a6:	60 3c       	cpi	r22, 0xC0	; 192
 8a8:	72 41       	sbci	r23, 0x12	; 18
 8aa:	81 05       	cpc	r24, r1
 8ac:	91 05       	cpc	r25, r1
 8ae:	09 f4       	brne	.+2      	; 0x8b2 <Serial0_config+0x54>
 8b0:	49 c0       	rjmp	.+146    	; 0x944 <Serial0_config+0xe6>
 8b2:	cb c0       	rjmp	.+406    	; 0xa4a <Serial0_config+0x1ec>
 8b4:	60 34       	cpi	r22, 0x40	; 64
 8b6:	28 e3       	ldi	r18, 0x38	; 56
 8b8:	72 07       	cpc	r23, r18
 8ba:	81 05       	cpc	r24, r1
 8bc:	91 05       	cpc	r25, r1
 8be:	09 f4       	brne	.+2      	; 0x8c2 <Serial0_config+0x64>
 8c0:	59 c0       	rjmp	.+178    	; 0x974 <Serial0_config+0x116>
 8c2:	61 15       	cp	r22, r1
 8c4:	7b 44       	sbci	r23, 0x4B	; 75
 8c6:	81 05       	cpc	r24, r1
 8c8:	91 05       	cpc	r25, r1
 8ca:	09 f4       	brne	.+2      	; 0x8ce <Serial0_config+0x70>
 8cc:	5f c0       	rjmp	.+190    	; 0x98c <Serial0_config+0x12e>
 8ce:	bd c0       	rjmp	.+378    	; 0xa4a <Serial0_config+0x1ec>
 8d0:	61 15       	cp	r22, r1
 8d2:	52 ec       	ldi	r21, 0xC2	; 194
 8d4:	75 07       	cpc	r23, r21
 8d6:	51 e0       	ldi	r21, 0x01	; 1
 8d8:	85 07       	cpc	r24, r21
 8da:	91 05       	cpc	r25, r1
 8dc:	09 f4       	brne	.+2      	; 0x8e0 <Serial0_config+0x82>
 8de:	86 c0       	rjmp	.+268    	; 0x9ec <Serial0_config+0x18e>
 8e0:	74 f4       	brge	.+28     	; 0x8fe <Serial0_config+0xa0>
 8e2:	61 15       	cp	r22, r1
 8e4:	36 e9       	ldi	r19, 0x96	; 150
 8e6:	73 07       	cpc	r23, r19
 8e8:	81 05       	cpc	r24, r1
 8ea:	91 05       	cpc	r25, r1
 8ec:	09 f4       	brne	.+2      	; 0x8f0 <Serial0_config+0x92>
 8ee:	66 c0       	rjmp	.+204    	; 0x9bc <Serial0_config+0x15e>
 8f0:	61 15       	cp	r22, r1
 8f2:	71 4e       	sbci	r23, 0xE1	; 225
 8f4:	81 05       	cpc	r24, r1
 8f6:	91 05       	cpc	r25, r1
 8f8:	09 f4       	brne	.+2      	; 0x8fc <Serial0_config+0x9e>
 8fa:	6c c0       	rjmp	.+216    	; 0x9d4 <Serial0_config+0x176>
 8fc:	a6 c0       	rjmp	.+332    	; 0xa4a <Serial0_config+0x1ec>
 8fe:	60 32       	cpi	r22, 0x20	; 32
 900:	21 ea       	ldi	r18, 0xA1	; 161
 902:	72 07       	cpc	r23, r18
 904:	27 e0       	ldi	r18, 0x07	; 7
 906:	82 07       	cpc	r24, r18
 908:	91 05       	cpc	r25, r1
 90a:	09 f4       	brne	.+2      	; 0x90e <Serial0_config+0xb0>
 90c:	87 c0       	rjmp	.+270    	; 0xa1c <Serial0_config+0x1be>
 90e:	60 34       	cpi	r22, 0x40	; 64
 910:	32 e4       	ldi	r19, 0x42	; 66
 912:	73 07       	cpc	r23, r19
 914:	3f e0       	ldi	r19, 0x0F	; 15
 916:	83 07       	cpc	r24, r19
 918:	91 05       	cpc	r25, r1
 91a:	09 f4       	brne	.+2      	; 0x91e <Serial0_config+0xc0>
 91c:	8b c0       	rjmp	.+278    	; 0xa34 <Serial0_config+0x1d6>
 91e:	60 39       	cpi	r22, 0x90	; 144
 920:	70 4d       	sbci	r23, 0xD0	; 208
 922:	83 40       	sbci	r24, 0x03	; 3
 924:	91 05       	cpc	r25, r1
 926:	09 f0       	breq	.+2      	; 0x92a <Serial0_config+0xcc>
 928:	90 c0       	rjmp	.+288    	; 0xa4a <Serial0_config+0x1ec>
 92a:	6c c0       	rjmp	.+216    	; 0xa04 <Serial0_config+0x1a6>
 92c:	80 e4       	ldi	r24, 0x40	; 64
 92e:	93 e0       	ldi	r25, 0x03	; 3
 930:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
 934:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
 938:	e0 ec       	ldi	r30, 0xC0	; 192
 93a:	f0 e0       	ldi	r31, 0x00	; 0
 93c:	80 81       	ld	r24, Z
 93e:	82 60       	ori	r24, 0x02	; 2
 940:	80 83       	st	Z, r24
 942:	83 c0       	rjmp	.+262    	; 0xa4a <Serial0_config+0x1ec>
 944:	80 ea       	ldi	r24, 0xA0	; 160
 946:	91 e0       	ldi	r25, 0x01	; 1
 948:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
 94c:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
 950:	e0 ec       	ldi	r30, 0xC0	; 192
 952:	f0 e0       	ldi	r31, 0x00	; 0
 954:	80 81       	ld	r24, Z
 956:	82 60       	ori	r24, 0x02	; 2
 958:	80 83       	st	Z, r24
 95a:	77 c0       	rjmp	.+238    	; 0xa4a <Serial0_config+0x1ec>
 95c:	87 e6       	ldi	r24, 0x67	; 103
 95e:	90 e0       	ldi	r25, 0x00	; 0
 960:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
 964:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
 968:	e0 ec       	ldi	r30, 0xC0	; 192
 96a:	f0 e0       	ldi	r31, 0x00	; 0
 96c:	80 81       	ld	r24, Z
 96e:	8d 7f       	andi	r24, 0xFD	; 253
 970:	80 83       	st	Z, r24
 972:	6b c0       	rjmp	.+214    	; 0xa4a <Serial0_config+0x1ec>
 974:	8a e8       	ldi	r24, 0x8A	; 138
 976:	90 e0       	ldi	r25, 0x00	; 0
 978:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
 97c:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
 980:	e0 ec       	ldi	r30, 0xC0	; 192
 982:	f0 e0       	ldi	r31, 0x00	; 0
 984:	80 81       	ld	r24, Z
 986:	82 60       	ori	r24, 0x02	; 2
 988:	80 83       	st	Z, r24
 98a:	5f c0       	rjmp	.+190    	; 0xa4a <Serial0_config+0x1ec>
 98c:	83 e3       	ldi	r24, 0x33	; 51
 98e:	90 e0       	ldi	r25, 0x00	; 0
 990:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
 994:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
 998:	e0 ec       	ldi	r30, 0xC0	; 192
 99a:	f0 e0       	ldi	r31, 0x00	; 0
 99c:	80 81       	ld	r24, Z
 99e:	8d 7f       	andi	r24, 0xFD	; 253
 9a0:	80 83       	st	Z, r24
 9a2:	53 c0       	rjmp	.+166    	; 0xa4a <Serial0_config+0x1ec>
 9a4:	84 e4       	ldi	r24, 0x44	; 68
 9a6:	90 e0       	ldi	r25, 0x00	; 0
 9a8:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
 9ac:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
 9b0:	e0 ec       	ldi	r30, 0xC0	; 192
 9b2:	f0 e0       	ldi	r31, 0x00	; 0
 9b4:	80 81       	ld	r24, Z
 9b6:	82 60       	ori	r24, 0x02	; 2
 9b8:	80 83       	st	Z, r24
 9ba:	47 c0       	rjmp	.+142    	; 0xa4a <Serial0_config+0x1ec>
 9bc:	89 e1       	ldi	r24, 0x19	; 25
 9be:	90 e0       	ldi	r25, 0x00	; 0
 9c0:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
 9c4:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
 9c8:	e0 ec       	ldi	r30, 0xC0	; 192
 9ca:	f0 e0       	ldi	r31, 0x00	; 0
 9cc:	80 81       	ld	r24, Z
 9ce:	8d 7f       	andi	r24, 0xFD	; 253
 9d0:	80 83       	st	Z, r24
 9d2:	3b c0       	rjmp	.+118    	; 0xa4a <Serial0_config+0x1ec>
 9d4:	82 e2       	ldi	r24, 0x22	; 34
 9d6:	90 e0       	ldi	r25, 0x00	; 0
 9d8:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
 9dc:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
 9e0:	e0 ec       	ldi	r30, 0xC0	; 192
 9e2:	f0 e0       	ldi	r31, 0x00	; 0
 9e4:	80 81       	ld	r24, Z
 9e6:	82 60       	ori	r24, 0x02	; 2
 9e8:	80 83       	st	Z, r24
 9ea:	2f c0       	rjmp	.+94     	; 0xa4a <Serial0_config+0x1ec>
 9ec:	80 e1       	ldi	r24, 0x10	; 16
 9ee:	90 e0       	ldi	r25, 0x00	; 0
 9f0:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
 9f4:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
 9f8:	e0 ec       	ldi	r30, 0xC0	; 192
 9fa:	f0 e0       	ldi	r31, 0x00	; 0
 9fc:	80 81       	ld	r24, Z
 9fe:	82 60       	ori	r24, 0x02	; 2
 a00:	80 83       	st	Z, r24
 a02:	23 c0       	rjmp	.+70     	; 0xa4a <Serial0_config+0x1ec>
 a04:	87 e0       	ldi	r24, 0x07	; 7
 a06:	90 e0       	ldi	r25, 0x00	; 0
 a08:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
 a0c:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
 a10:	e0 ec       	ldi	r30, 0xC0	; 192
 a12:	f0 e0       	ldi	r31, 0x00	; 0
 a14:	80 81       	ld	r24, Z
 a16:	82 60       	ori	r24, 0x02	; 2
 a18:	80 83       	st	Z, r24
 a1a:	17 c0       	rjmp	.+46     	; 0xa4a <Serial0_config+0x1ec>
 a1c:	83 e0       	ldi	r24, 0x03	; 3
 a1e:	90 e0       	ldi	r25, 0x00	; 0
 a20:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
 a24:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
 a28:	e0 ec       	ldi	r30, 0xC0	; 192
 a2a:	f0 e0       	ldi	r31, 0x00	; 0
 a2c:	80 81       	ld	r24, Z
 a2e:	82 60       	ori	r24, 0x02	; 2
 a30:	80 83       	st	Z, r24
 a32:	0b c0       	rjmp	.+22     	; 0xa4a <Serial0_config+0x1ec>
 a34:	81 e0       	ldi	r24, 0x01	; 1
 a36:	90 e0       	ldi	r25, 0x00	; 0
 a38:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
 a3c:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
 a40:	e0 ec       	ldi	r30, 0xC0	; 192
 a42:	f0 e0       	ldi	r31, 0x00	; 0
 a44:	80 81       	ld	r24, Z
 a46:	82 60       	ori	r24, 0x02	; 2
 a48:	80 83       	st	Z, r24
 a4a:	40 93 c2 00 	sts	0x00C2, r20	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
 a4e:	e1 ec       	ldi	r30, 0xC1	; 193
 a50:	f0 e0       	ldi	r31, 0x00	; 0
 a52:	80 81       	ld	r24, Z
 a54:	88 61       	ori	r24, 0x18	; 24
 a56:	80 83       	st	Z, r24
 a58:	08 95       	ret

00000a5a <Serial1_config>:
 a5a:	10 92 c9 00 	sts	0x00C9, r1	; 0x8000c9 <__TEXT_REGION_LENGTH__+0x7000c9>
 a5e:	2f ef       	ldi	r18, 0xFF	; 255
 a60:	39 ef       	ldi	r19, 0xF9	; 249
 a62:	50 e0       	ldi	r21, 0x00	; 0
 a64:	21 50       	subi	r18, 0x01	; 1
 a66:	30 40       	sbci	r19, 0x00	; 0
 a68:	50 40       	sbci	r21, 0x00	; 0
 a6a:	e1 f7       	brne	.-8      	; 0xa64 <Serial1_config+0xa>
 a6c:	00 c0       	rjmp	.+0      	; 0xa6e <Serial1_config+0x14>
 a6e:	00 00       	nop
 a70:	20 91 ce 00 	lds	r18, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>
 a74:	60 38       	cpi	r22, 0x80	; 128
 a76:	20 e7       	ldi	r18, 0x70	; 112
 a78:	72 07       	cpc	r23, r18
 a7a:	81 05       	cpc	r24, r1
 a7c:	91 05       	cpc	r25, r1
 a7e:	09 f4       	brne	.+2      	; 0xa82 <Serial1_config+0x28>
 a80:	8f c0       	rjmp	.+286    	; 0xba0 <Serial1_config+0x146>
 a82:	24 f5       	brge	.+72     	; 0xacc <Serial1_config+0x72>
 a84:	60 38       	cpi	r22, 0x80	; 128
 a86:	55 e2       	ldi	r21, 0x25	; 37
 a88:	75 07       	cpc	r23, r21
 a8a:	81 05       	cpc	r24, r1
 a8c:	91 05       	cpc	r25, r1
 a8e:	09 f4       	brne	.+2      	; 0xa92 <Serial1_config+0x38>
 a90:	63 c0       	rjmp	.+198    	; 0xb58 <Serial1_config+0xfe>
 a92:	74 f4       	brge	.+28     	; 0xab0 <Serial1_config+0x56>
 a94:	60 36       	cpi	r22, 0x60	; 96
 a96:	39 e0       	ldi	r19, 0x09	; 9
 a98:	73 07       	cpc	r23, r19
 a9a:	81 05       	cpc	r24, r1
 a9c:	91 05       	cpc	r25, r1
 a9e:	09 f4       	brne	.+2      	; 0xaa2 <Serial1_config+0x48>
 aa0:	43 c0       	rjmp	.+134    	; 0xb28 <Serial1_config+0xce>
 aa2:	60 3c       	cpi	r22, 0xC0	; 192
 aa4:	72 41       	sbci	r23, 0x12	; 18
 aa6:	81 05       	cpc	r24, r1
 aa8:	91 05       	cpc	r25, r1
 aaa:	09 f4       	brne	.+2      	; 0xaae <Serial1_config+0x54>
 aac:	49 c0       	rjmp	.+146    	; 0xb40 <Serial1_config+0xe6>
 aae:	cb c0       	rjmp	.+406    	; 0xc46 <Serial1_config+0x1ec>
 ab0:	60 34       	cpi	r22, 0x40	; 64
 ab2:	28 e3       	ldi	r18, 0x38	; 56
 ab4:	72 07       	cpc	r23, r18
 ab6:	81 05       	cpc	r24, r1
 ab8:	91 05       	cpc	r25, r1
 aba:	09 f4       	brne	.+2      	; 0xabe <Serial1_config+0x64>
 abc:	59 c0       	rjmp	.+178    	; 0xb70 <Serial1_config+0x116>
 abe:	61 15       	cp	r22, r1
 ac0:	7b 44       	sbci	r23, 0x4B	; 75
 ac2:	81 05       	cpc	r24, r1
 ac4:	91 05       	cpc	r25, r1
 ac6:	09 f4       	brne	.+2      	; 0xaca <Serial1_config+0x70>
 ac8:	5f c0       	rjmp	.+190    	; 0xb88 <Serial1_config+0x12e>
 aca:	bd c0       	rjmp	.+378    	; 0xc46 <Serial1_config+0x1ec>
 acc:	61 15       	cp	r22, r1
 ace:	52 ec       	ldi	r21, 0xC2	; 194
 ad0:	75 07       	cpc	r23, r21
 ad2:	51 e0       	ldi	r21, 0x01	; 1
 ad4:	85 07       	cpc	r24, r21
 ad6:	91 05       	cpc	r25, r1
 ad8:	09 f4       	brne	.+2      	; 0xadc <Serial1_config+0x82>
 ada:	86 c0       	rjmp	.+268    	; 0xbe8 <Serial1_config+0x18e>
 adc:	74 f4       	brge	.+28     	; 0xafa <Serial1_config+0xa0>
 ade:	61 15       	cp	r22, r1
 ae0:	36 e9       	ldi	r19, 0x96	; 150
 ae2:	73 07       	cpc	r23, r19
 ae4:	81 05       	cpc	r24, r1
 ae6:	91 05       	cpc	r25, r1
 ae8:	09 f4       	brne	.+2      	; 0xaec <Serial1_config+0x92>
 aea:	66 c0       	rjmp	.+204    	; 0xbb8 <Serial1_config+0x15e>
 aec:	61 15       	cp	r22, r1
 aee:	71 4e       	sbci	r23, 0xE1	; 225
 af0:	81 05       	cpc	r24, r1
 af2:	91 05       	cpc	r25, r1
 af4:	09 f4       	brne	.+2      	; 0xaf8 <Serial1_config+0x9e>
 af6:	6c c0       	rjmp	.+216    	; 0xbd0 <Serial1_config+0x176>
 af8:	a6 c0       	rjmp	.+332    	; 0xc46 <Serial1_config+0x1ec>
 afa:	60 32       	cpi	r22, 0x20	; 32
 afc:	21 ea       	ldi	r18, 0xA1	; 161
 afe:	72 07       	cpc	r23, r18
 b00:	27 e0       	ldi	r18, 0x07	; 7
 b02:	82 07       	cpc	r24, r18
 b04:	91 05       	cpc	r25, r1
 b06:	09 f4       	brne	.+2      	; 0xb0a <Serial1_config+0xb0>
 b08:	87 c0       	rjmp	.+270    	; 0xc18 <Serial1_config+0x1be>
 b0a:	60 34       	cpi	r22, 0x40	; 64
 b0c:	32 e4       	ldi	r19, 0x42	; 66
 b0e:	73 07       	cpc	r23, r19
 b10:	3f e0       	ldi	r19, 0x0F	; 15
 b12:	83 07       	cpc	r24, r19
 b14:	91 05       	cpc	r25, r1
 b16:	09 f4       	brne	.+2      	; 0xb1a <Serial1_config+0xc0>
 b18:	8b c0       	rjmp	.+278    	; 0xc30 <Serial1_config+0x1d6>
 b1a:	60 39       	cpi	r22, 0x90	; 144
 b1c:	70 4d       	sbci	r23, 0xD0	; 208
 b1e:	83 40       	sbci	r24, 0x03	; 3
 b20:	91 05       	cpc	r25, r1
 b22:	09 f0       	breq	.+2      	; 0xb26 <Serial1_config+0xcc>
 b24:	90 c0       	rjmp	.+288    	; 0xc46 <Serial1_config+0x1ec>
 b26:	6c c0       	rjmp	.+216    	; 0xc00 <Serial1_config+0x1a6>
 b28:	80 e4       	ldi	r24, 0x40	; 64
 b2a:	93 e0       	ldi	r25, 0x03	; 3
 b2c:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>
 b30:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7000cc>
 b34:	e8 ec       	ldi	r30, 0xC8	; 200
 b36:	f0 e0       	ldi	r31, 0x00	; 0
 b38:	80 81       	ld	r24, Z
 b3a:	82 60       	ori	r24, 0x02	; 2
 b3c:	80 83       	st	Z, r24
 b3e:	83 c0       	rjmp	.+262    	; 0xc46 <Serial1_config+0x1ec>
 b40:	80 ea       	ldi	r24, 0xA0	; 160
 b42:	91 e0       	ldi	r25, 0x01	; 1
 b44:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>
 b48:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7000cc>
 b4c:	e8 ec       	ldi	r30, 0xC8	; 200
 b4e:	f0 e0       	ldi	r31, 0x00	; 0
 b50:	80 81       	ld	r24, Z
 b52:	82 60       	ori	r24, 0x02	; 2
 b54:	80 83       	st	Z, r24
 b56:	77 c0       	rjmp	.+238    	; 0xc46 <Serial1_config+0x1ec>
 b58:	87 e6       	ldi	r24, 0x67	; 103
 b5a:	90 e0       	ldi	r25, 0x00	; 0
 b5c:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>
 b60:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7000cc>
 b64:	e8 ec       	ldi	r30, 0xC8	; 200
 b66:	f0 e0       	ldi	r31, 0x00	; 0
 b68:	80 81       	ld	r24, Z
 b6a:	8d 7f       	andi	r24, 0xFD	; 253
 b6c:	80 83       	st	Z, r24
 b6e:	6b c0       	rjmp	.+214    	; 0xc46 <Serial1_config+0x1ec>
 b70:	8a e8       	ldi	r24, 0x8A	; 138
 b72:	90 e0       	ldi	r25, 0x00	; 0
 b74:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>
 b78:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7000cc>
 b7c:	e8 ec       	ldi	r30, 0xC8	; 200
 b7e:	f0 e0       	ldi	r31, 0x00	; 0
 b80:	80 81       	ld	r24, Z
 b82:	82 60       	ori	r24, 0x02	; 2
 b84:	80 83       	st	Z, r24
 b86:	5f c0       	rjmp	.+190    	; 0xc46 <Serial1_config+0x1ec>
 b88:	83 e3       	ldi	r24, 0x33	; 51
 b8a:	90 e0       	ldi	r25, 0x00	; 0
 b8c:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>
 b90:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7000cc>
 b94:	e8 ec       	ldi	r30, 0xC8	; 200
 b96:	f0 e0       	ldi	r31, 0x00	; 0
 b98:	80 81       	ld	r24, Z
 b9a:	8d 7f       	andi	r24, 0xFD	; 253
 b9c:	80 83       	st	Z, r24
 b9e:	53 c0       	rjmp	.+166    	; 0xc46 <Serial1_config+0x1ec>
 ba0:	84 e4       	ldi	r24, 0x44	; 68
 ba2:	90 e0       	ldi	r25, 0x00	; 0
 ba4:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>
 ba8:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7000cc>
 bac:	e8 ec       	ldi	r30, 0xC8	; 200
 bae:	f0 e0       	ldi	r31, 0x00	; 0
 bb0:	80 81       	ld	r24, Z
 bb2:	82 60       	ori	r24, 0x02	; 2
 bb4:	80 83       	st	Z, r24
 bb6:	47 c0       	rjmp	.+142    	; 0xc46 <Serial1_config+0x1ec>
 bb8:	89 e1       	ldi	r24, 0x19	; 25
 bba:	90 e0       	ldi	r25, 0x00	; 0
 bbc:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>
 bc0:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7000cc>
 bc4:	e8 ec       	ldi	r30, 0xC8	; 200
 bc6:	f0 e0       	ldi	r31, 0x00	; 0
 bc8:	80 81       	ld	r24, Z
 bca:	8d 7f       	andi	r24, 0xFD	; 253
 bcc:	80 83       	st	Z, r24
 bce:	3b c0       	rjmp	.+118    	; 0xc46 <Serial1_config+0x1ec>
 bd0:	82 e2       	ldi	r24, 0x22	; 34
 bd2:	90 e0       	ldi	r25, 0x00	; 0
 bd4:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>
 bd8:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7000cc>
 bdc:	e8 ec       	ldi	r30, 0xC8	; 200
 bde:	f0 e0       	ldi	r31, 0x00	; 0
 be0:	80 81       	ld	r24, Z
 be2:	82 60       	ori	r24, 0x02	; 2
 be4:	80 83       	st	Z, r24
 be6:	2f c0       	rjmp	.+94     	; 0xc46 <Serial1_config+0x1ec>
 be8:	80 e1       	ldi	r24, 0x10	; 16
 bea:	90 e0       	ldi	r25, 0x00	; 0
 bec:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>
 bf0:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7000cc>
 bf4:	e8 ec       	ldi	r30, 0xC8	; 200
 bf6:	f0 e0       	ldi	r31, 0x00	; 0
 bf8:	80 81       	ld	r24, Z
 bfa:	82 60       	ori	r24, 0x02	; 2
 bfc:	80 83       	st	Z, r24
 bfe:	23 c0       	rjmp	.+70     	; 0xc46 <Serial1_config+0x1ec>
 c00:	87 e0       	ldi	r24, 0x07	; 7
 c02:	90 e0       	ldi	r25, 0x00	; 0
 c04:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>
 c08:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7000cc>
 c0c:	e8 ec       	ldi	r30, 0xC8	; 200
 c0e:	f0 e0       	ldi	r31, 0x00	; 0
 c10:	80 81       	ld	r24, Z
 c12:	82 60       	ori	r24, 0x02	; 2
 c14:	80 83       	st	Z, r24
 c16:	17 c0       	rjmp	.+46     	; 0xc46 <Serial1_config+0x1ec>
 c18:	83 e0       	ldi	r24, 0x03	; 3
 c1a:	90 e0       	ldi	r25, 0x00	; 0
 c1c:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>
 c20:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7000cc>
 c24:	e8 ec       	ldi	r30, 0xC8	; 200
 c26:	f0 e0       	ldi	r31, 0x00	; 0
 c28:	80 81       	ld	r24, Z
 c2a:	82 60       	ori	r24, 0x02	; 2
 c2c:	80 83       	st	Z, r24
 c2e:	0b c0       	rjmp	.+22     	; 0xc46 <Serial1_config+0x1ec>
 c30:	81 e0       	ldi	r24, 0x01	; 1
 c32:	90 e0       	ldi	r25, 0x00	; 0
 c34:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>
 c38:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7000cc>
 c3c:	e8 ec       	ldi	r30, 0xC8	; 200
 c3e:	f0 e0       	ldi	r31, 0x00	; 0
 c40:	80 81       	ld	r24, Z
 c42:	82 60       	ori	r24, 0x02	; 2
 c44:	80 83       	st	Z, r24
 c46:	40 93 ca 00 	sts	0x00CA, r20	; 0x8000ca <__TEXT_REGION_LENGTH__+0x7000ca>
 c4a:	e9 ec       	ldi	r30, 0xC9	; 201
 c4c:	f0 e0       	ldi	r31, 0x00	; 0
 c4e:	80 81       	ld	r24, Z
 c50:	88 61       	ori	r24, 0x18	; 24
 c52:	80 83       	st	Z, r24
 c54:	08 95       	ret

00000c56 <init_sw_serial_getc_test>:
 c56:	cf 92       	push	r12
 c58:	df 92       	push	r13
 c5a:	ef 92       	push	r14
 c5c:	ff 92       	push	r15
 c5e:	cf 93       	push	r28
 c60:	df 93       	push	r29
 c62:	6b 01       	movw	r12, r22
 c64:	7c 01       	movw	r14, r24
 c66:	ea 01       	movw	r28, r20
 c68:	fa dd       	rcall	.-1036   	; 0x85e <Serial0_config>
 c6a:	ae 01       	movw	r20, r28
 c6c:	c7 01       	movw	r24, r14
 c6e:	b6 01       	movw	r22, r12
 c70:	f4 de       	rcall	.-536    	; 0xa5a <Serial1_config>
 c72:	df 91       	pop	r29
 c74:	cf 91       	pop	r28
 c76:	ff 90       	pop	r15
 c78:	ef 90       	pop	r14
 c7a:	df 90       	pop	r13
 c7c:	cf 90       	pop	r12
 c7e:	08 95       	ret

00000c80 <test_sw_serial_getc>:
 c80:	cf 93       	push	r28
 c82:	e8 ec       	ldi	r30, 0xC8	; 200
 c84:	f0 e0       	ldi	r31, 0x00	; 0
 c86:	80 81       	ld	r24, Z
 c88:	88 23       	and	r24, r24
 c8a:	ec f7       	brge	.-6      	; 0xc86 <test_sw_serial_getc+0x6>
 c8c:	c0 91 c8 00 	lds	r28, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7000c8>
 c90:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>
 c94:	90 91 c6 00 	lds	r25, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
 c98:	cc dd       	rcall	.-1128   	; 0x832 <Serial0_poll_write>
 c9a:	8c 2f       	mov	r24, r28
 c9c:	8c 71       	andi	r24, 0x1C	; 28
 c9e:	89 f0       	breq	.+34     	; 0xcc2 <test_sw_serial_getc+0x42>
 ca0:	c4 ff       	sbrs	r28, 4
 ca2:	03 c0       	rjmp	.+6      	; 0xcaa <test_sw_serial_getc+0x2a>
 ca4:	88 e4       	ldi	r24, 0x48	; 72
 ca6:	92 e0       	ldi	r25, 0x02	; 2
 ca8:	cc dd       	rcall	.-1128   	; 0x842 <Serial0_poll_print>
 caa:	c3 ff       	sbrs	r28, 3
 cac:	03 c0       	rjmp	.+6      	; 0xcb4 <test_sw_serial_getc+0x34>
 cae:	88 e5       	ldi	r24, 0x58	; 88
 cb0:	92 e0       	ldi	r25, 0x02	; 2
 cb2:	c7 dd       	rcall	.-1138   	; 0x842 <Serial0_poll_print>
 cb4:	c2 ff       	sbrs	r28, 2
 cb6:	03 c0       	rjmp	.+6      	; 0xcbe <test_sw_serial_getc+0x3e>
 cb8:	88 e6       	ldi	r24, 0x68	; 104
 cba:	92 e0       	ldi	r25, 0x02	; 2
 cbc:	c2 dd       	rcall	.-1148   	; 0x842 <Serial0_poll_print>
 cbe:	8a e0       	ldi	r24, 0x0A	; 10
 cc0:	b8 dd       	rcall	.-1168   	; 0x832 <Serial0_poll_write>
 cc2:	cf 91       	pop	r28
 cc4:	08 95       	ret

00000cc6 <debug_init>:
 cc6:	27 9a       	sbi	0x04, 7	; 4
 cc8:	85 b1       	in	r24, 0x05	; 5
 cca:	85 b9       	out	0x05, r24	; 5
 ccc:	08 95       	ret

00000cce <__divmodsi4>:
 cce:	05 2e       	mov	r0, r21
 cd0:	97 fb       	bst	r25, 7
 cd2:	16 f4       	brtc	.+4      	; 0xcd8 <__divmodsi4+0xa>
 cd4:	00 94       	com	r0
 cd6:	0f d0       	rcall	.+30     	; 0xcf6 <__negsi2>
 cd8:	57 fd       	sbrc	r21, 7
 cda:	05 d0       	rcall	.+10     	; 0xce6 <__divmodsi4_neg2>
 cdc:	14 d0       	rcall	.+40     	; 0xd06 <__udivmodsi4>
 cde:	07 fc       	sbrc	r0, 7
 ce0:	02 d0       	rcall	.+4      	; 0xce6 <__divmodsi4_neg2>
 ce2:	46 f4       	brtc	.+16     	; 0xcf4 <__divmodsi4_exit>
 ce4:	08 c0       	rjmp	.+16     	; 0xcf6 <__negsi2>

00000ce6 <__divmodsi4_neg2>:
 ce6:	50 95       	com	r21
 ce8:	40 95       	com	r20
 cea:	30 95       	com	r19
 cec:	21 95       	neg	r18
 cee:	3f 4f       	sbci	r19, 0xFF	; 255
 cf0:	4f 4f       	sbci	r20, 0xFF	; 255
 cf2:	5f 4f       	sbci	r21, 0xFF	; 255

00000cf4 <__divmodsi4_exit>:
 cf4:	08 95       	ret

00000cf6 <__negsi2>:
 cf6:	90 95       	com	r25
 cf8:	80 95       	com	r24
 cfa:	70 95       	com	r23
 cfc:	61 95       	neg	r22
 cfe:	7f 4f       	sbci	r23, 0xFF	; 255
 d00:	8f 4f       	sbci	r24, 0xFF	; 255
 d02:	9f 4f       	sbci	r25, 0xFF	; 255
 d04:	08 95       	ret

00000d06 <__udivmodsi4>:
 d06:	a1 e2       	ldi	r26, 0x21	; 33
 d08:	1a 2e       	mov	r1, r26
 d0a:	aa 1b       	sub	r26, r26
 d0c:	bb 1b       	sub	r27, r27
 d0e:	fd 01       	movw	r30, r26
 d10:	0d c0       	rjmp	.+26     	; 0xd2c <__udivmodsi4_ep>

00000d12 <__udivmodsi4_loop>:
 d12:	aa 1f       	adc	r26, r26
 d14:	bb 1f       	adc	r27, r27
 d16:	ee 1f       	adc	r30, r30
 d18:	ff 1f       	adc	r31, r31
 d1a:	a2 17       	cp	r26, r18
 d1c:	b3 07       	cpc	r27, r19
 d1e:	e4 07       	cpc	r30, r20
 d20:	f5 07       	cpc	r31, r21
 d22:	20 f0       	brcs	.+8      	; 0xd2c <__udivmodsi4_ep>
 d24:	a2 1b       	sub	r26, r18
 d26:	b3 0b       	sbc	r27, r19
 d28:	e4 0b       	sbc	r30, r20
 d2a:	f5 0b       	sbc	r31, r21

00000d2c <__udivmodsi4_ep>:
 d2c:	66 1f       	adc	r22, r22
 d2e:	77 1f       	adc	r23, r23
 d30:	88 1f       	adc	r24, r24
 d32:	99 1f       	adc	r25, r25
 d34:	1a 94       	dec	r1
 d36:	69 f7       	brne	.-38     	; 0xd12 <__udivmodsi4_loop>
 d38:	60 95       	com	r22
 d3a:	70 95       	com	r23
 d3c:	80 95       	com	r24
 d3e:	90 95       	com	r25
 d40:	9b 01       	movw	r18, r22
 d42:	ac 01       	movw	r20, r24
 d44:	bd 01       	movw	r22, r26
 d46:	cf 01       	movw	r24, r30
 d48:	08 95       	ret

00000d4a <_exit>:
 d4a:	f8 94       	cli

00000d4c <__stop_program>:
 d4c:	ff cf       	rjmp	.-2      	; 0xd4c <__stop_program>
