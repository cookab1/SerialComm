
Problem3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000078  00800200  00000d62  00000df6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000d62  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000001a6  00800278  00800278  00000e6e  2**0
                  ALLOC
  3 .comment      00000060  00000000  00000000  00000e6e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000ed0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001e0  00000000  00000000  00000f10  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000023fb  00000000  00000000  000010f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000011e1  00000000  00000000  000034eb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001229  00000000  00000000  000046cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000750  00000000  00000000  000058f8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000a95  00000000  00000000  00006048  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001c13  00000000  00000000  00006add  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001a8  00000000  00000000  000086f0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	44 c3       	rjmp	.+1672   	; 0x6ee <__vector_25>
  66:	00 00       	nop
  68:	b9 c1       	rjmp	.+882    	; 0x3dc <__vector_26>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	59 c3       	rjmp	.+1714   	; 0x744 <__vector_36>
  92:	00 00       	nop
  94:	ef c1       	rjmp	.+990    	; 0x474 <__vector_37>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	66 c3       	rjmp	.+1740   	; 0x79a <__vector_51>
  ce:	00 00       	nop
  d0:	1d c2       	rjmp	.+1082   	; 0x50c <__vector_52>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	8b c3       	rjmp	.+1814   	; 0x7f0 <__vector_54>
  da:	00 00       	nop
  dc:	63 c2       	rjmp	.+1222   	; 0x5a4 <__vector_55>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e2 e6       	ldi	r30, 0x62	; 98
  fc:	fd e0       	ldi	r31, 0x0D	; 13
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a8 37       	cpi	r26, 0x78	; 120
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	24 e0       	ldi	r18, 0x04	; 4
 110:	a8 e7       	ldi	r26, 0x78	; 120
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	ae 31       	cpi	r26, 0x1E	; 30
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	5d d0       	rcall	.+186    	; 0x1da <main>
 120:	1e c6       	rjmp	.+3132   	; 0xd5e <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <delay_usec>:
	...
delay_usec:
		nop
		nop
		nop
		nop
		nop
 12c:	00 00       	nop

		dec		r24		// 1 cycle
 12e:	8a 95       	dec	r24
		brlt	L3		//if false 1 cycle else 2
 130:	8c f0       	brlt	.+34     	; 0x154 <L3>
		brge	L4		
 132:	44 f4       	brge	.+16     	; 0x144 <L4>

00000134 <L1>:
	...

00000144 <L4>:
		nop
		nop
		nop
		nop
		nop
L4:		dec		r24		
 144:	8a 95       	dec	r24
	...
		nop			
		nop			
		nop
		nop
		nop
 14e:	00 00       	nop
		brge	L1	
 150:	8c f7       	brge	.-30     	; 0x134 <L1>

00000152 <L2>:
L2:  	ret				// 5 cycles
 152:	08 95       	ret

00000154 <L3>:
L3:		adiw	r24, 33 // 1 cycle
 154:	81 96       	adiw	r24, 0x21	; 33
		lsl		r24
 156:	88 0f       	add	r24, r24
		lsl		r24
 158:	88 0f       	add	r24, r24
		lsl		r24
 15a:	88 0f       	add	r24, r24
		mul		r24, r24 // 2 cycles
 15c:	88 9f       	mul	r24, r24
		dec		r24
 15e:	8a 95       	dec	r24
 160:	4c f7       	brge	.-46     	; 0x134 <L1>

00000162 <change_case>:
		change_case(&c);
		sw_serial_putc('u');
		test_sw_serial_getc();   // library test function
	}
}
void change_case(char *c) {
 162:	fc 01       	movw	r30, r24
	if (*c >= 0x41 && *c <= 0x5A) {
 164:	90 81       	ld	r25, Z
 166:	8f eb       	ldi	r24, 0xBF	; 191
 168:	89 0f       	add	r24, r25
 16a:	8a 31       	cpi	r24, 0x1A	; 26
 16c:	18 f4       	brcc	.+6      	; 0x174 <change_case+0x12>
		*c += 0x20;
 16e:	90 5e       	subi	r25, 0xE0	; 224
 170:	90 83       	st	Z, r25
 172:	08 95       	ret
	}
	else {
		*c -= 0x20;
 174:	90 52       	subi	r25, 0x20	; 32
 176:	90 83       	st	Z, r25
 178:	08 95       	ret

0000017a <sw_serial_getc>:
	}
}
char sw_serial_getc(void) {
 17a:	ff 92       	push	r15
 17c:	0f 93       	push	r16
 17e:	1f 93       	push	r17
 180:	cf 93       	push	r28
 182:	df 93       	push	r29
 184:	01 e0       	ldi	r16, 0x01	; 1
 186:	10 e0       	ldi	r17, 0x00	; 0
 188:	c0 e0       	ldi	r28, 0x00	; 0
 18a:	d0 e0       	ldi	r29, 0x00	; 0
	char c = ' ';
 18c:	68 94       	set
 18e:	ff 24       	eor	r15, r15
 190:	f5 f8       	bld	r15, 5
 192:	03 c0       	rjmp	.+6      	; 0x19a <sw_serial_getc+0x20>
 194:	21 96       	adiw	r28, 0x01	; 1
 196:	0f 5f       	subi	r16, 0xFF	; 255
 198:	1f 4f       	sbci	r17, 0xFF	; 255
	int i;
	for(i = 0; i < 8; i++) {
		if (i == 0)
 19a:	20 97       	sbiw	r28, 0x00	; 0
 19c:	29 f4       	brne	.+10     	; 0x1a8 <sw_serial_getc+0x2e>
		c = PINB;
 19e:	f3 b0       	in	r15, 0x03	; 3
		else
		c |= (PINB << i);
		delay_usec(bitTime);
 1a0:	80 e0       	ldi	r24, 0x00	; 0
 1a2:	90 e0       	ldi	r25, 0x00	; 0
 1a4:	bf df       	rcall	.-130    	; 0x124 <delay_usec>
 1a6:	f6 cf       	rjmp	.-20     	; 0x194 <sw_serial_getc+0x1a>
	int i;
	for(i = 0; i < 8; i++) {
		if (i == 0)
		c = PINB;
		else
		c |= (PINB << i);
 1a8:	83 b1       	in	r24, 0x03	; 3
 1aa:	90 e0       	ldi	r25, 0x00	; 0
 1ac:	0c 2e       	mov	r0, r28
 1ae:	02 c0       	rjmp	.+4      	; 0x1b4 <sw_serial_getc+0x3a>
 1b0:	88 0f       	add	r24, r24
 1b2:	99 1f       	adc	r25, r25
 1b4:	0a 94       	dec	r0
 1b6:	e2 f7       	brpl	.-8      	; 0x1b0 <sw_serial_getc+0x36>
 1b8:	f8 2a       	or	r15, r24
		delay_usec(bitTime);
 1ba:	80 e0       	ldi	r24, 0x00	; 0
 1bc:	90 e0       	ldi	r25, 0x00	; 0
 1be:	b2 df       	rcall	.-156    	; 0x124 <delay_usec>
	}
}
char sw_serial_getc(void) {
	char c = ' ';
	int i;
	for(i = 0; i < 8; i++) {
 1c0:	08 30       	cpi	r16, 0x08	; 8
 1c2:	11 05       	cpc	r17, r1
 1c4:	3c f3       	brlt	.-50     	; 0x194 <sw_serial_getc+0x1a>
		c = PINB;
		else
		c |= (PINB << i);
		delay_usec(bitTime);
	}
	BITBANG(0);
 1c6:	80 e0       	ldi	r24, 0x00	; 0
 1c8:	90 e0       	ldi	r25, 0x00	; 0
 1ca:	2a d0       	rcall	.+84     	; 0x220 <BITBANG>
	return c;
 1cc:	8f 2d       	mov	r24, r15
 1ce:	df 91       	pop	r29
 1d0:	cf 91       	pop	r28
 1d2:	1f 91       	pop	r17
 1d4:	0f 91       	pop	r16
 1d6:	ff 90       	pop	r15
 1d8:	08 95       	ret

000001da <main>:
//What does it do in the middle

void delay_usec(unsigned int);
void change_case(char *c);

int main(void) {
 1da:	cf 93       	push	r28
 1dc:	df 93       	push	r29
 1de:	1f 92       	push	r1
 1e0:	cd b7       	in	r28, 0x3d	; 61
 1e2:	de b7       	in	r29, 0x3e	; 62
	//DDRB |= (1 << PB6);
	DDRB = 0;
 1e4:	14 b8       	out	0x04, r1	; 4
	long baudrate = 9600L;  // initially--can change after this works
	int tx_pin = 12;
	int rx_pin = 11;
	int framing = SERIAL_8N1;
	
	init_sw_serial(rx_pin, tx_pin, baudrate, framing);  // this is your function
 1e6:	06 e0       	ldi	r16, 0x06	; 6
 1e8:	10 e0       	ldi	r17, 0x00	; 0
 1ea:	20 e8       	ldi	r18, 0x80	; 128
 1ec:	35 e2       	ldi	r19, 0x25	; 37
 1ee:	40 e0       	ldi	r20, 0x00	; 0
 1f0:	50 e0       	ldi	r21, 0x00	; 0
 1f2:	6c e0       	ldi	r22, 0x0C	; 12
 1f4:	70 e0       	ldi	r23, 0x00	; 0
 1f6:	8b e0       	ldi	r24, 0x0B	; 11
 1f8:	90 e0       	ldi	r25, 0x00	; 0
 1fa:	65 d0       	rcall	.+202    	; 0x2c6 <init_sw_serial>
	init_sw_serial_getc_test(baudrate, framing);   // library function: note we need the baudrate and framing here
 1fc:	46 e0       	ldi	r20, 0x06	; 6
 1fe:	50 e0       	ldi	r21, 0x00	; 0
 200:	60 e8       	ldi	r22, 0x80	; 128
 202:	75 e2       	ldi	r23, 0x25	; 37
 204:	80 e0       	ldi	r24, 0x00	; 0
 206:	90 e0       	ldi	r25, 0x00	; 0

	debug_init();
 208:	30 d5       	rcall	.+2656   	; 0xc6a <init_sw_serial_getc_test>
	sw_serial_getc();  // throw away first char
 20a:	67 d5       	rcall	.+2766   	; 0xcda <debug_init>
 20c:	b6 df       	rcall	.-148    	; 0x17a <sw_serial_getc>
	while(1) {
		char c = sw_serial_getc();
 20e:	b5 df       	rcall	.-150    	; 0x17a <sw_serial_getc>
 210:	89 83       	std	Y+1, r24	; 0x01
		// convert any alpha char c to opposite case
		// you'll need a little code here to do this...
		change_case(&c);
 212:	ce 01       	movw	r24, r28
 214:	01 96       	adiw	r24, 0x01	; 1
 216:	a5 df       	rcall	.-182    	; 0x162 <change_case>
		sw_serial_putc('u');
 218:	85 e7       	ldi	r24, 0x75	; 117
 21a:	24 d0       	rcall	.+72     	; 0x264 <sw_serial_putc>
 21c:	3b d5       	rcall	.+2678   	; 0xc94 <test_sw_serial_getc>
		test_sw_serial_getc();   // library test function
 21e:	f7 cf       	rjmp	.-18     	; 0x20e <main+0x34>

00000220 <BITBANG>:
 220:	89 2b       	or	r24, r25
 222:	69 f0       	breq	.+26     	; 0x23e <BITBANG+0x1e>
}

void BITBANG(int b) {
	if (b) {
		// ON
		PORTB |= 1 << txPin;
 224:	25 b1       	in	r18, 0x05	; 5
 226:	81 e0       	ldi	r24, 0x01	; 1
 228:	90 e0       	ldi	r25, 0x00	; 0
 22a:	00 90 78 02 	lds	r0, 0x0278	; 0x800278 <__data_end>
 22e:	02 c0       	rjmp	.+4      	; 0x234 <BITBANG+0x14>
 230:	88 0f       	add	r24, r24
 232:	99 1f       	adc	r25, r25
 234:	0a 94       	dec	r0
 236:	e2 f7       	brpl	.-8      	; 0x230 <BITBANG+0x10>
 238:	82 2b       	or	r24, r18
 23a:	85 b9       	out	0x05, r24	; 5
 23c:	0d c0       	rjmp	.+26     	; 0x258 <BITBANG+0x38>
	}
	else {
		// OFF
		PORTB &= ~(1 << txPin);
 23e:	25 b1       	in	r18, 0x05	; 5
 240:	81 e0       	ldi	r24, 0x01	; 1
 242:	90 e0       	ldi	r25, 0x00	; 0
 244:	00 90 78 02 	lds	r0, 0x0278	; 0x800278 <__data_end>
 248:	02 c0       	rjmp	.+4      	; 0x24e <BITBANG+0x2e>
 24a:	88 0f       	add	r24, r24
 24c:	99 1f       	adc	r25, r25
 24e:	0a 94       	dec	r0
 250:	e2 f7       	brpl	.-8      	; 0x24a <BITBANG+0x2a>
 252:	80 95       	com	r24
 254:	82 23       	and	r24, r18
 256:	85 b9       	out	0x05, r24	; 5
	}
	delay_usec(bitTime);
 258:	80 91 7a 02 	lds	r24, 0x027A	; 0x80027a <bitTime>
 25c:	90 91 7b 02 	lds	r25, 0x027B	; 0x80027b <bitTime+0x1>
 260:	61 cf       	rjmp	.-318    	; 0x124 <delay_usec>
 262:	08 95       	ret

00000264 <sw_serial_putc>:
	frameParam = framing;
}



void sw_serial_putc(char c){
 264:	1f 93       	push	r17
 266:	cf 93       	push	r28
 268:	df 93       	push	r29
 26a:	18 2f       	mov	r17, r24
	BITBANG(0);
 26c:	80 e0       	ldi	r24, 0x00	; 0
 26e:	90 e0       	ldi	r25, 0x00	; 0
 270:	d7 df       	rcall	.-82     	; 0x220 <BITBANG>
 272:	c8 e0       	ldi	r28, 0x08	; 8
 274:	d0 e0       	ldi	r29, 0x00	; 0
	for(int i = 0; i < 8; i++) {
		BITBANG(c & 1);
 276:	81 2f       	mov	r24, r17
 278:	81 70       	andi	r24, 0x01	; 1
 27a:	90 e0       	ldi	r25, 0x00	; 0
 27c:	d1 df       	rcall	.-94     	; 0x220 <BITBANG>
		c >>= 1;
 27e:	16 95       	lsr	r17
 280:	21 97       	sbiw	r28, 0x01	; 1



void sw_serial_putc(char c){
	BITBANG(0);
	for(int i = 0; i < 8; i++) {
 282:	c9 f7       	brne	.-14     	; 0x276 <sw_serial_putc+0x12>
		BITBANG(c & 1);
		c >>= 1;
	}
	BITBANG(1);
 284:	81 e0       	ldi	r24, 0x01	; 1
 286:	90 e0       	ldi	r25, 0x00	; 0
 288:	cb df       	rcall	.-106    	; 0x220 <BITBANG>
	
}
 28a:	df 91       	pop	r29
 28c:	cf 91       	pop	r28
 28e:	1f 91       	pop	r17
 290:	08 95       	ret

00000292 <find>:
	delay_usec(bitTime);
}

int find(int tPin) {
	for(int i = 0; i < 8; i++) {
		if(tPin == pin[i])
 292:	85 33       	cpi	r24, 0x35	; 53
 294:	91 05       	cpc	r25, r1
 296:	89 f0       	breq	.+34     	; 0x2ba <find+0x28>
 298:	e2 e3       	ldi	r30, 0x32	; 50
 29a:	f2 e0       	ldi	r31, 0x02	; 2
	}
	delay_usec(bitTime);
}

int find(int tPin) {
	for(int i = 0; i < 8; i++) {
 29c:	21 e0       	ldi	r18, 0x01	; 1
 29e:	30 e0       	ldi	r19, 0x00	; 0
		if(tPin == pin[i])
 2a0:	41 91       	ld	r20, Z+
 2a2:	51 91       	ld	r21, Z+
 2a4:	48 17       	cp	r20, r24
 2a6:	59 07       	cpc	r21, r25
 2a8:	59 f0       	breq	.+22     	; 0x2c0 <find+0x2e>
	}
	delay_usec(bitTime);
}

int find(int tPin) {
	for(int i = 0; i < 8; i++) {
 2aa:	2f 5f       	subi	r18, 0xFF	; 255
 2ac:	3f 4f       	sbci	r19, 0xFF	; 255
 2ae:	28 30       	cpi	r18, 0x08	; 8
 2b0:	31 05       	cpc	r19, r1
 2b2:	b1 f7       	brne	.-20     	; 0x2a0 <find+0xe>
		if(tPin == pin[i])
		return i;
	}
	return -1;
 2b4:	8f ef       	ldi	r24, 0xFF	; 255
 2b6:	9f ef       	ldi	r25, 0xFF	; 255
 2b8:	08 95       	ret
	}
	delay_usec(bitTime);
}

int find(int tPin) {
	for(int i = 0; i < 8; i++) {
 2ba:	80 e0       	ldi	r24, 0x00	; 0
 2bc:	90 e0       	ldi	r25, 0x00	; 0
 2be:	08 95       	ret
 2c0:	82 2f       	mov	r24, r18
 2c2:	93 2f       	mov	r25, r19
		if(tPin == pin[i])
		return i;
	}
	return -1;
}
 2c4:	08 95       	ret

000002c6 <init_sw_serial>:

void delay_usec(unsigned int);

static int pin[] = {53, 52, 51, 50, 10, 11, 12, 13};

void init_sw_serial(int rx_pin, int tx_pin, long baudrate, int framing) {
 2c6:	cf 92       	push	r12
 2c8:	df 92       	push	r13
 2ca:	ef 92       	push	r14
 2cc:	ff 92       	push	r15
 2ce:	0f 93       	push	r16
 2d0:	1f 93       	push	r17
 2d2:	cb 01       	movw	r24, r22
 2d4:	69 01       	movw	r12, r18
 2d6:	7a 01       	movw	r14, r20
	rxPin = find(rx_pin);
	txPin = find(tx_pin);
 2d8:	dc df       	rcall	.-72     	; 0x292 <find>
 2da:	90 93 79 02 	sts	0x0279, r25	; 0x800279 <__data_end+0x1>
 2de:	80 93 78 02 	sts	0x0278, r24	; 0x800278 <__data_end>
	bitTime = (1 / baudrate) * 1000000;
 2e2:	61 e0       	ldi	r22, 0x01	; 1
 2e4:	70 e0       	ldi	r23, 0x00	; 0
 2e6:	80 e0       	ldi	r24, 0x00	; 0
 2e8:	90 e0       	ldi	r25, 0x00	; 0
 2ea:	a7 01       	movw	r20, r14
 2ec:	96 01       	movw	r18, r12
 2ee:	f9 d4       	rcall	.+2546   	; 0xce2 <__divmodsi4>
 2f0:	60 e4       	ldi	r22, 0x40	; 64
 2f2:	72 e4       	ldi	r23, 0x42	; 66
 2f4:	26 9f       	mul	r18, r22
 2f6:	c0 01       	movw	r24, r0
 2f8:	27 9f       	mul	r18, r23
 2fa:	90 0d       	add	r25, r0
 2fc:	36 9f       	mul	r19, r22
 2fe:	90 0d       	add	r25, r0
 300:	11 24       	eor	r1, r1
 302:	90 93 7b 02 	sts	0x027B, r25	; 0x80027b <bitTime+0x1>
 306:	80 93 7a 02 	sts	0x027A, r24	; 0x80027a <bitTime>
	frameParam = framing;
 30a:	10 93 1d 04 	sts	0x041D, r17	; 0x80041d <frameParam+0x1>
 30e:	00 93 1c 04 	sts	0x041C, r16	; 0x80041c <frameParam>
}
 312:	1f 91       	pop	r17
 314:	0f 91       	pop	r16
 316:	ff 90       	pop	r15
 318:	ef 90       	pop	r14
 31a:	df 90       	pop	r13
 31c:	cf 90       	pop	r12
 31e:	08 95       	ret

00000320 <Q_getc>:
 320:	cf 93       	push	r28
 322:	df 93       	push	r29
 324:	e8 2f       	mov	r30, r24
 326:	f0 e0       	ldi	r31, 0x00	; 0
 328:	df 01       	movw	r26, r30
 32a:	aa 0f       	add	r26, r26
 32c:	bb 1f       	adc	r27, r27
 32e:	aa 0f       	add	r26, r26
 330:	bb 1f       	adc	r27, r27
 332:	aa 0f       	add	r26, r26
 334:	bb 1f       	adc	r27, r27
 336:	a4 58       	subi	r26, 0x84	; 132
 338:	bd 4f       	sbci	r27, 0xFD	; 253
 33a:	13 96       	adiw	r26, 0x03	; 3
 33c:	8c 91       	ld	r24, X
 33e:	81 fd       	sbrc	r24, 1
 340:	49 c0       	rjmp	.+146    	; 0x3d4 <Q_getc+0xb4>
 342:	9f b7       	in	r25, 0x3f	; 63
 344:	f8 94       	cli
 346:	df 01       	movw	r26, r30
 348:	aa 0f       	add	r26, r26
 34a:	bb 1f       	adc	r27, r27
 34c:	aa 0f       	add	r26, r26
 34e:	bb 1f       	adc	r27, r27
 350:	aa 0f       	add	r26, r26
 352:	bb 1f       	adc	r27, r27
 354:	a4 58       	subi	r26, 0x84	; 132
 356:	bd 4f       	sbci	r27, 0xFD	; 253
 358:	11 96       	adiw	r26, 0x01	; 1
 35a:	8c 91       	ld	r24, X
 35c:	11 97       	sbiw	r26, 0x01	; 1
 35e:	16 96       	adiw	r26, 0x06	; 6
 360:	cd 91       	ld	r28, X+
 362:	dc 91       	ld	r29, X
 364:	17 97       	sbiw	r26, 0x07	; 7
 366:	c8 0f       	add	r28, r24
 368:	d1 1d       	adc	r29, r1
 36a:	28 81       	ld	r18, Y
 36c:	eb 01       	movw	r28, r22
 36e:	28 83       	st	Y, r18
 370:	8f 5f       	subi	r24, 0xFF	; 255
 372:	12 96       	adiw	r26, 0x02	; 2
 374:	2c 91       	ld	r18, X
 376:	12 97       	sbiw	r26, 0x02	; 2
 378:	82 23       	and	r24, r18
 37a:	11 96       	adiw	r26, 0x01	; 1
 37c:	8c 93       	st	X, r24
 37e:	11 97       	sbiw	r26, 0x01	; 1
 380:	14 96       	adiw	r26, 0x04	; 4
 382:	2d 91       	ld	r18, X+
 384:	3c 91       	ld	r19, X
 386:	15 97       	sbiw	r26, 0x05	; 5
 388:	21 50       	subi	r18, 0x01	; 1
 38a:	31 09       	sbc	r19, r1
 38c:	15 96       	adiw	r26, 0x05	; 5
 38e:	3c 93       	st	X, r19
 390:	2e 93       	st	-X, r18
 392:	14 97       	sbiw	r26, 0x04	; 4
 394:	2c 91       	ld	r18, X
 396:	82 13       	cpse	r24, r18
 398:	0f c0       	rjmp	.+30     	; 0x3b8 <Q_getc+0x98>
 39a:	df 01       	movw	r26, r30
 39c:	aa 0f       	add	r26, r26
 39e:	bb 1f       	adc	r27, r27
 3a0:	aa 0f       	add	r26, r26
 3a2:	bb 1f       	adc	r27, r27
 3a4:	aa 0f       	add	r26, r26
 3a6:	bb 1f       	adc	r27, r27
 3a8:	a4 58       	subi	r26, 0x84	; 132
 3aa:	bd 4f       	sbci	r27, 0xFD	; 253
 3ac:	13 96       	adiw	r26, 0x03	; 3
 3ae:	8c 91       	ld	r24, X
 3b0:	13 97       	sbiw	r26, 0x03	; 3
 3b2:	82 60       	ori	r24, 0x02	; 2
 3b4:	13 96       	adiw	r26, 0x03	; 3
 3b6:	8c 93       	st	X, r24
 3b8:	ee 0f       	add	r30, r30
 3ba:	ff 1f       	adc	r31, r31
 3bc:	ee 0f       	add	r30, r30
 3be:	ff 1f       	adc	r31, r31
 3c0:	ee 0f       	add	r30, r30
 3c2:	ff 1f       	adc	r31, r31
 3c4:	e4 58       	subi	r30, 0x84	; 132
 3c6:	fd 4f       	sbci	r31, 0xFD	; 253
 3c8:	83 81       	ldd	r24, Z+3	; 0x03
 3ca:	8e 7f       	andi	r24, 0xFE	; 254
 3cc:	83 83       	std	Z+3, r24	; 0x03
 3ce:	9f bf       	out	0x3f, r25	; 63
 3d0:	81 e0       	ldi	r24, 0x01	; 1
 3d2:	01 c0       	rjmp	.+2      	; 0x3d6 <Q_getc+0xb6>
 3d4:	80 e0       	ldi	r24, 0x00	; 0
 3d6:	df 91       	pop	r29
 3d8:	cf 91       	pop	r28
 3da:	08 95       	ret

000003dc <__vector_26>:
 3dc:	1f 92       	push	r1
 3de:	0f 92       	push	r0
 3e0:	0f b6       	in	r0, 0x3f	; 63
 3e2:	0f 92       	push	r0
 3e4:	11 24       	eor	r1, r1
 3e6:	0b b6       	in	r0, 0x3b	; 59
 3e8:	0f 92       	push	r0
 3ea:	2f 93       	push	r18
 3ec:	3f 93       	push	r19
 3ee:	4f 93       	push	r20
 3f0:	5f 93       	push	r21
 3f2:	6f 93       	push	r22
 3f4:	7f 93       	push	r23
 3f6:	8f 93       	push	r24
 3f8:	9f 93       	push	r25
 3fa:	af 93       	push	r26
 3fc:	bf 93       	push	r27
 3fe:	ef 93       	push	r30
 400:	ff 93       	push	r31
 402:	cf 93       	push	r28
 404:	df 93       	push	r29
 406:	1f 92       	push	r1
 408:	cd b7       	in	r28, 0x3d	; 61
 40a:	de b7       	in	r29, 0x3e	; 62
 40c:	80 91 01 02 	lds	r24, 0x0201	; 0x800201 <__data_start+0x1>
 410:	e8 2f       	mov	r30, r24
 412:	f0 e0       	ldi	r31, 0x00	; 0
 414:	ee 0f       	add	r30, r30
 416:	ff 1f       	adc	r31, r31
 418:	ee 0f       	add	r30, r30
 41a:	ff 1f       	adc	r31, r31
 41c:	ee 0f       	add	r30, r30
 41e:	ff 1f       	adc	r31, r31
 420:	e4 58       	subi	r30, 0x84	; 132
 422:	fd 4f       	sbci	r31, 0xFD	; 253
 424:	93 81       	ldd	r25, Z+3	; 0x03
 426:	91 ff       	sbrs	r25, 1
 428:	08 c0       	rjmp	.+16     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 42a:	e0 91 28 02 	lds	r30, 0x0228	; 0x800228 <serialregs>
 42e:	f0 91 29 02 	lds	r31, 0x0229	; 0x800229 <serialregs+0x1>
 432:	81 81       	ldd	r24, Z+1	; 0x01
 434:	8f 7d       	andi	r24, 0xDF	; 223
 436:	81 83       	std	Z+1, r24	; 0x01
 438:	07 c0       	rjmp	.+14     	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
 43a:	be 01       	movw	r22, r28
 43c:	6f 5f       	subi	r22, 0xFF	; 255
 43e:	7f 4f       	sbci	r23, 0xFF	; 255
 440:	6f df       	rcall	.-290    	; 0x320 <Q_getc>
 442:	89 81       	ldd	r24, Y+1	; 0x01
 444:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
 448:	0f 90       	pop	r0
 44a:	df 91       	pop	r29
 44c:	cf 91       	pop	r28
 44e:	ff 91       	pop	r31
 450:	ef 91       	pop	r30
 452:	bf 91       	pop	r27
 454:	af 91       	pop	r26
 456:	9f 91       	pop	r25
 458:	8f 91       	pop	r24
 45a:	7f 91       	pop	r23
 45c:	6f 91       	pop	r22
 45e:	5f 91       	pop	r21
 460:	4f 91       	pop	r20
 462:	3f 91       	pop	r19
 464:	2f 91       	pop	r18
 466:	0f 90       	pop	r0
 468:	0b be       	out	0x3b, r0	; 59
 46a:	0f 90       	pop	r0
 46c:	0f be       	out	0x3f, r0	; 63
 46e:	0f 90       	pop	r0
 470:	1f 90       	pop	r1
 472:	18 95       	reti

00000474 <__vector_37>:
 474:	1f 92       	push	r1
 476:	0f 92       	push	r0
 478:	0f b6       	in	r0, 0x3f	; 63
 47a:	0f 92       	push	r0
 47c:	11 24       	eor	r1, r1
 47e:	0b b6       	in	r0, 0x3b	; 59
 480:	0f 92       	push	r0
 482:	2f 93       	push	r18
 484:	3f 93       	push	r19
 486:	4f 93       	push	r20
 488:	5f 93       	push	r21
 48a:	6f 93       	push	r22
 48c:	7f 93       	push	r23
 48e:	8f 93       	push	r24
 490:	9f 93       	push	r25
 492:	af 93       	push	r26
 494:	bf 93       	push	r27
 496:	ef 93       	push	r30
 498:	ff 93       	push	r31
 49a:	cf 93       	push	r28
 49c:	df 93       	push	r29
 49e:	1f 92       	push	r1
 4a0:	cd b7       	in	r28, 0x3d	; 61
 4a2:	de b7       	in	r29, 0x3e	; 62
 4a4:	80 91 0b 02 	lds	r24, 0x020B	; 0x80020b <__data_start+0xb>
 4a8:	e8 2f       	mov	r30, r24
 4aa:	f0 e0       	ldi	r31, 0x00	; 0
 4ac:	ee 0f       	add	r30, r30
 4ae:	ff 1f       	adc	r31, r31
 4b0:	ee 0f       	add	r30, r30
 4b2:	ff 1f       	adc	r31, r31
 4b4:	ee 0f       	add	r30, r30
 4b6:	ff 1f       	adc	r31, r31
 4b8:	e4 58       	subi	r30, 0x84	; 132
 4ba:	fd 4f       	sbci	r31, 0xFD	; 253
 4bc:	93 81       	ldd	r25, Z+3	; 0x03
 4be:	91 ff       	sbrs	r25, 1
 4c0:	08 c0       	rjmp	.+16     	; 0x4d2 <__vector_37+0x5e>
 4c2:	e0 91 2a 02 	lds	r30, 0x022A	; 0x80022a <serialregs+0x2>
 4c6:	f0 91 2b 02 	lds	r31, 0x022B	; 0x80022b <serialregs+0x3>
 4ca:	81 81       	ldd	r24, Z+1	; 0x01
 4cc:	8f 7d       	andi	r24, 0xDF	; 223
 4ce:	81 83       	std	Z+1, r24	; 0x01
 4d0:	07 c0       	rjmp	.+14     	; 0x4e0 <__vector_37+0x6c>
 4d2:	be 01       	movw	r22, r28
 4d4:	6f 5f       	subi	r22, 0xFF	; 255
 4d6:	7f 4f       	sbci	r23, 0xFF	; 255
 4d8:	23 df       	rcall	.-442    	; 0x320 <Q_getc>
 4da:	89 81       	ldd	r24, Y+1	; 0x01
 4dc:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>
 4e0:	0f 90       	pop	r0
 4e2:	df 91       	pop	r29
 4e4:	cf 91       	pop	r28
 4e6:	ff 91       	pop	r31
 4e8:	ef 91       	pop	r30
 4ea:	bf 91       	pop	r27
 4ec:	af 91       	pop	r26
 4ee:	9f 91       	pop	r25
 4f0:	8f 91       	pop	r24
 4f2:	7f 91       	pop	r23
 4f4:	6f 91       	pop	r22
 4f6:	5f 91       	pop	r21
 4f8:	4f 91       	pop	r20
 4fa:	3f 91       	pop	r19
 4fc:	2f 91       	pop	r18
 4fe:	0f 90       	pop	r0
 500:	0b be       	out	0x3b, r0	; 59
 502:	0f 90       	pop	r0
 504:	0f be       	out	0x3f, r0	; 63
 506:	0f 90       	pop	r0
 508:	1f 90       	pop	r1
 50a:	18 95       	reti

0000050c <__vector_52>:
 50c:	1f 92       	push	r1
 50e:	0f 92       	push	r0
 510:	0f b6       	in	r0, 0x3f	; 63
 512:	0f 92       	push	r0
 514:	11 24       	eor	r1, r1
 516:	0b b6       	in	r0, 0x3b	; 59
 518:	0f 92       	push	r0
 51a:	2f 93       	push	r18
 51c:	3f 93       	push	r19
 51e:	4f 93       	push	r20
 520:	5f 93       	push	r21
 522:	6f 93       	push	r22
 524:	7f 93       	push	r23
 526:	8f 93       	push	r24
 528:	9f 93       	push	r25
 52a:	af 93       	push	r26
 52c:	bf 93       	push	r27
 52e:	ef 93       	push	r30
 530:	ff 93       	push	r31
 532:	cf 93       	push	r28
 534:	df 93       	push	r29
 536:	1f 92       	push	r1
 538:	cd b7       	in	r28, 0x3d	; 61
 53a:	de b7       	in	r29, 0x3e	; 62
 53c:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <__data_start+0x15>
 540:	e8 2f       	mov	r30, r24
 542:	f0 e0       	ldi	r31, 0x00	; 0
 544:	ee 0f       	add	r30, r30
 546:	ff 1f       	adc	r31, r31
 548:	ee 0f       	add	r30, r30
 54a:	ff 1f       	adc	r31, r31
 54c:	ee 0f       	add	r30, r30
 54e:	ff 1f       	adc	r31, r31
 550:	e4 58       	subi	r30, 0x84	; 132
 552:	fd 4f       	sbci	r31, 0xFD	; 253
 554:	93 81       	ldd	r25, Z+3	; 0x03
 556:	91 ff       	sbrs	r25, 1
 558:	08 c0       	rjmp	.+16     	; 0x56a <__vector_52+0x5e>
 55a:	e0 91 2c 02 	lds	r30, 0x022C	; 0x80022c <serialregs+0x4>
 55e:	f0 91 2d 02 	lds	r31, 0x022D	; 0x80022d <serialregs+0x5>
 562:	81 81       	ldd	r24, Z+1	; 0x01
 564:	8f 7d       	andi	r24, 0xDF	; 223
 566:	81 83       	std	Z+1, r24	; 0x01
 568:	07 c0       	rjmp	.+14     	; 0x578 <__vector_52+0x6c>
 56a:	be 01       	movw	r22, r28
 56c:	6f 5f       	subi	r22, 0xFF	; 255
 56e:	7f 4f       	sbci	r23, 0xFF	; 255
 570:	d7 de       	rcall	.-594    	; 0x320 <Q_getc>
 572:	89 81       	ldd	r24, Y+1	; 0x01
 574:	80 93 d6 00 	sts	0x00D6, r24	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7000d6>
 578:	0f 90       	pop	r0
 57a:	df 91       	pop	r29
 57c:	cf 91       	pop	r28
 57e:	ff 91       	pop	r31
 580:	ef 91       	pop	r30
 582:	bf 91       	pop	r27
 584:	af 91       	pop	r26
 586:	9f 91       	pop	r25
 588:	8f 91       	pop	r24
 58a:	7f 91       	pop	r23
 58c:	6f 91       	pop	r22
 58e:	5f 91       	pop	r21
 590:	4f 91       	pop	r20
 592:	3f 91       	pop	r19
 594:	2f 91       	pop	r18
 596:	0f 90       	pop	r0
 598:	0b be       	out	0x3b, r0	; 59
 59a:	0f 90       	pop	r0
 59c:	0f be       	out	0x3f, r0	; 63
 59e:	0f 90       	pop	r0
 5a0:	1f 90       	pop	r1
 5a2:	18 95       	reti

000005a4 <__vector_55>:
 5a4:	1f 92       	push	r1
 5a6:	0f 92       	push	r0
 5a8:	0f b6       	in	r0, 0x3f	; 63
 5aa:	0f 92       	push	r0
 5ac:	11 24       	eor	r1, r1
 5ae:	0b b6       	in	r0, 0x3b	; 59
 5b0:	0f 92       	push	r0
 5b2:	2f 93       	push	r18
 5b4:	3f 93       	push	r19
 5b6:	4f 93       	push	r20
 5b8:	5f 93       	push	r21
 5ba:	6f 93       	push	r22
 5bc:	7f 93       	push	r23
 5be:	8f 93       	push	r24
 5c0:	9f 93       	push	r25
 5c2:	af 93       	push	r26
 5c4:	bf 93       	push	r27
 5c6:	ef 93       	push	r30
 5c8:	ff 93       	push	r31
 5ca:	cf 93       	push	r28
 5cc:	df 93       	push	r29
 5ce:	1f 92       	push	r1
 5d0:	cd b7       	in	r28, 0x3d	; 61
 5d2:	de b7       	in	r29, 0x3e	; 62
 5d4:	80 91 1f 02 	lds	r24, 0x021F	; 0x80021f <__data_start+0x1f>
 5d8:	e8 2f       	mov	r30, r24
 5da:	f0 e0       	ldi	r31, 0x00	; 0
 5dc:	ee 0f       	add	r30, r30
 5de:	ff 1f       	adc	r31, r31
 5e0:	ee 0f       	add	r30, r30
 5e2:	ff 1f       	adc	r31, r31
 5e4:	ee 0f       	add	r30, r30
 5e6:	ff 1f       	adc	r31, r31
 5e8:	e4 58       	subi	r30, 0x84	; 132
 5ea:	fd 4f       	sbci	r31, 0xFD	; 253
 5ec:	93 81       	ldd	r25, Z+3	; 0x03
 5ee:	91 ff       	sbrs	r25, 1
 5f0:	08 c0       	rjmp	.+16     	; 0x602 <__vector_55+0x5e>
 5f2:	e0 91 2e 02 	lds	r30, 0x022E	; 0x80022e <serialregs+0x6>
 5f6:	f0 91 2f 02 	lds	r31, 0x022F	; 0x80022f <serialregs+0x7>
 5fa:	81 81       	ldd	r24, Z+1	; 0x01
 5fc:	8f 7d       	andi	r24, 0xDF	; 223
 5fe:	81 83       	std	Z+1, r24	; 0x01
 600:	07 c0       	rjmp	.+14     	; 0x610 <__vector_55+0x6c>
 602:	be 01       	movw	r22, r28
 604:	6f 5f       	subi	r22, 0xFF	; 255
 606:	7f 4f       	sbci	r23, 0xFF	; 255
 608:	8b de       	rcall	.-746    	; 0x320 <Q_getc>
 60a:	89 81       	ldd	r24, Y+1	; 0x01
 60c:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <__TEXT_REGION_LENGTH__+0x700136>
 610:	0f 90       	pop	r0
 612:	df 91       	pop	r29
 614:	cf 91       	pop	r28
 616:	ff 91       	pop	r31
 618:	ef 91       	pop	r30
 61a:	bf 91       	pop	r27
 61c:	af 91       	pop	r26
 61e:	9f 91       	pop	r25
 620:	8f 91       	pop	r24
 622:	7f 91       	pop	r23
 624:	6f 91       	pop	r22
 626:	5f 91       	pop	r21
 628:	4f 91       	pop	r20
 62a:	3f 91       	pop	r19
 62c:	2f 91       	pop	r18
 62e:	0f 90       	pop	r0
 630:	0b be       	out	0x3b, r0	; 59
 632:	0f 90       	pop	r0
 634:	0f be       	out	0x3f, r0	; 63
 636:	0f 90       	pop	r0
 638:	1f 90       	pop	r1
 63a:	18 95       	reti

0000063c <Q_putc>:
 63c:	cf 93       	push	r28
 63e:	df 93       	push	r29
 640:	e8 2f       	mov	r30, r24
 642:	f0 e0       	ldi	r31, 0x00	; 0
 644:	df 01       	movw	r26, r30
 646:	aa 0f       	add	r26, r26
 648:	bb 1f       	adc	r27, r27
 64a:	aa 0f       	add	r26, r26
 64c:	bb 1f       	adc	r27, r27
 64e:	aa 0f       	add	r26, r26
 650:	bb 1f       	adc	r27, r27
 652:	a4 58       	subi	r26, 0x84	; 132
 654:	bd 4f       	sbci	r27, 0xFD	; 253
 656:	13 96       	adiw	r26, 0x03	; 3
 658:	8c 91       	ld	r24, X
 65a:	80 fd       	sbrc	r24, 0
 65c:	44 c0       	rjmp	.+136    	; 0x6e6 <Q_putc+0xaa>
 65e:	9f b7       	in	r25, 0x3f	; 63
 660:	f8 94       	cli
 662:	df 01       	movw	r26, r30
 664:	aa 0f       	add	r26, r26
 666:	bb 1f       	adc	r27, r27
 668:	aa 0f       	add	r26, r26
 66a:	bb 1f       	adc	r27, r27
 66c:	aa 0f       	add	r26, r26
 66e:	bb 1f       	adc	r27, r27
 670:	a4 58       	subi	r26, 0x84	; 132
 672:	bd 4f       	sbci	r27, 0xFD	; 253
 674:	8c 91       	ld	r24, X
 676:	16 96       	adiw	r26, 0x06	; 6
 678:	cd 91       	ld	r28, X+
 67a:	dc 91       	ld	r29, X
 67c:	17 97       	sbiw	r26, 0x07	; 7
 67e:	c8 0f       	add	r28, r24
 680:	d1 1d       	adc	r29, r1
 682:	68 83       	st	Y, r22
 684:	8f 5f       	subi	r24, 0xFF	; 255
 686:	12 96       	adiw	r26, 0x02	; 2
 688:	2c 91       	ld	r18, X
 68a:	12 97       	sbiw	r26, 0x02	; 2
 68c:	82 23       	and	r24, r18
 68e:	8c 93       	st	X, r24
 690:	14 96       	adiw	r26, 0x04	; 4
 692:	2d 91       	ld	r18, X+
 694:	3c 91       	ld	r19, X
 696:	15 97       	sbiw	r26, 0x05	; 5
 698:	2f 5f       	subi	r18, 0xFF	; 255
 69a:	3f 4f       	sbci	r19, 0xFF	; 255
 69c:	15 96       	adiw	r26, 0x05	; 5
 69e:	3c 93       	st	X, r19
 6a0:	2e 93       	st	-X, r18
 6a2:	14 97       	sbiw	r26, 0x04	; 4
 6a4:	11 96       	adiw	r26, 0x01	; 1
 6a6:	2c 91       	ld	r18, X
 6a8:	82 13       	cpse	r24, r18
 6aa:	0f c0       	rjmp	.+30     	; 0x6ca <Q_putc+0x8e>
 6ac:	df 01       	movw	r26, r30
 6ae:	aa 0f       	add	r26, r26
 6b0:	bb 1f       	adc	r27, r27
 6b2:	aa 0f       	add	r26, r26
 6b4:	bb 1f       	adc	r27, r27
 6b6:	aa 0f       	add	r26, r26
 6b8:	bb 1f       	adc	r27, r27
 6ba:	a4 58       	subi	r26, 0x84	; 132
 6bc:	bd 4f       	sbci	r27, 0xFD	; 253
 6be:	13 96       	adiw	r26, 0x03	; 3
 6c0:	8c 91       	ld	r24, X
 6c2:	13 97       	sbiw	r26, 0x03	; 3
 6c4:	81 60       	ori	r24, 0x01	; 1
 6c6:	13 96       	adiw	r26, 0x03	; 3
 6c8:	8c 93       	st	X, r24
 6ca:	ee 0f       	add	r30, r30
 6cc:	ff 1f       	adc	r31, r31
 6ce:	ee 0f       	add	r30, r30
 6d0:	ff 1f       	adc	r31, r31
 6d2:	ee 0f       	add	r30, r30
 6d4:	ff 1f       	adc	r31, r31
 6d6:	e4 58       	subi	r30, 0x84	; 132
 6d8:	fd 4f       	sbci	r31, 0xFD	; 253
 6da:	83 81       	ldd	r24, Z+3	; 0x03
 6dc:	8d 7f       	andi	r24, 0xFD	; 253
 6de:	83 83       	std	Z+3, r24	; 0x03
 6e0:	9f bf       	out	0x3f, r25	; 63
 6e2:	81 e0       	ldi	r24, 0x01	; 1
 6e4:	01 c0       	rjmp	.+2      	; 0x6e8 <Q_putc+0xac>
 6e6:	80 e0       	ldi	r24, 0x00	; 0
 6e8:	df 91       	pop	r29
 6ea:	cf 91       	pop	r28
 6ec:	08 95       	ret

000006ee <__vector_25>:
 6ee:	1f 92       	push	r1
 6f0:	0f 92       	push	r0
 6f2:	0f b6       	in	r0, 0x3f	; 63
 6f4:	0f 92       	push	r0
 6f6:	11 24       	eor	r1, r1
 6f8:	0b b6       	in	r0, 0x3b	; 59
 6fa:	0f 92       	push	r0
 6fc:	2f 93       	push	r18
 6fe:	3f 93       	push	r19
 700:	4f 93       	push	r20
 702:	5f 93       	push	r21
 704:	6f 93       	push	r22
 706:	7f 93       	push	r23
 708:	8f 93       	push	r24
 70a:	9f 93       	push	r25
 70c:	af 93       	push	r26
 70e:	bf 93       	push	r27
 710:	ef 93       	push	r30
 712:	ff 93       	push	r31
 714:	60 91 c6 00 	lds	r22, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
 718:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__data_start>
 71c:	8f df       	rcall	.-226    	; 0x63c <Q_putc>
 71e:	ff 91       	pop	r31
 720:	ef 91       	pop	r30
 722:	bf 91       	pop	r27
 724:	af 91       	pop	r26
 726:	9f 91       	pop	r25
 728:	8f 91       	pop	r24
 72a:	7f 91       	pop	r23
 72c:	6f 91       	pop	r22
 72e:	5f 91       	pop	r21
 730:	4f 91       	pop	r20
 732:	3f 91       	pop	r19
 734:	2f 91       	pop	r18
 736:	0f 90       	pop	r0
 738:	0b be       	out	0x3b, r0	; 59
 73a:	0f 90       	pop	r0
 73c:	0f be       	out	0x3f, r0	; 63
 73e:	0f 90       	pop	r0
 740:	1f 90       	pop	r1
 742:	18 95       	reti

00000744 <__vector_36>:
 744:	1f 92       	push	r1
 746:	0f 92       	push	r0
 748:	0f b6       	in	r0, 0x3f	; 63
 74a:	0f 92       	push	r0
 74c:	11 24       	eor	r1, r1
 74e:	0b b6       	in	r0, 0x3b	; 59
 750:	0f 92       	push	r0
 752:	2f 93       	push	r18
 754:	3f 93       	push	r19
 756:	4f 93       	push	r20
 758:	5f 93       	push	r21
 75a:	6f 93       	push	r22
 75c:	7f 93       	push	r23
 75e:	8f 93       	push	r24
 760:	9f 93       	push	r25
 762:	af 93       	push	r26
 764:	bf 93       	push	r27
 766:	ef 93       	push	r30
 768:	ff 93       	push	r31
 76a:	60 91 ce 00 	lds	r22, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>
 76e:	80 91 0a 02 	lds	r24, 0x020A	; 0x80020a <__data_start+0xa>
 772:	64 df       	rcall	.-312    	; 0x63c <Q_putc>
 774:	ff 91       	pop	r31
 776:	ef 91       	pop	r30
 778:	bf 91       	pop	r27
 77a:	af 91       	pop	r26
 77c:	9f 91       	pop	r25
 77e:	8f 91       	pop	r24
 780:	7f 91       	pop	r23
 782:	6f 91       	pop	r22
 784:	5f 91       	pop	r21
 786:	4f 91       	pop	r20
 788:	3f 91       	pop	r19
 78a:	2f 91       	pop	r18
 78c:	0f 90       	pop	r0
 78e:	0b be       	out	0x3b, r0	; 59
 790:	0f 90       	pop	r0
 792:	0f be       	out	0x3f, r0	; 63
 794:	0f 90       	pop	r0
 796:	1f 90       	pop	r1
 798:	18 95       	reti

0000079a <__vector_51>:
 79a:	1f 92       	push	r1
 79c:	0f 92       	push	r0
 79e:	0f b6       	in	r0, 0x3f	; 63
 7a0:	0f 92       	push	r0
 7a2:	11 24       	eor	r1, r1
 7a4:	0b b6       	in	r0, 0x3b	; 59
 7a6:	0f 92       	push	r0
 7a8:	2f 93       	push	r18
 7aa:	3f 93       	push	r19
 7ac:	4f 93       	push	r20
 7ae:	5f 93       	push	r21
 7b0:	6f 93       	push	r22
 7b2:	7f 93       	push	r23
 7b4:	8f 93       	push	r24
 7b6:	9f 93       	push	r25
 7b8:	af 93       	push	r26
 7ba:	bf 93       	push	r27
 7bc:	ef 93       	push	r30
 7be:	ff 93       	push	r31
 7c0:	60 91 d6 00 	lds	r22, 0x00D6	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7000d6>
 7c4:	80 91 14 02 	lds	r24, 0x0214	; 0x800214 <__data_start+0x14>
 7c8:	39 df       	rcall	.-398    	; 0x63c <Q_putc>
 7ca:	ff 91       	pop	r31
 7cc:	ef 91       	pop	r30
 7ce:	bf 91       	pop	r27
 7d0:	af 91       	pop	r26
 7d2:	9f 91       	pop	r25
 7d4:	8f 91       	pop	r24
 7d6:	7f 91       	pop	r23
 7d8:	6f 91       	pop	r22
 7da:	5f 91       	pop	r21
 7dc:	4f 91       	pop	r20
 7de:	3f 91       	pop	r19
 7e0:	2f 91       	pop	r18
 7e2:	0f 90       	pop	r0
 7e4:	0b be       	out	0x3b, r0	; 59
 7e6:	0f 90       	pop	r0
 7e8:	0f be       	out	0x3f, r0	; 63
 7ea:	0f 90       	pop	r0
 7ec:	1f 90       	pop	r1
 7ee:	18 95       	reti

000007f0 <__vector_54>:
 7f0:	1f 92       	push	r1
 7f2:	0f 92       	push	r0
 7f4:	0f b6       	in	r0, 0x3f	; 63
 7f6:	0f 92       	push	r0
 7f8:	11 24       	eor	r1, r1
 7fa:	0b b6       	in	r0, 0x3b	; 59
 7fc:	0f 92       	push	r0
 7fe:	2f 93       	push	r18
 800:	3f 93       	push	r19
 802:	4f 93       	push	r20
 804:	5f 93       	push	r21
 806:	6f 93       	push	r22
 808:	7f 93       	push	r23
 80a:	8f 93       	push	r24
 80c:	9f 93       	push	r25
 80e:	af 93       	push	r26
 810:	bf 93       	push	r27
 812:	ef 93       	push	r30
 814:	ff 93       	push	r31
 816:	60 91 36 01 	lds	r22, 0x0136	; 0x800136 <__TEXT_REGION_LENGTH__+0x700136>
 81a:	80 91 1e 02 	lds	r24, 0x021E	; 0x80021e <__data_start+0x1e>
 81e:	0e df       	rcall	.-484    	; 0x63c <Q_putc>
 820:	ff 91       	pop	r31
 822:	ef 91       	pop	r30
 824:	bf 91       	pop	r27
 826:	af 91       	pop	r26
 828:	9f 91       	pop	r25
 82a:	8f 91       	pop	r24
 82c:	7f 91       	pop	r23
 82e:	6f 91       	pop	r22
 830:	5f 91       	pop	r21
 832:	4f 91       	pop	r20
 834:	3f 91       	pop	r19
 836:	2f 91       	pop	r18
 838:	0f 90       	pop	r0
 83a:	0b be       	out	0x3b, r0	; 59
 83c:	0f 90       	pop	r0
 83e:	0f be       	out	0x3f, r0	; 63
 840:	0f 90       	pop	r0
 842:	1f 90       	pop	r1
 844:	18 95       	reti

00000846 <Serial0_poll_write>:
 846:	e0 ec       	ldi	r30, 0xC0	; 192
 848:	f0 e0       	ldi	r31, 0x00	; 0
 84a:	90 81       	ld	r25, Z
 84c:	95 ff       	sbrs	r25, 5
 84e:	fd cf       	rjmp	.-6      	; 0x84a <Serial0_poll_write+0x4>
 850:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
 854:	08 95       	ret

00000856 <Serial0_poll_print>:
 856:	cf 93       	push	r28
 858:	df 93       	push	r29
 85a:	ec 01       	movw	r28, r24
 85c:	88 81       	ld	r24, Y
 85e:	88 23       	and	r24, r24
 860:	29 f0       	breq	.+10     	; 0x86c <Serial0_poll_print+0x16>
 862:	21 96       	adiw	r28, 0x01	; 1
 864:	f0 df       	rcall	.-32     	; 0x846 <Serial0_poll_write>
 866:	89 91       	ld	r24, Y+
 868:	81 11       	cpse	r24, r1
 86a:	fc cf       	rjmp	.-8      	; 0x864 <Serial0_poll_print+0xe>
 86c:	df 91       	pop	r29
 86e:	cf 91       	pop	r28
 870:	08 95       	ret

00000872 <Serial0_config>:
 872:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
 876:	2f ef       	ldi	r18, 0xFF	; 255
 878:	39 ef       	ldi	r19, 0xF9	; 249
 87a:	50 e0       	ldi	r21, 0x00	; 0
 87c:	21 50       	subi	r18, 0x01	; 1
 87e:	30 40       	sbci	r19, 0x00	; 0
 880:	50 40       	sbci	r21, 0x00	; 0
 882:	e1 f7       	brne	.-8      	; 0x87c <Serial0_config+0xa>
 884:	00 c0       	rjmp	.+0      	; 0x886 <Serial0_config+0x14>
 886:	00 00       	nop
 888:	20 91 c6 00 	lds	r18, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
 88c:	60 38       	cpi	r22, 0x80	; 128
 88e:	20 e7       	ldi	r18, 0x70	; 112
 890:	72 07       	cpc	r23, r18
 892:	81 05       	cpc	r24, r1
 894:	91 05       	cpc	r25, r1
 896:	09 f4       	brne	.+2      	; 0x89a <Serial0_config+0x28>
 898:	8f c0       	rjmp	.+286    	; 0x9b8 <Serial0_config+0x146>
 89a:	24 f5       	brge	.+72     	; 0x8e4 <Serial0_config+0x72>
 89c:	60 38       	cpi	r22, 0x80	; 128
 89e:	55 e2       	ldi	r21, 0x25	; 37
 8a0:	75 07       	cpc	r23, r21
 8a2:	81 05       	cpc	r24, r1
 8a4:	91 05       	cpc	r25, r1
 8a6:	09 f4       	brne	.+2      	; 0x8aa <Serial0_config+0x38>
 8a8:	63 c0       	rjmp	.+198    	; 0x970 <Serial0_config+0xfe>
 8aa:	74 f4       	brge	.+28     	; 0x8c8 <Serial0_config+0x56>
 8ac:	60 36       	cpi	r22, 0x60	; 96
 8ae:	39 e0       	ldi	r19, 0x09	; 9
 8b0:	73 07       	cpc	r23, r19
 8b2:	81 05       	cpc	r24, r1
 8b4:	91 05       	cpc	r25, r1
 8b6:	09 f4       	brne	.+2      	; 0x8ba <Serial0_config+0x48>
 8b8:	43 c0       	rjmp	.+134    	; 0x940 <Serial0_config+0xce>
 8ba:	60 3c       	cpi	r22, 0xC0	; 192
 8bc:	72 41       	sbci	r23, 0x12	; 18
 8be:	81 05       	cpc	r24, r1
 8c0:	91 05       	cpc	r25, r1
 8c2:	09 f4       	brne	.+2      	; 0x8c6 <Serial0_config+0x54>
 8c4:	49 c0       	rjmp	.+146    	; 0x958 <Serial0_config+0xe6>
 8c6:	cb c0       	rjmp	.+406    	; 0xa5e <Serial0_config+0x1ec>
 8c8:	60 34       	cpi	r22, 0x40	; 64
 8ca:	28 e3       	ldi	r18, 0x38	; 56
 8cc:	72 07       	cpc	r23, r18
 8ce:	81 05       	cpc	r24, r1
 8d0:	91 05       	cpc	r25, r1
 8d2:	09 f4       	brne	.+2      	; 0x8d6 <Serial0_config+0x64>
 8d4:	59 c0       	rjmp	.+178    	; 0x988 <Serial0_config+0x116>
 8d6:	61 15       	cp	r22, r1
 8d8:	7b 44       	sbci	r23, 0x4B	; 75
 8da:	81 05       	cpc	r24, r1
 8dc:	91 05       	cpc	r25, r1
 8de:	09 f4       	brne	.+2      	; 0x8e2 <Serial0_config+0x70>
 8e0:	5f c0       	rjmp	.+190    	; 0x9a0 <Serial0_config+0x12e>
 8e2:	bd c0       	rjmp	.+378    	; 0xa5e <Serial0_config+0x1ec>
 8e4:	61 15       	cp	r22, r1
 8e6:	52 ec       	ldi	r21, 0xC2	; 194
 8e8:	75 07       	cpc	r23, r21
 8ea:	51 e0       	ldi	r21, 0x01	; 1
 8ec:	85 07       	cpc	r24, r21
 8ee:	91 05       	cpc	r25, r1
 8f0:	09 f4       	brne	.+2      	; 0x8f4 <Serial0_config+0x82>
 8f2:	86 c0       	rjmp	.+268    	; 0xa00 <Serial0_config+0x18e>
 8f4:	74 f4       	brge	.+28     	; 0x912 <Serial0_config+0xa0>
 8f6:	61 15       	cp	r22, r1
 8f8:	36 e9       	ldi	r19, 0x96	; 150
 8fa:	73 07       	cpc	r23, r19
 8fc:	81 05       	cpc	r24, r1
 8fe:	91 05       	cpc	r25, r1
 900:	09 f4       	brne	.+2      	; 0x904 <Serial0_config+0x92>
 902:	66 c0       	rjmp	.+204    	; 0x9d0 <Serial0_config+0x15e>
 904:	61 15       	cp	r22, r1
 906:	71 4e       	sbci	r23, 0xE1	; 225
 908:	81 05       	cpc	r24, r1
 90a:	91 05       	cpc	r25, r1
 90c:	09 f4       	brne	.+2      	; 0x910 <Serial0_config+0x9e>
 90e:	6c c0       	rjmp	.+216    	; 0x9e8 <Serial0_config+0x176>
 910:	a6 c0       	rjmp	.+332    	; 0xa5e <Serial0_config+0x1ec>
 912:	60 32       	cpi	r22, 0x20	; 32
 914:	21 ea       	ldi	r18, 0xA1	; 161
 916:	72 07       	cpc	r23, r18
 918:	27 e0       	ldi	r18, 0x07	; 7
 91a:	82 07       	cpc	r24, r18
 91c:	91 05       	cpc	r25, r1
 91e:	09 f4       	brne	.+2      	; 0x922 <Serial0_config+0xb0>
 920:	87 c0       	rjmp	.+270    	; 0xa30 <Serial0_config+0x1be>
 922:	60 34       	cpi	r22, 0x40	; 64
 924:	32 e4       	ldi	r19, 0x42	; 66
 926:	73 07       	cpc	r23, r19
 928:	3f e0       	ldi	r19, 0x0F	; 15
 92a:	83 07       	cpc	r24, r19
 92c:	91 05       	cpc	r25, r1
 92e:	09 f4       	brne	.+2      	; 0x932 <Serial0_config+0xc0>
 930:	8b c0       	rjmp	.+278    	; 0xa48 <Serial0_config+0x1d6>
 932:	60 39       	cpi	r22, 0x90	; 144
 934:	70 4d       	sbci	r23, 0xD0	; 208
 936:	83 40       	sbci	r24, 0x03	; 3
 938:	91 05       	cpc	r25, r1
 93a:	09 f0       	breq	.+2      	; 0x93e <Serial0_config+0xcc>
 93c:	90 c0       	rjmp	.+288    	; 0xa5e <Serial0_config+0x1ec>
 93e:	6c c0       	rjmp	.+216    	; 0xa18 <Serial0_config+0x1a6>
 940:	80 e4       	ldi	r24, 0x40	; 64
 942:	93 e0       	ldi	r25, 0x03	; 3
 944:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
 948:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
 94c:	e0 ec       	ldi	r30, 0xC0	; 192
 94e:	f0 e0       	ldi	r31, 0x00	; 0
 950:	80 81       	ld	r24, Z
 952:	82 60       	ori	r24, 0x02	; 2
 954:	80 83       	st	Z, r24
 956:	83 c0       	rjmp	.+262    	; 0xa5e <Serial0_config+0x1ec>
 958:	80 ea       	ldi	r24, 0xA0	; 160
 95a:	91 e0       	ldi	r25, 0x01	; 1
 95c:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
 960:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
 964:	e0 ec       	ldi	r30, 0xC0	; 192
 966:	f0 e0       	ldi	r31, 0x00	; 0
 968:	80 81       	ld	r24, Z
 96a:	82 60       	ori	r24, 0x02	; 2
 96c:	80 83       	st	Z, r24
 96e:	77 c0       	rjmp	.+238    	; 0xa5e <Serial0_config+0x1ec>
 970:	87 e6       	ldi	r24, 0x67	; 103
 972:	90 e0       	ldi	r25, 0x00	; 0
 974:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
 978:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
 97c:	e0 ec       	ldi	r30, 0xC0	; 192
 97e:	f0 e0       	ldi	r31, 0x00	; 0
 980:	80 81       	ld	r24, Z
 982:	8d 7f       	andi	r24, 0xFD	; 253
 984:	80 83       	st	Z, r24
 986:	6b c0       	rjmp	.+214    	; 0xa5e <Serial0_config+0x1ec>
 988:	8a e8       	ldi	r24, 0x8A	; 138
 98a:	90 e0       	ldi	r25, 0x00	; 0
 98c:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
 990:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
 994:	e0 ec       	ldi	r30, 0xC0	; 192
 996:	f0 e0       	ldi	r31, 0x00	; 0
 998:	80 81       	ld	r24, Z
 99a:	82 60       	ori	r24, 0x02	; 2
 99c:	80 83       	st	Z, r24
 99e:	5f c0       	rjmp	.+190    	; 0xa5e <Serial0_config+0x1ec>
 9a0:	83 e3       	ldi	r24, 0x33	; 51
 9a2:	90 e0       	ldi	r25, 0x00	; 0
 9a4:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
 9a8:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
 9ac:	e0 ec       	ldi	r30, 0xC0	; 192
 9ae:	f0 e0       	ldi	r31, 0x00	; 0
 9b0:	80 81       	ld	r24, Z
 9b2:	8d 7f       	andi	r24, 0xFD	; 253
 9b4:	80 83       	st	Z, r24
 9b6:	53 c0       	rjmp	.+166    	; 0xa5e <Serial0_config+0x1ec>
 9b8:	84 e4       	ldi	r24, 0x44	; 68
 9ba:	90 e0       	ldi	r25, 0x00	; 0
 9bc:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
 9c0:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
 9c4:	e0 ec       	ldi	r30, 0xC0	; 192
 9c6:	f0 e0       	ldi	r31, 0x00	; 0
 9c8:	80 81       	ld	r24, Z
 9ca:	82 60       	ori	r24, 0x02	; 2
 9cc:	80 83       	st	Z, r24
 9ce:	47 c0       	rjmp	.+142    	; 0xa5e <Serial0_config+0x1ec>
 9d0:	89 e1       	ldi	r24, 0x19	; 25
 9d2:	90 e0       	ldi	r25, 0x00	; 0
 9d4:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
 9d8:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
 9dc:	e0 ec       	ldi	r30, 0xC0	; 192
 9de:	f0 e0       	ldi	r31, 0x00	; 0
 9e0:	80 81       	ld	r24, Z
 9e2:	8d 7f       	andi	r24, 0xFD	; 253
 9e4:	80 83       	st	Z, r24
 9e6:	3b c0       	rjmp	.+118    	; 0xa5e <Serial0_config+0x1ec>
 9e8:	82 e2       	ldi	r24, 0x22	; 34
 9ea:	90 e0       	ldi	r25, 0x00	; 0
 9ec:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
 9f0:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
 9f4:	e0 ec       	ldi	r30, 0xC0	; 192
 9f6:	f0 e0       	ldi	r31, 0x00	; 0
 9f8:	80 81       	ld	r24, Z
 9fa:	82 60       	ori	r24, 0x02	; 2
 9fc:	80 83       	st	Z, r24
 9fe:	2f c0       	rjmp	.+94     	; 0xa5e <Serial0_config+0x1ec>
 a00:	80 e1       	ldi	r24, 0x10	; 16
 a02:	90 e0       	ldi	r25, 0x00	; 0
 a04:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
 a08:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
 a0c:	e0 ec       	ldi	r30, 0xC0	; 192
 a0e:	f0 e0       	ldi	r31, 0x00	; 0
 a10:	80 81       	ld	r24, Z
 a12:	82 60       	ori	r24, 0x02	; 2
 a14:	80 83       	st	Z, r24
 a16:	23 c0       	rjmp	.+70     	; 0xa5e <Serial0_config+0x1ec>
 a18:	87 e0       	ldi	r24, 0x07	; 7
 a1a:	90 e0       	ldi	r25, 0x00	; 0
 a1c:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
 a20:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
 a24:	e0 ec       	ldi	r30, 0xC0	; 192
 a26:	f0 e0       	ldi	r31, 0x00	; 0
 a28:	80 81       	ld	r24, Z
 a2a:	82 60       	ori	r24, 0x02	; 2
 a2c:	80 83       	st	Z, r24
 a2e:	17 c0       	rjmp	.+46     	; 0xa5e <Serial0_config+0x1ec>
 a30:	83 e0       	ldi	r24, 0x03	; 3
 a32:	90 e0       	ldi	r25, 0x00	; 0
 a34:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
 a38:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
 a3c:	e0 ec       	ldi	r30, 0xC0	; 192
 a3e:	f0 e0       	ldi	r31, 0x00	; 0
 a40:	80 81       	ld	r24, Z
 a42:	82 60       	ori	r24, 0x02	; 2
 a44:	80 83       	st	Z, r24
 a46:	0b c0       	rjmp	.+22     	; 0xa5e <Serial0_config+0x1ec>
 a48:	81 e0       	ldi	r24, 0x01	; 1
 a4a:	90 e0       	ldi	r25, 0x00	; 0
 a4c:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
 a50:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
 a54:	e0 ec       	ldi	r30, 0xC0	; 192
 a56:	f0 e0       	ldi	r31, 0x00	; 0
 a58:	80 81       	ld	r24, Z
 a5a:	82 60       	ori	r24, 0x02	; 2
 a5c:	80 83       	st	Z, r24
 a5e:	40 93 c2 00 	sts	0x00C2, r20	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
 a62:	e1 ec       	ldi	r30, 0xC1	; 193
 a64:	f0 e0       	ldi	r31, 0x00	; 0
 a66:	80 81       	ld	r24, Z
 a68:	88 61       	ori	r24, 0x18	; 24
 a6a:	80 83       	st	Z, r24
 a6c:	08 95       	ret

00000a6e <Serial1_config>:
 a6e:	10 92 c9 00 	sts	0x00C9, r1	; 0x8000c9 <__TEXT_REGION_LENGTH__+0x7000c9>
 a72:	2f ef       	ldi	r18, 0xFF	; 255
 a74:	39 ef       	ldi	r19, 0xF9	; 249
 a76:	50 e0       	ldi	r21, 0x00	; 0
 a78:	21 50       	subi	r18, 0x01	; 1
 a7a:	30 40       	sbci	r19, 0x00	; 0
 a7c:	50 40       	sbci	r21, 0x00	; 0
 a7e:	e1 f7       	brne	.-8      	; 0xa78 <Serial1_config+0xa>
 a80:	00 c0       	rjmp	.+0      	; 0xa82 <Serial1_config+0x14>
 a82:	00 00       	nop
 a84:	20 91 ce 00 	lds	r18, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>
 a88:	60 38       	cpi	r22, 0x80	; 128
 a8a:	20 e7       	ldi	r18, 0x70	; 112
 a8c:	72 07       	cpc	r23, r18
 a8e:	81 05       	cpc	r24, r1
 a90:	91 05       	cpc	r25, r1
 a92:	09 f4       	brne	.+2      	; 0xa96 <Serial1_config+0x28>
 a94:	8f c0       	rjmp	.+286    	; 0xbb4 <Serial1_config+0x146>
 a96:	24 f5       	brge	.+72     	; 0xae0 <Serial1_config+0x72>
 a98:	60 38       	cpi	r22, 0x80	; 128
 a9a:	55 e2       	ldi	r21, 0x25	; 37
 a9c:	75 07       	cpc	r23, r21
 a9e:	81 05       	cpc	r24, r1
 aa0:	91 05       	cpc	r25, r1
 aa2:	09 f4       	brne	.+2      	; 0xaa6 <Serial1_config+0x38>
 aa4:	63 c0       	rjmp	.+198    	; 0xb6c <Serial1_config+0xfe>
 aa6:	74 f4       	brge	.+28     	; 0xac4 <Serial1_config+0x56>
 aa8:	60 36       	cpi	r22, 0x60	; 96
 aaa:	39 e0       	ldi	r19, 0x09	; 9
 aac:	73 07       	cpc	r23, r19
 aae:	81 05       	cpc	r24, r1
 ab0:	91 05       	cpc	r25, r1
 ab2:	09 f4       	brne	.+2      	; 0xab6 <Serial1_config+0x48>
 ab4:	43 c0       	rjmp	.+134    	; 0xb3c <Serial1_config+0xce>
 ab6:	60 3c       	cpi	r22, 0xC0	; 192
 ab8:	72 41       	sbci	r23, 0x12	; 18
 aba:	81 05       	cpc	r24, r1
 abc:	91 05       	cpc	r25, r1
 abe:	09 f4       	brne	.+2      	; 0xac2 <Serial1_config+0x54>
 ac0:	49 c0       	rjmp	.+146    	; 0xb54 <Serial1_config+0xe6>
 ac2:	cb c0       	rjmp	.+406    	; 0xc5a <Serial1_config+0x1ec>
 ac4:	60 34       	cpi	r22, 0x40	; 64
 ac6:	28 e3       	ldi	r18, 0x38	; 56
 ac8:	72 07       	cpc	r23, r18
 aca:	81 05       	cpc	r24, r1
 acc:	91 05       	cpc	r25, r1
 ace:	09 f4       	brne	.+2      	; 0xad2 <Serial1_config+0x64>
 ad0:	59 c0       	rjmp	.+178    	; 0xb84 <Serial1_config+0x116>
 ad2:	61 15       	cp	r22, r1
 ad4:	7b 44       	sbci	r23, 0x4B	; 75
 ad6:	81 05       	cpc	r24, r1
 ad8:	91 05       	cpc	r25, r1
 ada:	09 f4       	brne	.+2      	; 0xade <Serial1_config+0x70>
 adc:	5f c0       	rjmp	.+190    	; 0xb9c <Serial1_config+0x12e>
 ade:	bd c0       	rjmp	.+378    	; 0xc5a <Serial1_config+0x1ec>
 ae0:	61 15       	cp	r22, r1
 ae2:	52 ec       	ldi	r21, 0xC2	; 194
 ae4:	75 07       	cpc	r23, r21
 ae6:	51 e0       	ldi	r21, 0x01	; 1
 ae8:	85 07       	cpc	r24, r21
 aea:	91 05       	cpc	r25, r1
 aec:	09 f4       	brne	.+2      	; 0xaf0 <Serial1_config+0x82>
 aee:	86 c0       	rjmp	.+268    	; 0xbfc <Serial1_config+0x18e>
 af0:	74 f4       	brge	.+28     	; 0xb0e <Serial1_config+0xa0>
 af2:	61 15       	cp	r22, r1
 af4:	36 e9       	ldi	r19, 0x96	; 150
 af6:	73 07       	cpc	r23, r19
 af8:	81 05       	cpc	r24, r1
 afa:	91 05       	cpc	r25, r1
 afc:	09 f4       	brne	.+2      	; 0xb00 <Serial1_config+0x92>
 afe:	66 c0       	rjmp	.+204    	; 0xbcc <Serial1_config+0x15e>
 b00:	61 15       	cp	r22, r1
 b02:	71 4e       	sbci	r23, 0xE1	; 225
 b04:	81 05       	cpc	r24, r1
 b06:	91 05       	cpc	r25, r1
 b08:	09 f4       	brne	.+2      	; 0xb0c <Serial1_config+0x9e>
 b0a:	6c c0       	rjmp	.+216    	; 0xbe4 <Serial1_config+0x176>
 b0c:	a6 c0       	rjmp	.+332    	; 0xc5a <Serial1_config+0x1ec>
 b0e:	60 32       	cpi	r22, 0x20	; 32
 b10:	21 ea       	ldi	r18, 0xA1	; 161
 b12:	72 07       	cpc	r23, r18
 b14:	27 e0       	ldi	r18, 0x07	; 7
 b16:	82 07       	cpc	r24, r18
 b18:	91 05       	cpc	r25, r1
 b1a:	09 f4       	brne	.+2      	; 0xb1e <Serial1_config+0xb0>
 b1c:	87 c0       	rjmp	.+270    	; 0xc2c <Serial1_config+0x1be>
 b1e:	60 34       	cpi	r22, 0x40	; 64
 b20:	32 e4       	ldi	r19, 0x42	; 66
 b22:	73 07       	cpc	r23, r19
 b24:	3f e0       	ldi	r19, 0x0F	; 15
 b26:	83 07       	cpc	r24, r19
 b28:	91 05       	cpc	r25, r1
 b2a:	09 f4       	brne	.+2      	; 0xb2e <Serial1_config+0xc0>
 b2c:	8b c0       	rjmp	.+278    	; 0xc44 <Serial1_config+0x1d6>
 b2e:	60 39       	cpi	r22, 0x90	; 144
 b30:	70 4d       	sbci	r23, 0xD0	; 208
 b32:	83 40       	sbci	r24, 0x03	; 3
 b34:	91 05       	cpc	r25, r1
 b36:	09 f0       	breq	.+2      	; 0xb3a <Serial1_config+0xcc>
 b38:	90 c0       	rjmp	.+288    	; 0xc5a <Serial1_config+0x1ec>
 b3a:	6c c0       	rjmp	.+216    	; 0xc14 <Serial1_config+0x1a6>
 b3c:	80 e4       	ldi	r24, 0x40	; 64
 b3e:	93 e0       	ldi	r25, 0x03	; 3
 b40:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>
 b44:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7000cc>
 b48:	e8 ec       	ldi	r30, 0xC8	; 200
 b4a:	f0 e0       	ldi	r31, 0x00	; 0
 b4c:	80 81       	ld	r24, Z
 b4e:	82 60       	ori	r24, 0x02	; 2
 b50:	80 83       	st	Z, r24
 b52:	83 c0       	rjmp	.+262    	; 0xc5a <Serial1_config+0x1ec>
 b54:	80 ea       	ldi	r24, 0xA0	; 160
 b56:	91 e0       	ldi	r25, 0x01	; 1
 b58:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>
 b5c:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7000cc>
 b60:	e8 ec       	ldi	r30, 0xC8	; 200
 b62:	f0 e0       	ldi	r31, 0x00	; 0
 b64:	80 81       	ld	r24, Z
 b66:	82 60       	ori	r24, 0x02	; 2
 b68:	80 83       	st	Z, r24
 b6a:	77 c0       	rjmp	.+238    	; 0xc5a <Serial1_config+0x1ec>
 b6c:	87 e6       	ldi	r24, 0x67	; 103
 b6e:	90 e0       	ldi	r25, 0x00	; 0
 b70:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>
 b74:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7000cc>
 b78:	e8 ec       	ldi	r30, 0xC8	; 200
 b7a:	f0 e0       	ldi	r31, 0x00	; 0
 b7c:	80 81       	ld	r24, Z
 b7e:	8d 7f       	andi	r24, 0xFD	; 253
 b80:	80 83       	st	Z, r24
 b82:	6b c0       	rjmp	.+214    	; 0xc5a <Serial1_config+0x1ec>
 b84:	8a e8       	ldi	r24, 0x8A	; 138
 b86:	90 e0       	ldi	r25, 0x00	; 0
 b88:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>
 b8c:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7000cc>
 b90:	e8 ec       	ldi	r30, 0xC8	; 200
 b92:	f0 e0       	ldi	r31, 0x00	; 0
 b94:	80 81       	ld	r24, Z
 b96:	82 60       	ori	r24, 0x02	; 2
 b98:	80 83       	st	Z, r24
 b9a:	5f c0       	rjmp	.+190    	; 0xc5a <Serial1_config+0x1ec>
 b9c:	83 e3       	ldi	r24, 0x33	; 51
 b9e:	90 e0       	ldi	r25, 0x00	; 0
 ba0:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>
 ba4:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7000cc>
 ba8:	e8 ec       	ldi	r30, 0xC8	; 200
 baa:	f0 e0       	ldi	r31, 0x00	; 0
 bac:	80 81       	ld	r24, Z
 bae:	8d 7f       	andi	r24, 0xFD	; 253
 bb0:	80 83       	st	Z, r24
 bb2:	53 c0       	rjmp	.+166    	; 0xc5a <Serial1_config+0x1ec>
 bb4:	84 e4       	ldi	r24, 0x44	; 68
 bb6:	90 e0       	ldi	r25, 0x00	; 0
 bb8:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>
 bbc:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7000cc>
 bc0:	e8 ec       	ldi	r30, 0xC8	; 200
 bc2:	f0 e0       	ldi	r31, 0x00	; 0
 bc4:	80 81       	ld	r24, Z
 bc6:	82 60       	ori	r24, 0x02	; 2
 bc8:	80 83       	st	Z, r24
 bca:	47 c0       	rjmp	.+142    	; 0xc5a <Serial1_config+0x1ec>
 bcc:	89 e1       	ldi	r24, 0x19	; 25
 bce:	90 e0       	ldi	r25, 0x00	; 0
 bd0:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>
 bd4:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7000cc>
 bd8:	e8 ec       	ldi	r30, 0xC8	; 200
 bda:	f0 e0       	ldi	r31, 0x00	; 0
 bdc:	80 81       	ld	r24, Z
 bde:	8d 7f       	andi	r24, 0xFD	; 253
 be0:	80 83       	st	Z, r24
 be2:	3b c0       	rjmp	.+118    	; 0xc5a <Serial1_config+0x1ec>
 be4:	82 e2       	ldi	r24, 0x22	; 34
 be6:	90 e0       	ldi	r25, 0x00	; 0
 be8:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>
 bec:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7000cc>
 bf0:	e8 ec       	ldi	r30, 0xC8	; 200
 bf2:	f0 e0       	ldi	r31, 0x00	; 0
 bf4:	80 81       	ld	r24, Z
 bf6:	82 60       	ori	r24, 0x02	; 2
 bf8:	80 83       	st	Z, r24
 bfa:	2f c0       	rjmp	.+94     	; 0xc5a <Serial1_config+0x1ec>
 bfc:	80 e1       	ldi	r24, 0x10	; 16
 bfe:	90 e0       	ldi	r25, 0x00	; 0
 c00:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>
 c04:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7000cc>
 c08:	e8 ec       	ldi	r30, 0xC8	; 200
 c0a:	f0 e0       	ldi	r31, 0x00	; 0
 c0c:	80 81       	ld	r24, Z
 c0e:	82 60       	ori	r24, 0x02	; 2
 c10:	80 83       	st	Z, r24
 c12:	23 c0       	rjmp	.+70     	; 0xc5a <Serial1_config+0x1ec>
 c14:	87 e0       	ldi	r24, 0x07	; 7
 c16:	90 e0       	ldi	r25, 0x00	; 0
 c18:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>
 c1c:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7000cc>
 c20:	e8 ec       	ldi	r30, 0xC8	; 200
 c22:	f0 e0       	ldi	r31, 0x00	; 0
 c24:	80 81       	ld	r24, Z
 c26:	82 60       	ori	r24, 0x02	; 2
 c28:	80 83       	st	Z, r24
 c2a:	17 c0       	rjmp	.+46     	; 0xc5a <Serial1_config+0x1ec>
 c2c:	83 e0       	ldi	r24, 0x03	; 3
 c2e:	90 e0       	ldi	r25, 0x00	; 0
 c30:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>
 c34:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7000cc>
 c38:	e8 ec       	ldi	r30, 0xC8	; 200
 c3a:	f0 e0       	ldi	r31, 0x00	; 0
 c3c:	80 81       	ld	r24, Z
 c3e:	82 60       	ori	r24, 0x02	; 2
 c40:	80 83       	st	Z, r24
 c42:	0b c0       	rjmp	.+22     	; 0xc5a <Serial1_config+0x1ec>
 c44:	81 e0       	ldi	r24, 0x01	; 1
 c46:	90 e0       	ldi	r25, 0x00	; 0
 c48:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>
 c4c:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7000cc>
 c50:	e8 ec       	ldi	r30, 0xC8	; 200
 c52:	f0 e0       	ldi	r31, 0x00	; 0
 c54:	80 81       	ld	r24, Z
 c56:	82 60       	ori	r24, 0x02	; 2
 c58:	80 83       	st	Z, r24
 c5a:	40 93 ca 00 	sts	0x00CA, r20	; 0x8000ca <__TEXT_REGION_LENGTH__+0x7000ca>
 c5e:	e9 ec       	ldi	r30, 0xC9	; 201
 c60:	f0 e0       	ldi	r31, 0x00	; 0
 c62:	80 81       	ld	r24, Z
 c64:	88 61       	ori	r24, 0x18	; 24
 c66:	80 83       	st	Z, r24
 c68:	08 95       	ret

00000c6a <init_sw_serial_getc_test>:
 c6a:	cf 92       	push	r12
 c6c:	df 92       	push	r13
 c6e:	ef 92       	push	r14
 c70:	ff 92       	push	r15
 c72:	cf 93       	push	r28
 c74:	df 93       	push	r29
 c76:	6b 01       	movw	r12, r22
 c78:	7c 01       	movw	r14, r24
 c7a:	ea 01       	movw	r28, r20
 c7c:	fa dd       	rcall	.-1036   	; 0x872 <Serial0_config>
 c7e:	ae 01       	movw	r20, r28
 c80:	c7 01       	movw	r24, r14
 c82:	b6 01       	movw	r22, r12
 c84:	f4 de       	rcall	.-536    	; 0xa6e <Serial1_config>
 c86:	df 91       	pop	r29
 c88:	cf 91       	pop	r28
 c8a:	ff 90       	pop	r15
 c8c:	ef 90       	pop	r14
 c8e:	df 90       	pop	r13
 c90:	cf 90       	pop	r12
 c92:	08 95       	ret

00000c94 <test_sw_serial_getc>:
 c94:	cf 93       	push	r28
 c96:	e8 ec       	ldi	r30, 0xC8	; 200
 c98:	f0 e0       	ldi	r31, 0x00	; 0
 c9a:	80 81       	ld	r24, Z
 c9c:	88 23       	and	r24, r24
 c9e:	ec f7       	brge	.-6      	; 0xc9a <test_sw_serial_getc+0x6>
 ca0:	c0 91 c8 00 	lds	r28, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7000c8>
 ca4:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>
 ca8:	90 91 c6 00 	lds	r25, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
 cac:	cc dd       	rcall	.-1128   	; 0x846 <Serial0_poll_write>
 cae:	8c 2f       	mov	r24, r28
 cb0:	8c 71       	andi	r24, 0x1C	; 28
 cb2:	89 f0       	breq	.+34     	; 0xcd6 <test_sw_serial_getc+0x42>
 cb4:	c4 ff       	sbrs	r28, 4
 cb6:	03 c0       	rjmp	.+6      	; 0xcbe <test_sw_serial_getc+0x2a>
 cb8:	88 e4       	ldi	r24, 0x48	; 72
 cba:	92 e0       	ldi	r25, 0x02	; 2
 cbc:	cc dd       	rcall	.-1128   	; 0x856 <Serial0_poll_print>
 cbe:	c3 ff       	sbrs	r28, 3
 cc0:	03 c0       	rjmp	.+6      	; 0xcc8 <test_sw_serial_getc+0x34>
 cc2:	88 e5       	ldi	r24, 0x58	; 88
 cc4:	92 e0       	ldi	r25, 0x02	; 2
 cc6:	c7 dd       	rcall	.-1138   	; 0x856 <Serial0_poll_print>
 cc8:	c2 ff       	sbrs	r28, 2
 cca:	03 c0       	rjmp	.+6      	; 0xcd2 <test_sw_serial_getc+0x3e>
 ccc:	88 e6       	ldi	r24, 0x68	; 104
 cce:	92 e0       	ldi	r25, 0x02	; 2
 cd0:	c2 dd       	rcall	.-1148   	; 0x856 <Serial0_poll_print>
 cd2:	8a e0       	ldi	r24, 0x0A	; 10
 cd4:	b8 dd       	rcall	.-1168   	; 0x846 <Serial0_poll_write>
 cd6:	cf 91       	pop	r28
 cd8:	08 95       	ret

00000cda <debug_init>:
 cda:	27 9a       	sbi	0x04, 7	; 4
 cdc:	85 b1       	in	r24, 0x05	; 5
 cde:	85 b9       	out	0x05, r24	; 5
 ce0:	08 95       	ret

00000ce2 <__divmodsi4>:
 ce2:	05 2e       	mov	r0, r21
 ce4:	97 fb       	bst	r25, 7
 ce6:	16 f4       	brtc	.+4      	; 0xcec <__divmodsi4+0xa>
 ce8:	00 94       	com	r0
 cea:	0f d0       	rcall	.+30     	; 0xd0a <__negsi2>
 cec:	57 fd       	sbrc	r21, 7
 cee:	05 d0       	rcall	.+10     	; 0xcfa <__divmodsi4_neg2>
 cf0:	14 d0       	rcall	.+40     	; 0xd1a <__udivmodsi4>
 cf2:	07 fc       	sbrc	r0, 7
 cf4:	02 d0       	rcall	.+4      	; 0xcfa <__divmodsi4_neg2>
 cf6:	46 f4       	brtc	.+16     	; 0xd08 <__divmodsi4_exit>
 cf8:	08 c0       	rjmp	.+16     	; 0xd0a <__negsi2>

00000cfa <__divmodsi4_neg2>:
 cfa:	50 95       	com	r21
 cfc:	40 95       	com	r20
 cfe:	30 95       	com	r19
 d00:	21 95       	neg	r18
 d02:	3f 4f       	sbci	r19, 0xFF	; 255
 d04:	4f 4f       	sbci	r20, 0xFF	; 255
 d06:	5f 4f       	sbci	r21, 0xFF	; 255

00000d08 <__divmodsi4_exit>:
 d08:	08 95       	ret

00000d0a <__negsi2>:
 d0a:	90 95       	com	r25
 d0c:	80 95       	com	r24
 d0e:	70 95       	com	r23
 d10:	61 95       	neg	r22
 d12:	7f 4f       	sbci	r23, 0xFF	; 255
 d14:	8f 4f       	sbci	r24, 0xFF	; 255
 d16:	9f 4f       	sbci	r25, 0xFF	; 255
 d18:	08 95       	ret

00000d1a <__udivmodsi4>:
 d1a:	a1 e2       	ldi	r26, 0x21	; 33
 d1c:	1a 2e       	mov	r1, r26
 d1e:	aa 1b       	sub	r26, r26
 d20:	bb 1b       	sub	r27, r27
 d22:	fd 01       	movw	r30, r26
 d24:	0d c0       	rjmp	.+26     	; 0xd40 <__udivmodsi4_ep>

00000d26 <__udivmodsi4_loop>:
 d26:	aa 1f       	adc	r26, r26
 d28:	bb 1f       	adc	r27, r27
 d2a:	ee 1f       	adc	r30, r30
 d2c:	ff 1f       	adc	r31, r31
 d2e:	a2 17       	cp	r26, r18
 d30:	b3 07       	cpc	r27, r19
 d32:	e4 07       	cpc	r30, r20
 d34:	f5 07       	cpc	r31, r21
 d36:	20 f0       	brcs	.+8      	; 0xd40 <__udivmodsi4_ep>
 d38:	a2 1b       	sub	r26, r18
 d3a:	b3 0b       	sbc	r27, r19
 d3c:	e4 0b       	sbc	r30, r20
 d3e:	f5 0b       	sbc	r31, r21

00000d40 <__udivmodsi4_ep>:
 d40:	66 1f       	adc	r22, r22
 d42:	77 1f       	adc	r23, r23
 d44:	88 1f       	adc	r24, r24
 d46:	99 1f       	adc	r25, r25
 d48:	1a 94       	dec	r1
 d4a:	69 f7       	brne	.-38     	; 0xd26 <__udivmodsi4_loop>
 d4c:	60 95       	com	r22
 d4e:	70 95       	com	r23
 d50:	80 95       	com	r24
 d52:	90 95       	com	r25
 d54:	9b 01       	movw	r18, r22
 d56:	ac 01       	movw	r20, r24
 d58:	bd 01       	movw	r22, r26
 d5a:	cf 01       	movw	r24, r30
 d5c:	08 95       	ret

00000d5e <_exit>:
 d5e:	f8 94       	cli

00000d60 <__stop_program>:
 d60:	ff cf       	rjmp	.-2      	; 0xd60 <__stop_program>
